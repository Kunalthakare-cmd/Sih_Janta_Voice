{"ast":null,"code":"var _jsxFileName = \"D:\\\\Kunal Files\\\\projects\\\\janta_voice_new1\\\\Janta_Voice_Final\\\\frontend\\\\src\\\\pages\\\\ComplaintForm.jsx\",\n  _s = $RefreshSig$();\n// // import React, { useState } from \"react\";\n// // import axios from \"axios\";\n// // import PlacesAutocomplete, { geocodeByAddress, getLatLng } from \"react-places-autocomplete\";\n\n// // export default function ComplaintForm() {\n// //   const [formData, setFormData] = useState({\n// //     name: \"\",\n// //     complaint: \"\",\n// //     location: \"\",\n// //     urgency: \"normal\",\n// //     department: \"\",\n// //   });\n\n// //   const [photo, setPhoto] = useState(null);\n// //   const [complaintId, setComplaintId] = useState(null);\n// //   const [submitted, setSubmitted] = useState(false);\n\n// //   const handleChange = (e) => {\n// //     setFormData({ ...formData, [e.target.name]: e.target.value });\n// //   };\n\n// //   // location select handler\n// //   const handleSelect = async (address) => {\n// //     setFormData({ ...formData, location: address });\n// //     try {\n// //       const results = await geocodeByAddress(address);\n// //       const latLng = await getLatLng(results[0]);\n// //       console.log(\"Coordinates: \", latLng); // agar latitude/longitude bhi chahiye backend ke liye\n// //     } catch (error) {\n// //       console.error(\"Error fetching coordinates\", error);\n// //     }\n// //   };\n\n// //   const handlePhotoChange = (e) => {\n// //     if (e.target.files && e.target.files[0]) {\n// //       setPhoto(e.target.files[0]);\n// //     }\n// //   };\n\n// //   const handleSubmit = async (e) => {\n// //     e.preventDefault();\n\n// //     try {\n// //       const formDataToSend = new FormData();\n// //       Object.keys(formData).forEach((key) => {\n// //         formDataToSend.append(key, formData[key]);\n// //       });\n// //       if (photo) {\n// //         formDataToSend.append(\"photo\", photo);\n// //       }\n\n// //       const res = await axios.post(\"http://localhost:5000/api/complaint\", formDataToSend, {\n// //         headers: { \"Content-Type\": \"multipart/form-data\" },\n// //       });\n\n// //       setComplaintId(res.data.complaint.complaintId);\n// //       setSubmitted(true);\n\n// //       setFormData({\n// //         name: \"\",\n// //         complaint: \"\",\n// //         location: \"\",\n// //         urgency: \"normal\",\n// //         department: \"\",\n// //       });\n// //       setPhoto(null);\n// //     } catch (err) {\n// //       console.error(\"Submission failed:\", err.message);\n// //       alert(\"Complaint submission failed. Try again.\");\n// //     }\n// //   };\n\n// //   return (\n// //     <div className=\"max-w-xl mx-auto mt-10 p-6 bg-white rounded shadow\">\n// //       <h2 className=\"text-2xl font-semibold mb-4\">Complaint Form</h2>\n// //       <form onSubmit={handleSubmit} className=\"space-y-4\">\n// //         <input\n// //           name=\"name\"\n// //           value={formData.name}\n// //           onChange={handleChange}\n// //           placeholder=\"Your Name\"\n// //           required\n// //           className=\"w-full border px-3 py-2 rounded\"\n// //         />\n// //         <textarea\n// //           name=\"complaint\"\n// //           value={formData.complaint}\n// //           onChange={handleChange}\n// //           placeholder=\"Describe your complaint\"\n// //           required\n// //           className=\"w-full border px-3 py-2 rounded\"\n// //         />\n\n// //         {/* Location Autocomplete */}\n// //         <PlacesAutocomplete\n// //           value={formData.location}\n// //           onChange={(address) => setFormData({ ...formData, location: address })}\n// //           onSelect={handleSelect}\n// //           searchOptions={{ componentRestrictions: { country: [\"in\"] } }} // restrict to India\n// //         >\n// //           {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\n// //             <div>\n// //               <input\n// //                 {...getInputProps({\n// //                   placeholder: \"Search Location (India only)\",\n// //                   className: \"w-full border px-3 py-2 rounded\",\n// //                 })}\n// //               />\n// //               <div className=\"border rounded bg-white mt-1\">\n// //                 {loading && <div className=\"p-2 text-gray-500\">Loading...</div>}\n// //                 {suggestions.map((suggestion) => {\n// //                   const className = suggestion.active\n// //                     ? \"p-2 bg-blue-100 cursor-pointer\"\n// //                     : \"p-2 cursor-pointer\";\n// //                   return (\n// //                     <div\n// //                       {...getSuggestionItemProps(suggestion, { className })}\n// //                       key={suggestion.placeId}\n// //                     >\n// //                       {suggestion.description}\n// //                     </div>\n// //                   );\n// //                 })}\n// //               </div>\n// //             </div>\n// //           )}\n// //         </PlacesAutocomplete>\n\n// //         {/* Department */}\n// //         <select\n// //           name=\"department\"\n// //           value={formData.department}\n// //           onChange={handleChange}\n// //           className=\"w-full border px-3 py-2 rounded\"\n// //           required\n// //         >\n// //           <option value=\"\">Select a Department</option>\n// //           <option value=\"Public Works\">Public Works</option>\n// //           <option value=\"Water Supply\">Water Supply</option>\n// //           <option value=\"Sanitation\">Sanitation</option>\n// //           <option value=\"Electricity\">Electricity</option>\n// //           <option value=\"Other\">Other</option>\n// //         </select>\n\n// //         {/* Urgency */}\n// //         <select\n// //           name=\"urgency\"\n// //           value={formData.urgency}\n// //           onChange={handleChange}\n// //           className=\"w-full border px-3 py-2 rounded\"\n// //         >\n// //           <option value=\"normal\">Normal</option>\n// //           <option value=\"urgent\">Urgent</option>\n// //         </select>\n\n// //         {/* Photo Upload */}\n// //         <div>\n// //           <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n// //             Upload / Capture Photo\n// //           </label>\n// //           <input\n// //             type=\"file\"\n// //             accept=\"image/*\"\n// //             capture=\"environment\"\n// //             onChange={handlePhotoChange}\n// //             className=\"w-full border px-3 py-2 rounded\"\n// //           />\n// //           {photo && (\n// //             <p className=\"text-xs text-gray-500 mt-1\">Selected: {photo.name}</p>\n// //           )}\n// //         </div>\n\n// //         <button\n// //           type=\"submit\"\n// //           className=\"bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700\"\n// //         >\n// //           Submit\n// //         </button>\n// //       </form>\n\n// //       {submitted && (\n// //         <div className=\"mt-6 text-green-700 font-semibold\">\n// //           Complaint submitted successfully!<br />\n// //           Your Complaint ID: <span className=\"font-bold\">{complaintId}</span>\n// //         </div>\n// //       )}\n// //     </div>\n// //   );\n// // }\n// import React, { useState } from \"react\";\n// import axios from \"axios\";\n// import PlacesAutocomplete, {\n//   geocodeByAddress,\n//   getLatLng,\n// } from \"react-places-autocomplete\";\n\n// export default function ComplaintForm() {\n//   const [formData, setFormData] = useState({\n//     name: \"\",\n//     complaint: \"\",\n//     location: \"\",\n//     urgency: \"normal\",\n//     department: \"\",\n//   });\n\n//   const [photo, setPhoto] = useState(null);\n//   const [complaintId, setComplaintId] = useState(null);\n//   const [submitted, setSubmitted] = useState(false);\n//   const [isSubmitting, setIsSubmitting] = useState(false);\n//   const [liveCoords, setLiveCoords] = useState(null);\n\n//   const handleChange = (e) => {\n//     setFormData({ ...formData, [e.target.name]: e.target.value });\n//   };\n\n//   const handlePhotoChange = (e) => {\n//     if (e.target.files && e.target.files[0]) {\n//       setPhoto(e.target.files[0]);\n//     }\n//   };\n\n//   // Google Places Autocomplete handler\n//   const handleSelect = async (address) => {\n//     setFormData({ ...formData, location: address });\n//     setLiveCoords(null); // Clear live coords if user selects an address\n//     try {\n//       const results = await geocodeByAddress(address);\n//       const latLng = await getLatLng(results[0]);\n//       console.log(\"Selected Location Coordinates: \", latLng);\n//       // You can store these coords in state if your backend needs them\n//     } catch (error) {\n//       console.error(\"Error fetching coordinates\", error);\n//     }\n//   };\n\n//   // Live location button handler\n//   const handleLiveLocation = () => {\n//     if (!navigator.geolocation) {\n//       alert(\"Geolocation is not supported by your browser.\");\n//       return;\n//     }\n\n//     setIsSubmitting(true);\n//     navigator.geolocation.getCurrentPosition(\n//       (position) => {\n//         const { latitude, longitude } = position.coords;\n//         setLiveCoords({ latitude, longitude });\n//         setFormData({ ...formData, location: \"Live Location Captured\" });\n//         alert(\"Live location successfully captured!\");\n//         setIsSubmitting(false);\n//       },\n//       (error) => {\n//         console.warn(\"Geolocation error:\", error);\n//         alert(\"⚠ Location not available. Please enable GPS for accurate location.\");\n//         setLiveCoords(null);\n//         setIsSubmitting(false);\n//       },\n//       { enableHighAccuracy: true, timeout: 15000, maximumAge: 0 }\n//     );\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     setIsSubmitting(true);\n\n//     try {\n//       const formDataToSend = new FormData();\n//       Object.keys(formData).forEach((key) => {\n//         formDataToSend.append(key, formData[key]);\n//       });\n\n//       if (photo) {\n//         formDataToSend.append(\"photo\", photo);\n//       }\n\n//       // Logic to determine which location to send\n//       let latLng = null;\n//       if (liveCoords) {\n//         // Option 1: Live location is captured\n//         latLng = liveCoords;\n//       } else if (formData.location) {\n//         // Option 2: User typed and selected a location\n//         const results = await geocodeByAddress(formData.location);\n//         latLng = await getLatLng(results[0]);\n//       }\n\n//       if (latLng) {\n//         formDataToSend.append(\"latitude\", latLng.latitude);\n//         formDataToSend.append(\"longitude\", latLng.longitude);\n//       }\n\n//       const res = await axios.post(\"http://localhost:5000/api/complaint\", formDataToSend, {\n//         headers: { \"Content-Type\": \"multipart/form-data\" },\n//       });\n\n//       setComplaintId(res.data.complaint.complaintId);\n//       setSubmitted(true);\n//       alert(`Complaint submitted successfully! Your Complaint ID is: ${res.data.complaint.complaintId}`);\n\n//       // Reset form\n//       setFormData({\n//         name: \"\",\n//         complaint: \"\",\n//         location: \"\",\n//         urgency: \"normal\",\n//         department: \"\",\n//       });\n//       setPhoto(null);\n//       setLiveCoords(null);\n//     } catch (err) {\n//       console.error(\"Submission failed:\", err.message);\n//       alert(\"Complaint submission failed. Please try again.\");\n//     } finally {\n//       setIsSubmitting(false);\n//     }\n//   };\n\n//   return (\n//     <div className=\"max-w-xl mx-auto mt-10 p-6 bg-white rounded shadow\">\n//       <h2 className=\"text-2xl font-semibold mb-4\">Complaint Form</h2>\n//       <form onSubmit={handleSubmit} className=\"space-y-4\">\n//         {/* Input fields */}\n//         <input\n//           name=\"name\"\n//           value={formData.name}\n//           onChange={handleChange}\n//           placeholder=\"Your Name\"\n//           required\n//           className=\"w-full border px-3 py-2 rounded\"\n//         />\n//         <textarea\n//           name=\"complaint\"\n//           value={formData.complaint}\n//           onChange={handleChange}\n//           placeholder=\"Describe your complaint\"\n//           required\n//           className=\"w-full border px-3 py-2 rounded\"\n//         />\n\n//         {/* Location Section */}\n//         <div>\n//           <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n//             Location\n//           </label>\n//           <div className=\"flex gap-2\">\n//             <PlacesAutocomplete\n//               value={formData.location}\n//               onChange={(address) => {\n//                 setFormData({ ...formData, location: address });\n//                 setLiveCoords(null);\n//               }}\n//               onSelect={handleSelect}\n//               searchOptions={{ componentRestrictions: { country: [\"in\"] } }}\n//             >\n//               {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\n//                 <div className=\"w-full\">\n//                   <input\n//                     {...getInputProps({\n//                       placeholder: \"Search Location...\",\n//                       className: \"w-full border px-3 py-2 rounded\",\n//                     })}\n//                   />\n//                   <div className=\"border rounded bg-white mt-1\">\n//                     {loading && <div className=\"p-2 text-gray-500\">Loading...</div>}\n//                     {suggestions.map((suggestion) => {\n//                       const className = suggestion.active\n//                         ? \"p-2 bg-blue-100 cursor-pointer\"\n//                         : \"p-2 cursor-pointer\";\n//                       return (\n//                         <div\n//                           {...getSuggestionItemProps(suggestion, { className })}\n//                           key={suggestion.placeId}\n//                         >\n//                           {suggestion.description}\n//                         </div>\n//                       );\n//                     })}\n//                   </div>\n//                 </div>\n//               )}\n//             </PlacesAutocomplete>\n//             <button\n//               type=\"button\"\n//               onClick={handleLiveLocation}\n//               disabled={isSubmitting}\n//               className={`px-4 py-2 rounded text-sm text-white ${\n//                 isSubmitting ? \"bg-gray-400\" : \"bg-blue-600\"\n//               }`}\n//             >\n//               Live\n//             </button>\n//           </div>\n//           {liveCoords && (\n//             <p className=\"text-xs text-green-600 mt-1\">\n//               Live Location: {liveCoords.latitude.toFixed(4)}, {liveCoords.longitude.toFixed(4)}\n//             </p>\n//           )}\n//         </div>\n\n//         {/* Other form elements */}\n//         <select\n//           name=\"department\"\n//           value={formData.department}\n//           onChange={handleChange}\n//           className=\"w-full border px-3 py-2 rounded\"\n//           required\n//         >\n//           <option value=\"\">Select a Department</option>\n//           <option value=\"Public Works\">Public Works</option>\n//           <option value=\"Water Supply\">Water Supply</option>\n//           <option value=\"Sanitation\">Sanitation</option>\n//           <option value=\"Electricity\">Electricity</option>\n//           <option value=\"Other\">Other</option>\n//         </select>\n\n//         <select\n//           name=\"urgency\"\n//           value={formData.urgency}\n//           onChange={handleChange}\n//           className=\"w-full border px-3 py-2 rounded\"\n//         >\n//           <option value=\"normal\">Normal</option>\n//           <option value=\"urgent\">Urgent</option>\n//         </select>\n\n//         <div>\n//           <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n//             Upload / Capture Photo\n//           </label>\n//           <input\n//             type=\"file\"\n//             accept=\"image/*\"\n//             capture=\"environment\"\n//             onChange={handlePhotoChange}\n//             className=\"w-full border px-3 py-2 rounded\"\n//           />\n//           {photo && (\n//             <p className=\"text-xs text-gray-500 mt-1\">Selected: {photo.name}</p>\n//           )}\n//         </div>\n\n//         <button\n//           type=\"submit\"\n//           disabled={isSubmitting}\n//           className={`w-full ${\n//             isSubmitting ? \"bg-gray-400\" : \"bg-blue-600\"\n//           } text-white px-4 py-2 rounded hover:bg-blue-700`}\n//         >\n//           {isSubmitting ? \"Submitting...\" : \"Submit Complaint\"}\n//         </button>\n//       </form>\n\n//       {submitted && (\n//         <div className=\"mt-6 text-green-700 font-semibold\">\n//           Complaint submitted successfully!<br />\n//           Your Complaint ID: <span className=\"font-bold\">{complaintId}</span>\n//         </div>\n//       )}\n//     </div>\n//   );\n// }\n\nimport React, { useState, useRef, createElement as _createElement } from \"react\";\nimport axios from \"axios\";\nimport PlacesAutocomplete, { geocodeByAddress, getLatLng } from \"react-places-autocomplete\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ComplaintForm() {\n  _s();\n  const [formData, setFormData] = useState({\n    complaint: \"\",\n    location: \"\"\n  });\n  const [photo, setPhoto] = useState(null);\n  const [complaintId, setComplaintId] = useState(null);\n  const [submitted, setSubmitted] = useState(false);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [liveCoords, setLiveCoords] = useState(null);\n  const [recording, setRecording] = useState(false);\n  const recognitionRef = useRef(null);\n\n  // 🔤 Transliteration (Hindi → Hinglish)\n  const transliterateToHinglish = async text => {\n    try {\n      const res = await fetch(`https://inputtools.google.com/request?text=${encodeURIComponent(text)}&itc=hi-t-i0-und&num=1&cp=0&cs=1&ie=utf-8&oe=utf-8&app=demopage`);\n      const data = await res.json();\n      if (data[0] === \"SUCCESS\") {\n        return data[1][0][1][0];\n      }\n      return text;\n    } catch (err) {\n      console.error(\"Transliteration API error:\", err);\n      return text;\n    }\n  };\n\n  // 🎙️ Speech-to-text\n  const handleSpeechToText = () => {\n    const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n    if (!SpeechRecognition) {\n      alert(\"Speech recognition is not supported in this browser. Please use Chrome.\");\n      return;\n    }\n    if (recording) {\n      var _recognitionRef$curre;\n      (_recognitionRef$curre = recognitionRef.current) === null || _recognitionRef$curre === void 0 ? void 0 : _recognitionRef$curre.stop();\n      setRecording(false);\n      return;\n    }\n    const recognition = new SpeechRecognition();\n    recognition.lang = \"hi-IN\";\n    recognition.continuous = true;\n    recognition.interimResults = true;\n    recognition.onresult = async event => {\n      let transcript = \"\";\n      for (let i = 0; i < event.results.length; i++) {\n        transcript += event.results[i][0].transcript + \" \";\n      }\n      const hinglish = await transliterateToHinglish(transcript.trim());\n      setFormData(prev => ({\n        ...prev,\n        complaint: hinglish\n      }));\n    };\n    recognition.onerror = err => {\n      console.error(\"Speech Recognition Error:\", err);\n      setRecording(false);\n    };\n    recognition.onend = () => {\n      setRecording(false);\n    };\n    recognition.start();\n    recognitionRef.current = recognition;\n    setRecording(true);\n  };\n  const handlePhotoChange = e => {\n    if (e.target.files && e.target.files[0]) {\n      setPhoto(e.target.files[0]);\n    }\n  };\n  const handleSelect = async address => {\n    setFormData({\n      ...formData,\n      location: address\n    });\n    setLiveCoords(null);\n    try {\n      const results = await geocodeByAddress(address);\n      await getLatLng(results[0]);\n    } catch (error) {\n      console.error(\"Error fetching coordinates\", error);\n    }\n  };\n  const handleLiveLocation = () => {\n    if (!navigator.geolocation) {\n      alert(\"Geolocation is not supported by your browser.\");\n      return;\n    }\n    setIsSubmitting(true);\n    navigator.geolocation.getCurrentPosition(position => {\n      const {\n        latitude,\n        longitude\n      } = position.coords;\n      setLiveCoords({\n        latitude,\n        longitude\n      });\n      setFormData({\n        ...formData,\n        location: \"Live Location Captured\"\n      });\n      alert(\"Live location successfully captured!\");\n      setIsSubmitting(false);\n    }, error => {\n      console.warn(\"Geolocation error:\", error);\n      alert(\"⚠ Location not available. Please enable GPS.\");\n      setLiveCoords(null);\n      setIsSubmitting(false);\n    }, {\n      enableHighAccuracy: true,\n      timeout: 15000,\n      maximumAge: 0\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!formData.complaint.trim()) {\n      alert(\"Please speak or type your complaint.\");\n      return;\n    }\n    setIsSubmitting(true);\n    try {\n      const formDataToSend = new FormData();\n      formDataToSend.append(\"complaint\", formData.complaint);\n      formDataToSend.append(\"location\", formData.location);\n      if (photo) {\n        formDataToSend.append(\"photo\", photo);\n      }\n      if (liveCoords) {\n        formDataToSend.append(\"latitude\", liveCoords.latitude);\n        formDataToSend.append(\"longitude\", liveCoords.longitude);\n      }\n      const res = await axios.post(\"http://localhost:5000/api/complaint\", formDataToSend, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      });\n      setComplaintId(res.data.complaint.complaintId);\n      setSubmitted(true);\n      alert(`Complaint submitted! ID: ${res.data.complaint.complaintId}`);\n      setFormData({\n        complaint: \"\",\n        location: \"\"\n      });\n      setPhoto(null);\n      setLiveCoords(null);\n    } catch (err) {\n      console.error(\"Submission failed:\", err.message);\n      alert(\"Complaint submission failed.\");\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-xl mx-auto mt-10 p-6 bg-white rounded shadow\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-semibold mb-4\",\n      children: \"Complaint Form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 642,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"space-y-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleSpeechToText,\n        className: `w-full px-4 py-2 rounded-lg font-semibold ${recording ? \"bg-red-500\" : \"bg-purple-600\"} text-white`,\n        children: recording ? \"बोलना रोकें\" : \"शिकायत बोलें\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 646,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        name: \"complaint\",\n        value: formData.complaint,\n        onChange: e => setFormData({\n          ...formData,\n          complaint: e.target.value\n        }),\n        placeholder: \"Describe your complaint or speak...\",\n        required: true,\n        className: \"w-full border px-3 py-2 rounded\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 657,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block text-sm font-medium text-gray-700 mb-1\",\n          children: \"Location\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 668,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex gap-2\",\n          children: [/*#__PURE__*/_jsxDEV(PlacesAutocomplete, {\n            value: formData.location,\n            onChange: address => {\n              setFormData({\n                ...formData,\n                location: address\n              });\n              setLiveCoords(null);\n            },\n            onSelect: handleSelect,\n            searchOptions: {\n              componentRestrictions: {\n                country: [\"in\"]\n              }\n            },\n            children: ({\n              getInputProps,\n              suggestions,\n              getSuggestionItemProps,\n              loading\n            }) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"w-full\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                ...getInputProps({\n                  placeholder: \"Search Location...\",\n                  className: \"w-full border px-3 py-2 rounded\"\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 683,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"border rounded bg-white mt-1\",\n                children: [loading && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"p-2 text-gray-500\",\n                  children: \"Loading...\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 690,\n                  columnNumber: 33\n                }, this), suggestions.map(suggestion => {\n                  const className = suggestion.active ? \"p-2 bg-blue-100 cursor-pointer\" : \"p-2 cursor-pointer\";\n                  return /*#__PURE__*/_createElement(\"div\", {\n                    ...getSuggestionItemProps(suggestion, {\n                      className\n                    }),\n                    key: suggestion.placeId,\n                    __self: this,\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 696,\n                      columnNumber: 25\n                    }\n                  }, suggestion.description);\n                })]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 689,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 682,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 672,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: handleLiveLocation,\n            disabled: isSubmitting,\n            className: `px-4 py-2 rounded text-sm text-white ${isSubmitting ? \"bg-gray-400\" : \"bg-blue-600\"}`,\n            children: \"Live\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 708,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 671,\n          columnNumber: 11\n        }, this), liveCoords && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-xs text-green-600 mt-1\",\n          children: [\"Live Location: \", liveCoords.latitude.toFixed(4), \", \", liveCoords.longitude.toFixed(4)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 720,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 667,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block text-sm font-medium text-gray-700 mb-1\",\n          children: \"Upload / Capture Photo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 728,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \"image/*\",\n          capture: \"environment\",\n          onChange: handlePhotoChange,\n          className: \"w-full border px-3 py-2 rounded\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 731,\n          columnNumber: 11\n        }, this), photo && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-xs text-gray-500 mt-1\",\n          children: [\"Selected: \", photo.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 739,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 727,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: isSubmitting,\n        className: `w-full ${isSubmitting ? \"bg-gray-400\" : \"bg-green-600\"} text-white px-4 py-2 rounded`,\n        children: isSubmitting ? \"Submitting...\" : \"Submit Complaint\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 743,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 643,\n      columnNumber: 7\n    }, this), submitted && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-6 text-green-700 font-semibold\",\n      children: [\"Complaint submitted successfully!\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 756,\n        columnNumber: 44\n      }, this), \"Your Complaint ID: \", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"font-bold\",\n        children: complaintId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 757,\n        columnNumber: 30\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 755,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 641,\n    columnNumber: 5\n  }, this);\n}\n_s(ComplaintForm, \"ZgICD4BkY2Cb8KCUZbbOtTZHOjk=\");\n_c = ComplaintForm;\nvar _c;\n$RefreshReg$(_c, \"ComplaintForm\");","map":{"version":3,"names":["React","useState","useRef","createElement","_createElement","axios","PlacesAutocomplete","geocodeByAddress","getLatLng","jsxDEV","_jsxDEV","ComplaintForm","_s","formData","setFormData","complaint","location","photo","setPhoto","complaintId","setComplaintId","submitted","setSubmitted","isSubmitting","setIsSubmitting","liveCoords","setLiveCoords","recording","setRecording","recognitionRef","transliterateToHinglish","text","res","fetch","encodeURIComponent","data","json","err","console","error","handleSpeechToText","SpeechRecognition","window","webkitSpeechRecognition","alert","_recognitionRef$curre","current","stop","recognition","lang","continuous","interimResults","onresult","event","transcript","i","results","length","hinglish","trim","prev","onerror","onend","start","handlePhotoChange","e","target","files","handleSelect","address","handleLiveLocation","navigator","geolocation","getCurrentPosition","position","latitude","longitude","coords","warn","enableHighAccuracy","timeout","maximumAge","handleSubmit","preventDefault","formDataToSend","FormData","append","post","headers","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onClick","name","value","onChange","placeholder","required","onSelect","searchOptions","componentRestrictions","country","getInputProps","suggestions","getSuggestionItemProps","loading","map","suggestion","active","key","placeId","__self","__source","description","disabled","toFixed","accept","capture","_c","$RefreshReg$"],"sources":["D:/Kunal Files/projects/janta_voice_new1/Janta_Voice_Final/frontend/src/pages/ComplaintForm.jsx"],"sourcesContent":["// // import React, { useState } from \"react\";\r\n// // import axios from \"axios\";\r\n// // import PlacesAutocomplete, { geocodeByAddress, getLatLng } from \"react-places-autocomplete\";\r\n\r\n// // export default function ComplaintForm() {\r\n// //   const [formData, setFormData] = useState({\r\n// //     name: \"\",\r\n// //     complaint: \"\",\r\n// //     location: \"\",\r\n// //     urgency: \"normal\",\r\n// //     department: \"\",\r\n// //   });\r\n\r\n// //   const [photo, setPhoto] = useState(null);\r\n// //   const [complaintId, setComplaintId] = useState(null);\r\n// //   const [submitted, setSubmitted] = useState(false);\r\n\r\n// //   const handleChange = (e) => {\r\n// //     setFormData({ ...formData, [e.target.name]: e.target.value });\r\n// //   };\r\n\r\n// //   // location select handler\r\n// //   const handleSelect = async (address) => {\r\n// //     setFormData({ ...formData, location: address });\r\n// //     try {\r\n// //       const results = await geocodeByAddress(address);\r\n// //       const latLng = await getLatLng(results[0]);\r\n// //       console.log(\"Coordinates: \", latLng); // agar latitude/longitude bhi chahiye backend ke liye\r\n// //     } catch (error) {\r\n// //       console.error(\"Error fetching coordinates\", error);\r\n// //     }\r\n// //   };\r\n\r\n// //   const handlePhotoChange = (e) => {\r\n// //     if (e.target.files && e.target.files[0]) {\r\n// //       setPhoto(e.target.files[0]);\r\n// //     }\r\n// //   };\r\n\r\n// //   const handleSubmit = async (e) => {\r\n// //     e.preventDefault();\r\n\r\n// //     try {\r\n// //       const formDataToSend = new FormData();\r\n// //       Object.keys(formData).forEach((key) => {\r\n// //         formDataToSend.append(key, formData[key]);\r\n// //       });\r\n// //       if (photo) {\r\n// //         formDataToSend.append(\"photo\", photo);\r\n// //       }\r\n\r\n// //       const res = await axios.post(\"http://localhost:5000/api/complaint\", formDataToSend, {\r\n// //         headers: { \"Content-Type\": \"multipart/form-data\" },\r\n// //       });\r\n\r\n// //       setComplaintId(res.data.complaint.complaintId);\r\n// //       setSubmitted(true);\r\n\r\n// //       setFormData({\r\n// //         name: \"\",\r\n// //         complaint: \"\",\r\n// //         location: \"\",\r\n// //         urgency: \"normal\",\r\n// //         department: \"\",\r\n// //       });\r\n// //       setPhoto(null);\r\n// //     } catch (err) {\r\n// //       console.error(\"Submission failed:\", err.message);\r\n// //       alert(\"Complaint submission failed. Try again.\");\r\n// //     }\r\n// //   };\r\n\r\n// //   return (\r\n// //     <div className=\"max-w-xl mx-auto mt-10 p-6 bg-white rounded shadow\">\r\n// //       <h2 className=\"text-2xl font-semibold mb-4\">Complaint Form</h2>\r\n// //       <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n// //         <input\r\n// //           name=\"name\"\r\n// //           value={formData.name}\r\n// //           onChange={handleChange}\r\n// //           placeholder=\"Your Name\"\r\n// //           required\r\n// //           className=\"w-full border px-3 py-2 rounded\"\r\n// //         />\r\n// //         <textarea\r\n// //           name=\"complaint\"\r\n// //           value={formData.complaint}\r\n// //           onChange={handleChange}\r\n// //           placeholder=\"Describe your complaint\"\r\n// //           required\r\n// //           className=\"w-full border px-3 py-2 rounded\"\r\n// //         />\r\n\r\n// //         {/* Location Autocomplete */}\r\n// //         <PlacesAutocomplete\r\n// //           value={formData.location}\r\n// //           onChange={(address) => setFormData({ ...formData, location: address })}\r\n// //           onSelect={handleSelect}\r\n// //           searchOptions={{ componentRestrictions: { country: [\"in\"] } }} // restrict to India\r\n// //         >\r\n// //           {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\r\n// //             <div>\r\n// //               <input\r\n// //                 {...getInputProps({\r\n// //                   placeholder: \"Search Location (India only)\",\r\n// //                   className: \"w-full border px-3 py-2 rounded\",\r\n// //                 })}\r\n// //               />\r\n// //               <div className=\"border rounded bg-white mt-1\">\r\n// //                 {loading && <div className=\"p-2 text-gray-500\">Loading...</div>}\r\n// //                 {suggestions.map((suggestion) => {\r\n// //                   const className = suggestion.active\r\n// //                     ? \"p-2 bg-blue-100 cursor-pointer\"\r\n// //                     : \"p-2 cursor-pointer\";\r\n// //                   return (\r\n// //                     <div\r\n// //                       {...getSuggestionItemProps(suggestion, { className })}\r\n// //                       key={suggestion.placeId}\r\n// //                     >\r\n// //                       {suggestion.description}\r\n// //                     </div>\r\n// //                   );\r\n// //                 })}\r\n// //               </div>\r\n// //             </div>\r\n// //           )}\r\n// //         </PlacesAutocomplete>\r\n\r\n// //         {/* Department */}\r\n// //         <select\r\n// //           name=\"department\"\r\n// //           value={formData.department}\r\n// //           onChange={handleChange}\r\n// //           className=\"w-full border px-3 py-2 rounded\"\r\n// //           required\r\n// //         >\r\n// //           <option value=\"\">Select a Department</option>\r\n// //           <option value=\"Public Works\">Public Works</option>\r\n// //           <option value=\"Water Supply\">Water Supply</option>\r\n// //           <option value=\"Sanitation\">Sanitation</option>\r\n// //           <option value=\"Electricity\">Electricity</option>\r\n// //           <option value=\"Other\">Other</option>\r\n// //         </select>\r\n\r\n// //         {/* Urgency */}\r\n// //         <select\r\n// //           name=\"urgency\"\r\n// //           value={formData.urgency}\r\n// //           onChange={handleChange}\r\n// //           className=\"w-full border px-3 py-2 rounded\"\r\n// //         >\r\n// //           <option value=\"normal\">Normal</option>\r\n// //           <option value=\"urgent\">Urgent</option>\r\n// //         </select>\r\n\r\n// //         {/* Photo Upload */}\r\n// //         <div>\r\n// //           <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n// //             Upload / Capture Photo\r\n// //           </label>\r\n// //           <input\r\n// //             type=\"file\"\r\n// //             accept=\"image/*\"\r\n// //             capture=\"environment\"\r\n// //             onChange={handlePhotoChange}\r\n// //             className=\"w-full border px-3 py-2 rounded\"\r\n// //           />\r\n// //           {photo && (\r\n// //             <p className=\"text-xs text-gray-500 mt-1\">Selected: {photo.name}</p>\r\n// //           )}\r\n// //         </div>\r\n\r\n// //         <button\r\n// //           type=\"submit\"\r\n// //           className=\"bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700\"\r\n// //         >\r\n// //           Submit\r\n// //         </button>\r\n// //       </form>\r\n\r\n// //       {submitted && (\r\n// //         <div className=\"mt-6 text-green-700 font-semibold\">\r\n// //           Complaint submitted successfully!<br />\r\n// //           Your Complaint ID: <span className=\"font-bold\">{complaintId}</span>\r\n// //         </div>\r\n// //       )}\r\n// //     </div>\r\n// //   );\r\n// // }\r\n// import React, { useState } from \"react\";\r\n// import axios from \"axios\";\r\n// import PlacesAutocomplete, {\r\n//   geocodeByAddress,\r\n//   getLatLng,\r\n// } from \"react-places-autocomplete\";\r\n\r\n// export default function ComplaintForm() {\r\n//   const [formData, setFormData] = useState({\r\n//     name: \"\",\r\n//     complaint: \"\",\r\n//     location: \"\",\r\n//     urgency: \"normal\",\r\n//     department: \"\",\r\n//   });\r\n\r\n//   const [photo, setPhoto] = useState(null);\r\n//   const [complaintId, setComplaintId] = useState(null);\r\n//   const [submitted, setSubmitted] = useState(false);\r\n//   const [isSubmitting, setIsSubmitting] = useState(false);\r\n//   const [liveCoords, setLiveCoords] = useState(null);\r\n\r\n//   const handleChange = (e) => {\r\n//     setFormData({ ...formData, [e.target.name]: e.target.value });\r\n//   };\r\n\r\n//   const handlePhotoChange = (e) => {\r\n//     if (e.target.files && e.target.files[0]) {\r\n//       setPhoto(e.target.files[0]);\r\n//     }\r\n//   };\r\n\r\n//   // Google Places Autocomplete handler\r\n//   const handleSelect = async (address) => {\r\n//     setFormData({ ...formData, location: address });\r\n//     setLiveCoords(null); // Clear live coords if user selects an address\r\n//     try {\r\n//       const results = await geocodeByAddress(address);\r\n//       const latLng = await getLatLng(results[0]);\r\n//       console.log(\"Selected Location Coordinates: \", latLng);\r\n//       // You can store these coords in state if your backend needs them\r\n//     } catch (error) {\r\n//       console.error(\"Error fetching coordinates\", error);\r\n//     }\r\n//   };\r\n\r\n//   // Live location button handler\r\n//   const handleLiveLocation = () => {\r\n//     if (!navigator.geolocation) {\r\n//       alert(\"Geolocation is not supported by your browser.\");\r\n//       return;\r\n//     }\r\n\r\n//     setIsSubmitting(true);\r\n//     navigator.geolocation.getCurrentPosition(\r\n//       (position) => {\r\n//         const { latitude, longitude } = position.coords;\r\n//         setLiveCoords({ latitude, longitude });\r\n//         setFormData({ ...formData, location: \"Live Location Captured\" });\r\n//         alert(\"Live location successfully captured!\");\r\n//         setIsSubmitting(false);\r\n//       },\r\n//       (error) => {\r\n//         console.warn(\"Geolocation error:\", error);\r\n//         alert(\"⚠ Location not available. Please enable GPS for accurate location.\");\r\n//         setLiveCoords(null);\r\n//         setIsSubmitting(false);\r\n//       },\r\n//       { enableHighAccuracy: true, timeout: 15000, maximumAge: 0 }\r\n//     );\r\n//   };\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     setIsSubmitting(true);\r\n\r\n//     try {\r\n//       const formDataToSend = new FormData();\r\n//       Object.keys(formData).forEach((key) => {\r\n//         formDataToSend.append(key, formData[key]);\r\n//       });\r\n\r\n//       if (photo) {\r\n//         formDataToSend.append(\"photo\", photo);\r\n//       }\r\n\r\n//       // Logic to determine which location to send\r\n//       let latLng = null;\r\n//       if (liveCoords) {\r\n//         // Option 1: Live location is captured\r\n//         latLng = liveCoords;\r\n//       } else if (formData.location) {\r\n//         // Option 2: User typed and selected a location\r\n//         const results = await geocodeByAddress(formData.location);\r\n//         latLng = await getLatLng(results[0]);\r\n//       }\r\n\r\n//       if (latLng) {\r\n//         formDataToSend.append(\"latitude\", latLng.latitude);\r\n//         formDataToSend.append(\"longitude\", latLng.longitude);\r\n//       }\r\n\r\n//       const res = await axios.post(\"http://localhost:5000/api/complaint\", formDataToSend, {\r\n//         headers: { \"Content-Type\": \"multipart/form-data\" },\r\n//       });\r\n\r\n//       setComplaintId(res.data.complaint.complaintId);\r\n//       setSubmitted(true);\r\n//       alert(`Complaint submitted successfully! Your Complaint ID is: ${res.data.complaint.complaintId}`);\r\n\r\n//       // Reset form\r\n//       setFormData({\r\n//         name: \"\",\r\n//         complaint: \"\",\r\n//         location: \"\",\r\n//         urgency: \"normal\",\r\n//         department: \"\",\r\n//       });\r\n//       setPhoto(null);\r\n//       setLiveCoords(null);\r\n//     } catch (err) {\r\n//       console.error(\"Submission failed:\", err.message);\r\n//       alert(\"Complaint submission failed. Please try again.\");\r\n//     } finally {\r\n//       setIsSubmitting(false);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"max-w-xl mx-auto mt-10 p-6 bg-white rounded shadow\">\r\n//       <h2 className=\"text-2xl font-semibold mb-4\">Complaint Form</h2>\r\n//       <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n//         {/* Input fields */}\r\n//         <input\r\n//           name=\"name\"\r\n//           value={formData.name}\r\n//           onChange={handleChange}\r\n//           placeholder=\"Your Name\"\r\n//           required\r\n//           className=\"w-full border px-3 py-2 rounded\"\r\n//         />\r\n//         <textarea\r\n//           name=\"complaint\"\r\n//           value={formData.complaint}\r\n//           onChange={handleChange}\r\n//           placeholder=\"Describe your complaint\"\r\n//           required\r\n//           className=\"w-full border px-3 py-2 rounded\"\r\n//         />\r\n\r\n//         {/* Location Section */}\r\n//         <div>\r\n//           <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n//             Location\r\n//           </label>\r\n//           <div className=\"flex gap-2\">\r\n//             <PlacesAutocomplete\r\n//               value={formData.location}\r\n//               onChange={(address) => {\r\n//                 setFormData({ ...formData, location: address });\r\n//                 setLiveCoords(null);\r\n//               }}\r\n//               onSelect={handleSelect}\r\n//               searchOptions={{ componentRestrictions: { country: [\"in\"] } }}\r\n//             >\r\n//               {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\r\n//                 <div className=\"w-full\">\r\n//                   <input\r\n//                     {...getInputProps({\r\n//                       placeholder: \"Search Location...\",\r\n//                       className: \"w-full border px-3 py-2 rounded\",\r\n//                     })}\r\n//                   />\r\n//                   <div className=\"border rounded bg-white mt-1\">\r\n//                     {loading && <div className=\"p-2 text-gray-500\">Loading...</div>}\r\n//                     {suggestions.map((suggestion) => {\r\n//                       const className = suggestion.active\r\n//                         ? \"p-2 bg-blue-100 cursor-pointer\"\r\n//                         : \"p-2 cursor-pointer\";\r\n//                       return (\r\n//                         <div\r\n//                           {...getSuggestionItemProps(suggestion, { className })}\r\n//                           key={suggestion.placeId}\r\n//                         >\r\n//                           {suggestion.description}\r\n//                         </div>\r\n//                       );\r\n//                     })}\r\n//                   </div>\r\n//                 </div>\r\n//               )}\r\n//             </PlacesAutocomplete>\r\n//             <button\r\n//               type=\"button\"\r\n//               onClick={handleLiveLocation}\r\n//               disabled={isSubmitting}\r\n//               className={`px-4 py-2 rounded text-sm text-white ${\r\n//                 isSubmitting ? \"bg-gray-400\" : \"bg-blue-600\"\r\n//               }`}\r\n//             >\r\n//               Live\r\n//             </button>\r\n//           </div>\r\n//           {liveCoords && (\r\n//             <p className=\"text-xs text-green-600 mt-1\">\r\n//               Live Location: {liveCoords.latitude.toFixed(4)}, {liveCoords.longitude.toFixed(4)}\r\n//             </p>\r\n//           )}\r\n//         </div>\r\n\r\n//         {/* Other form elements */}\r\n//         <select\r\n//           name=\"department\"\r\n//           value={formData.department}\r\n//           onChange={handleChange}\r\n//           className=\"w-full border px-3 py-2 rounded\"\r\n//           required\r\n//         >\r\n//           <option value=\"\">Select a Department</option>\r\n//           <option value=\"Public Works\">Public Works</option>\r\n//           <option value=\"Water Supply\">Water Supply</option>\r\n//           <option value=\"Sanitation\">Sanitation</option>\r\n//           <option value=\"Electricity\">Electricity</option>\r\n//           <option value=\"Other\">Other</option>\r\n//         </select>\r\n\r\n//         <select\r\n//           name=\"urgency\"\r\n//           value={formData.urgency}\r\n//           onChange={handleChange}\r\n//           className=\"w-full border px-3 py-2 rounded\"\r\n//         >\r\n//           <option value=\"normal\">Normal</option>\r\n//           <option value=\"urgent\">Urgent</option>\r\n//         </select>\r\n\r\n//         <div>\r\n//           <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n//             Upload / Capture Photo\r\n//           </label>\r\n//           <input\r\n//             type=\"file\"\r\n//             accept=\"image/*\"\r\n//             capture=\"environment\"\r\n//             onChange={handlePhotoChange}\r\n//             className=\"w-full border px-3 py-2 rounded\"\r\n//           />\r\n//           {photo && (\r\n//             <p className=\"text-xs text-gray-500 mt-1\">Selected: {photo.name}</p>\r\n//           )}\r\n//         </div>\r\n\r\n//         <button\r\n//           type=\"submit\"\r\n//           disabled={isSubmitting}\r\n//           className={`w-full ${\r\n//             isSubmitting ? \"bg-gray-400\" : \"bg-blue-600\"\r\n//           } text-white px-4 py-2 rounded hover:bg-blue-700`}\r\n//         >\r\n//           {isSubmitting ? \"Submitting...\" : \"Submit Complaint\"}\r\n//         </button>\r\n//       </form>\r\n\r\n//       {submitted && (\r\n//         <div className=\"mt-6 text-green-700 font-semibold\">\r\n//           Complaint submitted successfully!<br />\r\n//           Your Complaint ID: <span className=\"font-bold\">{complaintId}</span>\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nimport React, { useState, useRef } from \"react\";\r\nimport axios from \"axios\";\r\nimport PlacesAutocomplete, {\r\n  geocodeByAddress,\r\n  getLatLng,\r\n} from \"react-places-autocomplete\";\r\n\r\nexport default function ComplaintForm() {\r\n  const [formData, setFormData] = useState({\r\n    complaint: \"\",\r\n    location: \"\",\r\n  });\r\n\r\n  const [photo, setPhoto] = useState(null);\r\n  const [complaintId, setComplaintId] = useState(null);\r\n  const [submitted, setSubmitted] = useState(false);\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const [liveCoords, setLiveCoords] = useState(null);\r\n  const [recording, setRecording] = useState(false);\r\n\r\n  const recognitionRef = useRef(null);\r\n\r\n  // 🔤 Transliteration (Hindi → Hinglish)\r\n  const transliterateToHinglish = async (text) => {\r\n    try {\r\n      const res = await fetch(\r\n        `https://inputtools.google.com/request?text=${encodeURIComponent(\r\n          text\r\n        )}&itc=hi-t-i0-und&num=1&cp=0&cs=1&ie=utf-8&oe=utf-8&app=demopage`\r\n      );\r\n      const data = await res.json();\r\n      if (data[0] === \"SUCCESS\") {\r\n        return data[1][0][1][0];\r\n      }\r\n      return text;\r\n    } catch (err) {\r\n      console.error(\"Transliteration API error:\", err);\r\n      return text;\r\n    }\r\n  };\r\n\r\n  // 🎙️ Speech-to-text\r\n  const handleSpeechToText = () => {\r\n    const SpeechRecognition =\r\n      window.SpeechRecognition || window.webkitSpeechRecognition;\r\n\r\n    if (!SpeechRecognition) {\r\n      alert(\"Speech recognition is not supported in this browser. Please use Chrome.\");\r\n      return;\r\n    }\r\n\r\n    if (recording) {\r\n      recognitionRef.current?.stop();\r\n      setRecording(false);\r\n      return;\r\n    }\r\n\r\n    const recognition = new SpeechRecognition();\r\n    recognition.lang = \"hi-IN\";\r\n    recognition.continuous = true;\r\n    recognition.interimResults = true;\r\n\r\n    recognition.onresult = async (event) => {\r\n      let transcript = \"\";\r\n      for (let i = 0; i < event.results.length; i++) {\r\n        transcript += event.results[i][0].transcript + \" \";\r\n      }\r\n      const hinglish = await transliterateToHinglish(transcript.trim());\r\n      setFormData((prev) => ({ ...prev, complaint: hinglish }));\r\n    };\r\n\r\n    recognition.onerror = (err) => {\r\n      console.error(\"Speech Recognition Error:\", err);\r\n      setRecording(false);\r\n    };\r\n\r\n    recognition.onend = () => {\r\n      setRecording(false);\r\n    };\r\n\r\n    recognition.start();\r\n    recognitionRef.current = recognition;\r\n    setRecording(true);\r\n  };\r\n\r\n  const handlePhotoChange = (e) => {\r\n    if (e.target.files && e.target.files[0]) {\r\n      setPhoto(e.target.files[0]);\r\n    }\r\n  };\r\n\r\n  const handleSelect = async (address) => {\r\n    setFormData({ ...formData, location: address });\r\n    setLiveCoords(null);\r\n    try {\r\n      const results = await geocodeByAddress(address);\r\n      await getLatLng(results[0]);\r\n    } catch (error) {\r\n      console.error(\"Error fetching coordinates\", error);\r\n    }\r\n  };\r\n\r\n  const handleLiveLocation = () => {\r\n    if (!navigator.geolocation) {\r\n      alert(\"Geolocation is not supported by your browser.\");\r\n      return;\r\n    }\r\n\r\n    setIsSubmitting(true);\r\n    navigator.geolocation.getCurrentPosition(\r\n      (position) => {\r\n        const { latitude, longitude } = position.coords;\r\n        setLiveCoords({ latitude, longitude });\r\n        setFormData({ ...formData, location: \"Live Location Captured\" });\r\n        alert(\"Live location successfully captured!\");\r\n        setIsSubmitting(false);\r\n      },\r\n      (error) => {\r\n        console.warn(\"Geolocation error:\", error);\r\n        alert(\"⚠ Location not available. Please enable GPS.\");\r\n        setLiveCoords(null);\r\n        setIsSubmitting(false);\r\n      },\r\n      { enableHighAccuracy: true, timeout: 15000, maximumAge: 0 }\r\n    );\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (!formData.complaint.trim()) {\r\n      alert(\"Please speak or type your complaint.\");\r\n      return;\r\n    }\r\n\r\n    setIsSubmitting(true);\r\n    try {\r\n      const formDataToSend = new FormData();\r\n      formDataToSend.append(\"complaint\", formData.complaint);\r\n      formDataToSend.append(\"location\", formData.location);\r\n\r\n      if (photo) {\r\n        formDataToSend.append(\"photo\", photo);\r\n      }\r\n\r\n      if (liveCoords) {\r\n        formDataToSend.append(\"latitude\", liveCoords.latitude);\r\n        formDataToSend.append(\"longitude\", liveCoords.longitude);\r\n      }\r\n\r\n      const res = await axios.post(\"http://localhost:5000/api/complaint\", formDataToSend, {\r\n        headers: { \"Content-Type\": \"multipart/form-data\" },\r\n      });\r\n\r\n      setComplaintId(res.data.complaint.complaintId);\r\n      setSubmitted(true);\r\n      alert(`Complaint submitted! ID: ${res.data.complaint.complaintId}`);\r\n\r\n      setFormData({ complaint: \"\", location: \"\" });\r\n      setPhoto(null);\r\n      setLiveCoords(null);\r\n    } catch (err) {\r\n      console.error(\"Submission failed:\", err.message);\r\n      alert(\"Complaint submission failed.\");\r\n    } finally {\r\n      setIsSubmitting(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"max-w-xl mx-auto mt-10 p-6 bg-white rounded shadow\">\r\n      <h2 className=\"text-2xl font-semibold mb-4\">Complaint Form</h2>\r\n      <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n        \r\n        {/* 🎙️ Voice-to-Text */}\r\n        <button\r\n          type=\"button\"\r\n          onClick={handleSpeechToText}\r\n          className={`w-full px-4 py-2 rounded-lg font-semibold ${\r\n            recording ? \"bg-red-500\" : \"bg-purple-600\"\r\n          } text-white`}\r\n        >\r\n          {recording ? \"बोलना रोकें\" : \"शिकायत बोलें\"}\r\n        </button>\r\n\r\n        {/* Complaint Text */}\r\n        <textarea\r\n          name=\"complaint\"\r\n          value={formData.complaint}\r\n          onChange={(e) => setFormData({ ...formData, complaint: e.target.value })}\r\n          placeholder=\"Describe your complaint or speak...\"\r\n          required\r\n          className=\"w-full border px-3 py-2 rounded\"\r\n        />\r\n\r\n        {/* 📍 Location */}\r\n        <div>\r\n          <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n            Location\r\n          </label>\r\n          <div className=\"flex gap-2\">\r\n            <PlacesAutocomplete\r\n              value={formData.location}\r\n              onChange={(address) => {\r\n                setFormData({ ...formData, location: address });\r\n                setLiveCoords(null);\r\n              }}\r\n              onSelect={handleSelect}\r\n              searchOptions={{ componentRestrictions: { country: [\"in\"] } }}\r\n            >\r\n              {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\r\n                <div className=\"w-full\">\r\n                  <input\r\n                    {...getInputProps({\r\n                      placeholder: \"Search Location...\",\r\n                      className: \"w-full border px-3 py-2 rounded\",\r\n                    })}\r\n                  />\r\n                  <div className=\"border rounded bg-white mt-1\">\r\n                    {loading && <div className=\"p-2 text-gray-500\">Loading...</div>}\r\n                    {suggestions.map((suggestion) => {\r\n                      const className = suggestion.active\r\n                        ? \"p-2 bg-blue-100 cursor-pointer\"\r\n                        : \"p-2 cursor-pointer\";\r\n                      return (\r\n                        <div\r\n                          {...getSuggestionItemProps(suggestion, { className })}\r\n                          key={suggestion.placeId}\r\n                        >\r\n                          {suggestion.description}\r\n                        </div>\r\n                      );\r\n                    })}\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </PlacesAutocomplete>\r\n            <button\r\n              type=\"button\"\r\n              onClick={handleLiveLocation}\r\n              disabled={isSubmitting}\r\n              className={`px-4 py-2 rounded text-sm text-white ${\r\n                isSubmitting ? \"bg-gray-400\" : \"bg-blue-600\"\r\n              }`}\r\n            >\r\n              Live\r\n            </button>\r\n          </div>\r\n          {liveCoords && (\r\n            <p className=\"text-xs text-green-600 mt-1\">\r\n              Live Location: {liveCoords.latitude.toFixed(4)}, {liveCoords.longitude.toFixed(4)}\r\n            </p>\r\n          )}\r\n        </div>\r\n\r\n        {/* 📷 Photo Upload */}\r\n        <div>\r\n          <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n            Upload / Capture Photo\r\n          </label>\r\n          <input\r\n            type=\"file\"\r\n            accept=\"image/*\"\r\n            capture=\"environment\"\r\n            onChange={handlePhotoChange}\r\n            className=\"w-full border px-3 py-2 rounded\"\r\n          />\r\n          {photo && (\r\n            <p className=\"text-xs text-gray-500 mt-1\">Selected: {photo.name}</p>\r\n          )}\r\n        </div>\r\n\r\n        <button\r\n          type=\"submit\"\r\n          disabled={isSubmitting}\r\n          className={`w-full ${\r\n            isSubmitting ? \"bg-gray-400\" : \"bg-green-600\"\r\n          } text-white px-4 py-2 rounded`}\r\n        >\r\n          {isSubmitting ? \"Submitting...\" : \"Submit Complaint\"}\r\n        </button>\r\n      </form>\r\n\r\n      {submitted && (\r\n        <div className=\"mt-6 text-green-700 font-semibold\">\r\n          Complaint submitted successfully!<br />\r\n          Your Complaint ID: <span className=\"font-bold\">{complaintId}</span>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}