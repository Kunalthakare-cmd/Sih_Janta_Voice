{"ast":null,"code":"var _jsxFileName = \"D:\\\\Kunal Files\\\\projects\\\\janta_voice_new1\\\\Janta_Voice_Final\\\\frontend\\\\src\\\\pages\\\\ComplaintForm.jsx\",\n  _s = $RefreshSig$();\n// // import React, { useState } from \"react\";\n// // import axios from \"axios\";\n// // import PlacesAutocomplete, { geocodeByAddress, getLatLng } from \"react-places-autocomplete\";\n\n// // export default function ComplaintForm() {\n// //   const [formData, setFormData] = useState({\n// //     name: \"\",\n// //     complaint: \"\",\n// //     location: \"\",\n// //     urgency: \"normal\",\n// //     department: \"\",\n// //   });\n\n// //   const [photo, setPhoto] = useState(null);\n// //   const [complaintId, setComplaintId] = useState(null);\n// //   const [submitted, setSubmitted] = useState(false);\n\n// //   const handleChange = (e) => {\n// //     setFormData({ ...formData, [e.target.name]: e.target.value });\n// //   };\n\n// //   // location select handler\n// //   const handleSelect = async (address) => {\n// //     setFormData({ ...formData, location: address });\n// //     try {\n// //       const results = await geocodeByAddress(address);\n// //       const latLng = await getLatLng(results[0]);\n// //       console.log(\"Coordinates: \", latLng); // agar latitude/longitude bhi chahiye backend ke liye\n// //     } catch (error) {\n// //       console.error(\"Error fetching coordinates\", error);\n// //     }\n// //   };\n\n// //   const handlePhotoChange = (e) => {\n// //     if (e.target.files && e.target.files[0]) {\n// //       setPhoto(e.target.files[0]);\n// //     }\n// //   };\n\n// //   const handleSubmit = async (e) => {\n// //     e.preventDefault();\n\n// //     try {\n// //       const formDataToSend = new FormData();\n// //       Object.keys(formData).forEach((key) => {\n// //         formDataToSend.append(key, formData[key]);\n// //       });\n// //       if (photo) {\n// //         formDataToSend.append(\"photo\", photo);\n// //       }\n\n// //       const res = await axios.post(\"http://localhost:5000/api/complaint\", formDataToSend, {\n// //         headers: { \"Content-Type\": \"multipart/form-data\" },\n// //       });\n\n// //       setComplaintId(res.data.complaint.complaintId);\n// //       setSubmitted(true);\n\n// //       setFormData({\n// //         name: \"\",\n// //         complaint: \"\",\n// //         location: \"\",\n// //         urgency: \"normal\",\n// //         department: \"\",\n// //       });\n// //       setPhoto(null);\n// //     } catch (err) {\n// //       console.error(\"Submission failed:\", err.message);\n// //       alert(\"Complaint submission failed. Try again.\");\n// //     }\n// //   };\n\n// //   return (\n// //     <div className=\"max-w-xl mx-auto mt-10 p-6 bg-white rounded shadow\">\n// //       <h2 className=\"text-2xl font-semibold mb-4\">Complaint Form</h2>\n// //       <form onSubmit={handleSubmit} className=\"space-y-4\">\n// //         <input\n// //           name=\"name\"\n// //           value={formData.name}\n// //           onChange={handleChange}\n// //           placeholder=\"Your Name\"\n// //           required\n// //           className=\"w-full border px-3 py-2 rounded\"\n// //         />\n// //         <textarea\n// //           name=\"complaint\"\n// //           value={formData.complaint}\n// //           onChange={handleChange}\n// //           placeholder=\"Describe your complaint\"\n// //           required\n// //           className=\"w-full border px-3 py-2 rounded\"\n// //         />\n\n// //         {/* Location Autocomplete */}\n// //         <PlacesAutocomplete\n// //           value={formData.location}\n// //           onChange={(address) => setFormData({ ...formData, location: address })}\n// //           onSelect={handleSelect}\n// //           searchOptions={{ componentRestrictions: { country: [\"in\"] } }} // restrict to India\n// //         >\n// //           {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\n// //             <div>\n// //               <input\n// //                 {...getInputProps({\n// //                   placeholder: \"Search Location (India only)\",\n// //                   className: \"w-full border px-3 py-2 rounded\",\n// //                 })}\n// //               />\n// //               <div className=\"border rounded bg-white mt-1\">\n// //                 {loading && <div className=\"p-2 text-gray-500\">Loading...</div>}\n// //                 {suggestions.map((suggestion) => {\n// //                   const className = suggestion.active\n// //                     ? \"p-2 bg-blue-100 cursor-pointer\"\n// //                     : \"p-2 cursor-pointer\";\n// //                   return (\n// //                     <div\n// //                       {...getSuggestionItemProps(suggestion, { className })}\n// //                       key={suggestion.placeId}\n// //                     >\n// //                       {suggestion.description}\n// //                     </div>\n// //                   );\n// //                 })}\n// //               </div>\n// //             </div>\n// //           )}\n// //         </PlacesAutocomplete>\n\n// //         {/* Department */}\n// //         <select\n// //           name=\"department\"\n// //           value={formData.department}\n// //           onChange={handleChange}\n// //           className=\"w-full border px-3 py-2 rounded\"\n// //           required\n// //         >\n// //           <option value=\"\">Select a Department</option>\n// //           <option value=\"Public Works\">Public Works</option>\n// //           <option value=\"Water Supply\">Water Supply</option>\n// //           <option value=\"Sanitation\">Sanitation</option>\n// //           <option value=\"Electricity\">Electricity</option>\n// //           <option value=\"Other\">Other</option>\n// //         </select>\n\n// //         {/* Urgency */}\n// //         <select\n// //           name=\"urgency\"\n// //           value={formData.urgency}\n// //           onChange={handleChange}\n// //           className=\"w-full border px-3 py-2 rounded\"\n// //         >\n// //           <option value=\"normal\">Normal</option>\n// //           <option value=\"urgent\">Urgent</option>\n// //         </select>\n\n// //         {/* Photo Upload */}\n// //         <div>\n// //           <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n// //             Upload / Capture Photo\n// //           </label>\n// //           <input\n// //             type=\"file\"\n// //             accept=\"image/*\"\n// //             capture=\"environment\"\n// //             onChange={handlePhotoChange}\n// //             className=\"w-full border px-3 py-2 rounded\"\n// //           />\n// //           {photo && (\n// //             <p className=\"text-xs text-gray-500 mt-1\">Selected: {photo.name}</p>\n// //           )}\n// //         </div>\n\n// //         <button\n// //           type=\"submit\"\n// //           className=\"bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700\"\n// //         >\n// //           Submit\n// //         </button>\n// //       </form>\n\n// //       {submitted && (\n// //         <div className=\"mt-6 text-green-700 font-semibold\">\n// //           Complaint submitted successfully!<br />\n// //           Your Complaint ID: <span className=\"font-bold\">{complaintId}</span>\n// //         </div>\n// //       )}\n// //     </div>\n// //   );\n// // }\n// import React, { useState } from \"react\";\n// import axios from \"axios\";\n// import PlacesAutocomplete, {\n//   geocodeByAddress,\n//   getLatLng,\n// } from \"react-places-autocomplete\";\n\n// export default function ComplaintForm() {\n//   const [formData, setFormData] = useState({\n//     name: \"\",\n//     complaint: \"\",\n//     location: \"\",\n//     urgency: \"normal\",\n//     department: \"\",\n//   });\n\n//   const [photo, setPhoto] = useState(null);\n//   const [complaintId, setComplaintId] = useState(null);\n//   const [submitted, setSubmitted] = useState(false);\n//   const [isSubmitting, setIsSubmitting] = useState(false);\n//   const [liveCoords, setLiveCoords] = useState(null);\n\n//   const handleChange = (e) => {\n//     setFormData({ ...formData, [e.target.name]: e.target.value });\n//   };\n\n//   const handlePhotoChange = (e) => {\n//     if (e.target.files && e.target.files[0]) {\n//       setPhoto(e.target.files[0]);\n//     }\n//   };\n\n//   // Google Places Autocomplete handler\n//   const handleSelect = async (address) => {\n//     setFormData({ ...formData, location: address });\n//     setLiveCoords(null); // Clear live coords if user selects an address\n//     try {\n//       const results = await geocodeByAddress(address);\n//       const latLng = await getLatLng(results[0]);\n//       console.log(\"Selected Location Coordinates: \", latLng);\n//       // You can store these coords in state if your backend needs them\n//     } catch (error) {\n//       console.error(\"Error fetching coordinates\", error);\n//     }\n//   };\n\n//   // Live location button handler\n//   const handleLiveLocation = () => {\n//     if (!navigator.geolocation) {\n//       alert(\"Geolocation is not supported by your browser.\");\n//       return;\n//     }\n\n//     setIsSubmitting(true);\n//     navigator.geolocation.getCurrentPosition(\n//       (position) => {\n//         const { latitude, longitude } = position.coords;\n//         setLiveCoords({ latitude, longitude });\n//         setFormData({ ...formData, location: \"Live Location Captured\" });\n//         alert(\"Live location successfully captured!\");\n//         setIsSubmitting(false);\n//       },\n//       (error) => {\n//         console.warn(\"Geolocation error:\", error);\n//         alert(\"⚠ Location not available. Please enable GPS for accurate location.\");\n//         setLiveCoords(null);\n//         setIsSubmitting(false);\n//       },\n//       { enableHighAccuracy: true, timeout: 15000, maximumAge: 0 }\n//     );\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     setIsSubmitting(true);\n\n//     try {\n//       const formDataToSend = new FormData();\n//       Object.keys(formData).forEach((key) => {\n//         formDataToSend.append(key, formData[key]);\n//       });\n\n//       if (photo) {\n//         formDataToSend.append(\"photo\", photo);\n//       }\n\n//       // Logic to determine which location to send\n//       let latLng = null;\n//       if (liveCoords) {\n//         // Option 1: Live location is captured\n//         latLng = liveCoords;\n//       } else if (formData.location) {\n//         // Option 2: User typed and selected a location\n//         const results = await geocodeByAddress(formData.location);\n//         latLng = await getLatLng(results[0]);\n//       }\n\n//       if (latLng) {\n//         formDataToSend.append(\"latitude\", latLng.latitude);\n//         formDataToSend.append(\"longitude\", latLng.longitude);\n//       }\n\n//       const res = await axios.post(\"http://localhost:5000/api/complaint\", formDataToSend, {\n//         headers: { \"Content-Type\": \"multipart/form-data\" },\n//       });\n\n//       setComplaintId(res.data.complaint.complaintId);\n//       setSubmitted(true);\n//       alert(`Complaint submitted successfully! Your Complaint ID is: ${res.data.complaint.complaintId}`);\n\n//       // Reset form\n//       setFormData({\n//         name: \"\",\n//         complaint: \"\",\n//         location: \"\",\n//         urgency: \"normal\",\n//         department: \"\",\n//       });\n//       setPhoto(null);\n//       setLiveCoords(null);\n//     } catch (err) {\n//       console.error(\"Submission failed:\", err.message);\n//       alert(\"Complaint submission failed. Please try again.\");\n//     } finally {\n//       setIsSubmitting(false);\n//     }\n//   };\n\n//   return (\n//     <div className=\"max-w-xl mx-auto mt-10 p-6 bg-white rounded shadow\">\n//       <h2 className=\"text-2xl font-semibold mb-4\">Complaint Form</h2>\n//       <form onSubmit={handleSubmit} className=\"space-y-4\">\n//         {/* Input fields */}\n//         <input\n//           name=\"name\"\n//           value={formData.name}\n//           onChange={handleChange}\n//           placeholder=\"Your Name\"\n//           required\n//           className=\"w-full border px-3 py-2 rounded\"\n//         />\n//         <textarea\n//           name=\"complaint\"\n//           value={formData.complaint}\n//           onChange={handleChange}\n//           placeholder=\"Describe your complaint\"\n//           required\n//           className=\"w-full border px-3 py-2 rounded\"\n//         />\n\n//         {/* Location Section */}\n//         <div>\n//           <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n//             Location\n//           </label>\n//           <div className=\"flex gap-2\">\n//             <PlacesAutocomplete\n//               value={formData.location}\n//               onChange={(address) => {\n//                 setFormData({ ...formData, location: address });\n//                 setLiveCoords(null);\n//               }}\n//               onSelect={handleSelect}\n//               searchOptions={{ componentRestrictions: { country: [\"in\"] } }}\n//             >\n//               {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\n//                 <div className=\"w-full\">\n//                   <input\n//                     {...getInputProps({\n//                       placeholder: \"Search Location...\",\n//                       className: \"w-full border px-3 py-2 rounded\",\n//                     })}\n//                   />\n//                   <div className=\"border rounded bg-white mt-1\">\n//                     {loading && <div className=\"p-2 text-gray-500\">Loading...</div>}\n//                     {suggestions.map((suggestion) => {\n//                       const className = suggestion.active\n//                         ? \"p-2 bg-blue-100 cursor-pointer\"\n//                         : \"p-2 cursor-pointer\";\n//                       return (\n//                         <div\n//                           {...getSuggestionItemProps(suggestion, { className })}\n//                           key={suggestion.placeId}\n//                         >\n//                           {suggestion.description}\n//                         </div>\n//                       );\n//                     })}\n//                   </div>\n//                 </div>\n//               )}\n//             </PlacesAutocomplete>\n//             <button\n//               type=\"button\"\n//               onClick={handleLiveLocation}\n//               disabled={isSubmitting}\n//               className={`px-4 py-2 rounded text-sm text-white ${\n//                 isSubmitting ? \"bg-gray-400\" : \"bg-blue-600\"\n//               }`}\n//             >\n//               Live\n//             </button>\n//           </div>\n//           {liveCoords && (\n//             <p className=\"text-xs text-green-600 mt-1\">\n//               Live Location: {liveCoords.latitude.toFixed(4)}, {liveCoords.longitude.toFixed(4)}\n//             </p>\n//           )}\n//         </div>\n\n//         {/* Other form elements */}\n//         <select\n//           name=\"department\"\n//           value={formData.department}\n//           onChange={handleChange}\n//           className=\"w-full border px-3 py-2 rounded\"\n//           required\n//         >\n//           <option value=\"\">Select a Department</option>\n//           <option value=\"Public Works\">Public Works</option>\n//           <option value=\"Water Supply\">Water Supply</option>\n//           <option value=\"Sanitation\">Sanitation</option>\n//           <option value=\"Electricity\">Electricity</option>\n//           <option value=\"Other\">Other</option>\n//         </select>\n\n//         <select\n//           name=\"urgency\"\n//           value={formData.urgency}\n//           onChange={handleChange}\n//           className=\"w-full border px-3 py-2 rounded\"\n//         >\n//           <option value=\"normal\">Normal</option>\n//           <option value=\"urgent\">Urgent</option>\n//         </select>\n\n//         <div>\n//           <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n//             Upload / Capture Photo\n//           </label>\n//           <input\n//             type=\"file\"\n//             accept=\"image/*\"\n//             capture=\"environment\"\n//             onChange={handlePhotoChange}\n//             className=\"w-full border px-3 py-2 rounded\"\n//           />\n//           {photo && (\n//             <p className=\"text-xs text-gray-500 mt-1\">Selected: {photo.name}</p>\n//           )}\n//         </div>\n\n//         <button\n//           type=\"submit\"\n//           disabled={isSubmitting}\n//           className={`w-full ${\n//             isSubmitting ? \"bg-gray-400\" : \"bg-blue-600\"\n//           } text-white px-4 py-2 rounded hover:bg-blue-700`}\n//         >\n//           {isSubmitting ? \"Submitting...\" : \"Submit Complaint\"}\n//         </button>\n//       </form>\n\n//       {submitted && (\n//         <div className=\"mt-6 text-green-700 font-semibold\">\n//           Complaint submitted successfully!<br />\n//           Your Complaint ID: <span className=\"font-bold\">{complaintId}</span>\n//         </div>\n//       )}\n//     </div>\n//   );\n// }\n\n// import React, { useState, useRef, useCallback } from \"react\";\n// import axios from \"axios\";\n// import PlacesAutocomplete, {\n//   geocodeByAddress,\n//   getLatLng,\n// } from \"react-places-autocomplete\";\n\n// export default function ComplaintForm() {\n//   const [formData, setFormData] = useState({\n//     name: \"\",\n//     complaint: \"\",\n//     location: \"\"\n//   });\n\n//   const [photo, setPhoto] = useState(null);\n//   const [photoPreview, setPhotoPreview] = useState(null);\n//   const [complaintId, setComplaintId] = useState(null);\n//   const [submitted, setSubmitted] = useState(false);\n//   const [isSubmitting, setIsSubmitting] = useState(false);\n//   const [liveCoords, setLiveCoords] = useState(null);\n//   const [recording, setRecording] = useState(false);\n//   const [cameraStream, setCameraStream] = useState(null);\n//   const [showCamera, setShowCamera] = useState(false);\n\n//   const recognitionRef = useRef(null);\n//   const videoRef = useRef(null);\n//   const canvasRef = useRef(null);\n\n//   // 🔤 Transliteration (Hindi → Hinglish)\n//   const transliterateToHinglish = async (text) => {\n//     try {\n//       const res = await fetch(\n//         `https://inputtools.google.com/request?text=${encodeURIComponent(\n//           text\n//         )}&itc=hi-t-i0-und&num=1&cp=0&cs=1&ie=utf-8&oe=utf-8&app=demopage`\n//       );\n//       const data = await res.json();\n//       if (data[0] === \"SUCCESS\") {\n//         return data[1][0][1][0];\n//       }\n//       return text;\n//     } catch (err) {\n//       console.error(\"Transliteration API error:\", err);\n//       return text;\n//     }\n//   };\n\n//   // 🌍 Reverse Geocoding - Convert coordinates to address\n//   const reverseGeocode = async (latitude, longitude) => {\n//     try {\n//       const response = await fetch(\n//         `https://maps.googleapis.com/maps/api/geocode/json?latlng=${latitude},${longitude}&key=${process.env.REACT_APP_GOOGLE_MAPS_API_KEY}`\n//       );\n//       const data = await response.json();\n\n//       if (data.results && data.results.length > 0) {\n//         return data.results[0].formatted_address;\n//       }\n//       return `Location: ${latitude.toFixed(4)}, ${longitude.toFixed(4)}`;\n//     } catch (error) {\n//       console.error(\"Reverse geocoding error:\", error);\n//       return `Location: ${latitude.toFixed(4)}, ${longitude.toFixed(4)}`;\n//     }\n//   };\n\n//   // 🎙️ Speech-to-text\n//   const handleSpeechToText = () => {\n//     const SpeechRecognition =\n//       window.SpeechRecognition || window.webkitSpeechRecognition;\n\n//     if (!SpeechRecognition) {\n//       alert(\"Speech recognition is not supported in this browser. Please use Chrome.\");\n//       return;\n//     }\n\n//     if (recording) {\n//       recognitionRef.current?.stop();\n//       setRecording(false);\n//       return;\n//     }\n\n//     const recognition = new SpeechRecognition();\n//     recognition.lang = \"hi-IN\";\n//     recognition.continuous = true;\n//     recognition.interimResults = true;\n\n//     recognition.onresult = async (event) => {\n//       let transcript = \"\";\n//       for (let i = 0; i < event.results.length; i++) {\n//         transcript += event.results[i][0].transcript + \" \";\n//       }\n//       const hinglish = await transliterateToHinglish(transcript.trim());\n//       setFormData((prev) => ({ ...prev, complaint: hinglish }));\n//     };\n\n//     recognition.onerror = (err) => {\n//       console.error(\"Speech Recognition Error:\", err);\n//       setRecording(false);\n//     };\n\n//     recognition.onend = () => {\n//       setRecording(false);\n//     };\n\n//     recognition.start();\n//     recognitionRef.current = recognition;\n//     setRecording(true);\n//   };\n\n//   // 📷 Camera Functions\n//   const startCamera = async () => {\n//     try {\n//       const stream = await navigator.mediaDevices.getUserMedia({\n//         video: { facingMode: 'environment' }, // Use back camera\n//         audio: false\n//       });\n\n//       setCameraStream(stream);\n//       setShowCamera(true);\n\n//       if (videoRef.current) {\n//         videoRef.current.srcObject = stream;\n//       }\n//     } catch (error) {\n//       console.error(\"Camera access error:\", error);\n//       alert(\"Unable to access camera. Please check permissions.\");\n//     }\n//   };\n\n//   const stopCamera = () => {\n//     if (cameraStream) {\n//       cameraStream.getTracks().forEach(track => track.stop());\n//       setCameraStream(null);\n//     }\n//     setShowCamera(false);\n//   };\n\n//   const capturePhoto = useCallback(async () => {\n//     if (!videoRef.current || !canvasRef.current) return;\n\n//     const video = videoRef.current;\n//     const canvas = canvasRef.current;\n//     const context = canvas.getContext('2d');\n\n//     // Set canvas dimensions to match video\n//     canvas.width = video.videoWidth;\n//     canvas.height = video.videoHeight;\n\n//     // Draw current video frame to canvas\n//     context.drawImage(video, 0, 0);\n\n//     // Get current location for geo-tagging\n//     if (navigator.geolocation) {\n//       navigator.geolocation.getCurrentPosition(\n//         async (position) => {\n//           const { latitude, longitude } = position.coords;\n\n//           // Add geo-tag overlay to image\n//           context.fillStyle = 'rgba(0, 0, 0, 0.7)';\n//           context.fillRect(0, canvas.height - 60, canvas.width, 60);\n//           context.fillStyle = 'white';\n//           context.font = '14px Arial';\n//           context.fillText(`Location: ${latitude.toFixed(6)}, ${longitude.toFixed(6)}`, 10, canvas.height - 35);\n//           context.fillText(`Captured: ${new Date().toLocaleString()}`, 10, canvas.height - 15);\n\n//           // Convert to blob\n//           canvas.toBlob((blob) => {\n//             const file = new File([blob], `complaint_photo_${Date.now()}.jpg`, {\n//               type: 'image/jpeg'\n//             });\n\n//             setPhoto(file);\n//             setPhotoPreview(canvas.toDataURL());\n//             stopCamera();\n//           }, 'image/jpeg', 0.8);\n//         },\n//         (error) => {\n//           console.warn(\"Location not available for geo-tagging:\", error);\n//           // Capture without geo-tag\n//           canvas.toBlob((blob) => {\n//             const file = new File([blob], `complaint_photo_${Date.now()}.jpg`, {\n//               type: 'image/jpeg'\n//             });\n\n//             setPhoto(file);\n//             setPhotoPreview(canvas.toDataURL());\n//             stopCamera();\n//           }, 'image/jpeg', 0.8);\n//         },\n//         { enableHighAccuracy: true, timeout: 5000, maximumAge: 0 }\n//       );\n//     }\n//   }, [cameraStream]);\n\n//   const handlePhotoChange = (e) => {\n//     if (e.target.files && e.target.files[0]) {\n//       const file = e.target.files[0];\n//       setPhoto(file);\n\n//       // Create preview\n//       const reader = new FileReader();\n//       reader.onload = (e) => setPhotoPreview(e.target.result);\n//       reader.readAsDataURL(file);\n//     }\n//   };\n\n//   const handleSelect = async (address) => {\n//     setFormData({ ...formData, location: address });\n//     setLiveCoords(null);\n//     try {\n//       const results = await geocodeByAddress(address);\n//       await getLatLng(results[0]);\n//     } catch (error) {\n//       console.error(\"Error fetching coordinates\", error);\n//     }\n//   };\n\n//   const handleLiveLocation = () => {\n//     if (!navigator.geolocation) {\n//       alert(\"Geolocation is not supported by your browser.\");\n//       return;\n//     }\n\n//     setIsSubmitting(true);\n//     navigator.geolocation.getCurrentPosition(\n//       async (position) => {\n//         const { latitude, longitude } = position.coords;\n//         setLiveCoords({ latitude, longitude });\n\n//         // Get human-readable address\n//         const address = await reverseGeocode(latitude, longitude);\n//         setFormData({ ...formData, location: address });\n\n//         alert(\"Live location successfully captured!\");\n//         setIsSubmitting(false);\n//       },\n//       (error) => {\n//         console.warn(\"Geolocation error:\", error);\n//         alert(\"⚠ Location not available. Please enable GPS.\");\n//         setLiveCoords(null);\n//         setIsSubmitting(false);\n//       },\n//       { enableHighAccuracy: true, timeout: 15000, maximumAge: 0 }\n//     );\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     if (!formData.complaint.trim()) {\n//       alert(\"Please speak or type your complaint.\");\n//       return;\n//     }\n\n//     setIsSubmitting(true);\n//     try {\n//       const formDataToSend = new FormData();\n//       formDataToSend.append(\"complaint\", formData.complaint);\n//       formDataToSend.append(\"location\", formData.location);\n//       formDataToSend.append(\"name\", formData.name);\n\n//       if (photo) {\n//         formDataToSend.append(\"photo\", photo);\n//       }\n\n//       if (liveCoords) {\n//         formDataToSend.append(\"latitude\", liveCoords.latitude);\n//         formDataToSend.append(\"longitude\", liveCoords.longitude);\n//       }\n\n//       // Add metadata\n//       formDataToSend.append(\"timestamp\", new Date().toISOString());\n//       formDataToSend.append(\"hasPhoto\", !!photo);\n//       formDataToSend.append(\"hasGeoLocation\", !!liveCoords);\n//       formDataToSend.append(\"dashboardSource\", \"enhanced-complaint-form\");\n//       formDataToSend.append(\"submissionType\", \"form-with-nlp\");\n//       formDataToSend.append(\"userAgent\", navigator.userAgent);\n//       formDataToSend.append(\"platform\", navigator.platform);\n\n//       const res = await axios.post(\"http://localhost:5000/api/complaint\", formDataToSend, {\n//         headers: { \"Content-Type\": \"multipart/form-data\" },\n//       });\n\n//       // Handle backend response\n//       const complaintData = res.data.complaint || res.data;\n//       const complaintId = complaintData.complaintId || res.data.complaintId;\n//       setComplaintId(complaintId);\n//       setSubmitted(true);\n\n//       // Reset form\n//       setFormData({\n//         name: \"\",\n//         complaint: \"\",\n//         location: \"\"\n//       });\n//       setPhoto(null);\n//       setPhotoPreview(null);\n//       setLiveCoords(null);\n\n//       // Show success message\n//       alert(`Complaint submitted successfully! Your Complaint ID is: ${complaintId}`);\n\n//     } catch (err) {\n//       console.error(\"Submission failed:\", err.message);\n//       alert(\"Complaint submission failed.\");\n//     } finally {\n//       setIsSubmitting(false);\n//     }\n//   };\n\n//   return (\n//     <div className=\"max-w-xl mx-auto mt-10 p-6 bg-white rounded shadow\">\n//       <h2 className=\"text-2xl font-semibold mb-4\">Complaint Form</h2>\n\n//       {/* Camera Modal */}\n//       {showCamera && (\n//         <div className=\"fixed inset-0 bg-black bg-opacity-75 flex items-center justify-center z-50\">\n//           <div className=\"bg-white p-4 rounded-lg max-w-md w-full\">\n//             <div className=\"relative\">\n//               <video\n//                 ref={videoRef}\n//                 autoPlay\n//                 playsInline\n//                 className=\"w-full h-64 object-cover rounded\"\n//               />\n//               <div className=\"flex justify-center space-x-4 mt-4\">\n//                 <button\n//                   onClick={capturePhoto}\n//                   className=\"bg-blue-600 text-white px-4 py-2 rounded\"\n//                 >\n//                   📷 Capture\n//                 </button>\n//                 <button\n//                   onClick={stopCamera}\n//                   className=\"bg-gray-600 text-white px-4 py-2 rounded\"\n//                 >\n//                   Cancel\n//                 </button>\n//               </div>\n//             </div>\n//           </div>\n//         </div>\n//       )}\n\n//       <form onSubmit={handleSubmit} className=\"space-y-4\">\n\n//         {/* 🎙️ Voice-to-Text */}\n//         <button\n//           type=\"button\"\n//           onClick={handleSpeechToText}\n//           className={`w-full px-4 py-2 rounded-lg font-semibold ${\n//             recording ? \"bg-red-500\" : \"bg-purple-600\"\n//           } text-white`}\n//         >\n//           {recording ? \"🛑 बोलना रोकें\" : \"🎤 शिकायत बोलें\"}\n//         </button>\n\n//         {/* Complaint Text */}\n//         <textarea\n//           name=\"complaint\"\n//           value={formData.complaint}\n//           onChange={(e) => setFormData({ ...formData, complaint: e.target.value })}\n//           placeholder=\"Describe your complaint or speak...\"\n//           required\n//           className=\"w-full border px-3 py-2 rounded h-32\"\n//         />\n\n//         {/* 📍 Location */}\n//         <div>\n//           <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n//             Location\n//           </label>\n//           <div className=\"flex gap-2\">\n//             <PlacesAutocomplete\n//               value={formData.location}\n//               onChange={(address) => {\n//                 setFormData({ ...formData, location: address });\n//                 setLiveCoords(null);\n//               }}\n//               onSelect={handleSelect}\n//               searchOptions={{ componentRestrictions: { country: [\"in\"] } }}\n//             >\n//               {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\n//                 <div className=\"w-full\">\n//                   <input\n//                     {...getInputProps({\n//                       placeholder: \"Search Location...\",\n//                       className: \"w-full border px-3 py-2 rounded\",\n//                     })}\n//                   />\n//                   <div className=\"border rounded bg-white mt-1\">\n//                     {loading && <div className=\"p-2 text-gray-500\">Loading...</div>}\n//                     {suggestions.map((suggestion) => {\n//                       const className = suggestion.active\n//                         ? \"p-2 bg-blue-100 cursor-pointer\"\n//                         : \"p-2 cursor-pointer\";\n//                       return (\n//                         <div\n//                           {...getSuggestionItemProps(suggestion, { className })}\n//                           key={suggestion.placeId}\n//                         >\n//                           {suggestion.description}\n//                         </div>\n//                       );\n//                     })}\n//                   </div>\n//                 </div>\n//               )}\n//             </PlacesAutocomplete>\n//             <button\n//               type=\"button\"\n//               onClick={handleLiveLocation}\n//               disabled={isSubmitting}\n//               className={`px-4 py-2 rounded text-sm text-white ${\n//                 isSubmitting ? \"bg-gray-400\" : \"bg-blue-600\"\n//               }`}\n//             >\n//               📍 Live\n//             </button>\n//           </div>\n//           {liveCoords && (\n//             <p className=\"text-xs text-green-600 mt-1\">\n//               📍 Live Location Captured: {liveCoords.latitude.toFixed(4)}, {liveCoords.longitude.toFixed(4)}\n//             </p>\n//           )}\n//         </div>\n\n//         {/* 📷 Photo Upload */}\n//         <div>\n//           <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n//             Upload / Capture Photo\n//           </label>\n//           <div className=\"flex gap-2\">\n//             <input\n//               type=\"file\"\n//               accept=\"image/*\"\n//               capture=\"environment\"\n//               onChange={handlePhotoChange}\n//               className=\"flex-1 border px-3 py-2 rounded\"\n//             />\n//             <button\n//               type=\"button\"\n//               onClick={startCamera}\n//               className=\"bg-green-600 text-white px-4 py-2 rounded text-sm\"\n//             >\n//               📷 Camera\n//             </button>\n//           </div>\n\n//           {photoPreview && (\n//             <div className=\"mt-2\">\n//               <img \n//                 src={photoPreview} \n//                 alt=\"Preview\" \n//                 className=\"w-full h-32 object-cover rounded border\"\n//               />\n//               <button\n//                 type=\"button\"\n//                 onClick={() => {\n//                   setPhoto(null);\n//                   setPhotoPreview(null);\n//                 }}\n//                 className=\"mt-1 text-red-600 text-sm\"\n//               >\n//                 ❌ Remove Photo\n//               </button>\n//             </div>\n//           )}\n\n//           {photo && !photoPreview && (\n//             <p className=\"text-xs text-gray-500 mt-1\">Selected: {photo.name}</p>\n//           )}\n//         </div>\n\n//         <button\n//           type=\"submit\"\n//           disabled={isSubmitting}\n//           className={`w-full ${\n//             isSubmitting ? \"bg-gray-400\" : \"bg-green-600\"\n//           } text-white px-4 py-2 rounded font-semibold`}\n//         >\n//           {isSubmitting ? \"⏳ Submitting...\" : \"✅ Submit Complaint\"}\n//         </button>\n//       </form>\n\n//       {submitted && (\n//         <div className=\"mt-6 p-4 bg-green-100 rounded-lg\">\n//           <div className=\"text-green-700 font-semibold\">\n//             ✅ Complaint submitted successfully!<br />\n//             <span className=\"text-lg\">Your Complaint ID: <span className=\"font-bold text-green-800\">{complaintId}</span></span>\n//           </div>\n//           <p className=\"text-sm text-green-600 mt-2\">\n//             Your complaint is being analyzed and will be forwarded to the appropriate department based on urgency and category.\n//           </p>\n//         </div>\n//       )}\n\n//       {/* Hidden canvas for photo processing */}\n//       <canvas ref={canvasRef} style={{ display: 'none' }} />\n//     </div>\n//   );\n// }\n\nimport React, { useState, useRef, useCallback, useEffect, createElement as _createElement } from \"react\";\nimport axios from \"axios\";\nimport PlacesAutocomplete, { geocodeByAddress, getLatLng } from \"react-places-autocomplete\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ComplaintForm() {\n  _s();\n  const [formData, setFormData] = useState({\n    name: \"\",\n    complaint: \"\",\n    location: \"\"\n  });\n  const [photo, setPhoto] = useState(null);\n  const [photoPreview, setPhotoPreview] = useState(null);\n  const [complaintId, setComplaintId] = useState(null);\n  const [submitted, setSubmitted] = useState(false);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [liveCoords, setLiveCoords] = useState(null);\n  const [recording, setRecording] = useState(false);\n  const [cameraStream, setCameraStream] = useState(null);\n  const [showCamera, setShowCamera] = useState(false);\n\n  // Authentication state\n  const [user, setUser] = useState(null);\n  const [authToken, setAuthToken] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const recognitionRef = useRef(null);\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n\n  // Check authentication on component mount\n  useEffect(() => {\n    checkAuthentication();\n  }, []);\n  const checkAuthentication = async () => {\n    try {\n      // Get token from localStorage or sessionStorage\n      const token = localStorage.getItem('authToken') || sessionStorage.getItem('authToken');\n      if (!token) {\n        console.warn(\"No authentication token found\");\n        return;\n      }\n\n      // Verify token and get user profile\n      const response = await axios.get('http://localhost:5000/api/user/profile', {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      if (response.data.success) {\n        setUser(response.data.user);\n        setAuthToken(token);\n        setIsAuthenticated(true);\n\n        // Pre-fill form with user data\n        setFormData(prev => ({\n          ...prev,\n          name: response.data.user.name || \"\"\n        }));\n        console.log(\"User authenticated:\", response.data.user.name);\n      }\n    } catch (error) {\n      console.error(\"Authentication check failed:\", error);\n      // Clear invalid token\n      localStorage.removeItem('authToken');\n      sessionStorage.removeItem('authToken');\n      setUser(null);\n      setAuthToken(null);\n      setIsAuthenticated(false);\n    }\n  };\n\n  // Get axios config with authentication headers\n  const getAxiosConfig = () => {\n    const config = {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    };\n    if (authToken) {\n      config.headers['Authorization'] = `Bearer ${authToken}`;\n    }\n    return config;\n  };\n\n  // 🔤 Transliteration (Hindi → Hinglish)\n  const transliterateToHinglish = async text => {\n    try {\n      const res = await fetch(`https://inputtools.google.com/request?text=${encodeURIComponent(text)}&itc=hi-t-i0-und&num=1&cp=0&cs=1&ie=utf-8&oe=utf-8&app=demopage`);\n      const data = await res.json();\n      if (data[0] === \"SUCCESS\") {\n        return data[1][0][1][0];\n      }\n      return text;\n    } catch (err) {\n      console.error(\"Transliteration API error:\", err);\n      return text;\n    }\n  };\n\n  // 🌍 Reverse Geocoding - Convert coordinates to address\n  const reverseGeocode = async (latitude, longitude) => {\n    try {\n      const response = await fetch(`https://maps.googleapis.com/maps/api/geocode/json?latlng=${latitude},${longitude}&key=${process.env.REACT_APP_GOOGLE_MAPS_API_KEY}`);\n      const data = await response.json();\n      if (data.results && data.results.length > 0) {\n        return data.results[0].formatted_address;\n      }\n      return `Location: ${latitude.toFixed(4)}, ${longitude.toFixed(4)}`;\n    } catch (error) {\n      console.error(\"Reverse geocoding error:\", error);\n      return `Location: ${latitude.toFixed(4)}, ${longitude.toFixed(4)}`;\n    }\n  };\n\n  // 🎙️ Speech-to-text\n  const handleSpeechToText = () => {\n    const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n    if (!SpeechRecognition) {\n      alert(\"Speech recognition is not supported in this browser. Please use Chrome.\");\n      return;\n    }\n    if (recording) {\n      var _recognitionRef$curre;\n      (_recognitionRef$curre = recognitionRef.current) === null || _recognitionRef$curre === void 0 ? void 0 : _recognitionRef$curre.stop();\n      setRecording(false);\n      return;\n    }\n    const recognition = new SpeechRecognition();\n    recognition.lang = \"hi-IN\";\n    recognition.continuous = true;\n    recognition.interimResults = true;\n    recognition.onresult = async event => {\n      let transcript = \"\";\n      for (let i = 0; i < event.results.length; i++) {\n        transcript += event.results[i][0].transcript + \" \";\n      }\n      const hinglish = await transliterateToHinglish(transcript.trim());\n      setFormData(prev => ({\n        ...prev,\n        complaint: hinglish\n      }));\n    };\n    recognition.onerror = err => {\n      console.error(\"Speech Recognition Error:\", err);\n      setRecording(false);\n    };\n    recognition.onend = () => {\n      setRecording(false);\n    };\n    recognition.start();\n    recognitionRef.current = recognition;\n    setRecording(true);\n  };\n\n  // 📷 Camera Functions\n  const startCamera = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        video: {\n          facingMode: 'environment'\n        },\n        // Use back camera\n        audio: false\n      });\n      setCameraStream(stream);\n      setShowCamera(true);\n      if (videoRef.current) {\n        videoRef.current.srcObject = stream;\n      }\n    } catch (error) {\n      console.error(\"Camera access error:\", error);\n      alert(\"Unable to access camera. Please check permissions.\");\n    }\n  };\n  const stopCamera = () => {\n    if (cameraStream) {\n      cameraStream.getTracks().forEach(track => track.stop());\n      setCameraStream(null);\n    }\n    setShowCamera(false);\n  };\n  const capturePhoto = useCallback(async () => {\n    if (!videoRef.current || !canvasRef.current) return;\n    const video = videoRef.current;\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n\n    // Set canvas dimensions to match video\n    canvas.width = video.videoWidth;\n    canvas.height = video.videoHeight;\n\n    // Draw current video frame to canvas\n    context.drawImage(video, 0, 0);\n\n    // Get current location for geo-tagging\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(async position => {\n        const {\n          latitude,\n          longitude\n        } = position.coords;\n\n        // Add geo-tag overlay to image\n        context.fillStyle = 'rgba(0, 0, 0, 0.7)';\n        context.fillRect(0, canvas.height - 60, canvas.width, 60);\n        context.fillStyle = 'white';\n        context.font = '14px Arial';\n        context.fillText(`Location: ${latitude.toFixed(6)}, ${longitude.toFixed(6)}`, 10, canvas.height - 35);\n        context.fillText(`Captured: ${new Date().toLocaleString()}`, 10, canvas.height - 15);\n\n        // Convert to blob\n        canvas.toBlob(blob => {\n          const file = new File([blob], `complaint_photo_${Date.now()}.jpg`, {\n            type: 'image/jpeg'\n          });\n          setPhoto(file);\n          setPhotoPreview(canvas.toDataURL());\n          stopCamera();\n        }, 'image/jpeg', 0.8);\n      }, error => {\n        console.warn(\"Location not available for geo-tagging:\", error);\n        // Capture without geo-tag\n        canvas.toBlob(blob => {\n          const file = new File([blob], `complaint_photo_${Date.now()}.jpg`, {\n            type: 'image/jpeg'\n          });\n          setPhoto(file);\n          setPhotoPreview(canvas.toDataURL());\n          stopCamera();\n        }, 'image/jpeg', 0.8);\n      }, {\n        enableHighAccuracy: true,\n        timeout: 5000,\n        maximumAge: 0\n      });\n    }\n  }, [cameraStream]);\n  const handlePhotoChange = e => {\n    if (e.target.files && e.target.files[0]) {\n      const file = e.target.files[0];\n      setPhoto(file);\n\n      // Create preview\n      const reader = new FileReader();\n      reader.onload = e => setPhotoPreview(e.target.result);\n      reader.readAsDataURL(file);\n    }\n  };\n  const handleSelect = async address => {\n    setFormData({\n      ...formData,\n      location: address\n    });\n    setLiveCoords(null);\n    try {\n      const results = await geocodeByAddress(address);\n      await getLatLng(results[0]);\n    } catch (error) {\n      console.error(\"Error fetching coordinates\", error);\n    }\n  };\n  const handleLiveLocation = () => {\n    if (!navigator.geolocation) {\n      alert(\"Geolocation is not supported by your browser.\");\n      return;\n    }\n    setIsSubmitting(true);\n    navigator.geolocation.getCurrentPosition(async position => {\n      const {\n        latitude,\n        longitude\n      } = position.coords;\n      setLiveCoords({\n        latitude,\n        longitude\n      });\n\n      // Get human-readable address\n      const address = await reverseGeocode(latitude, longitude);\n      setFormData({\n        ...formData,\n        location: address\n      });\n      alert(\"Live location successfully captured!\");\n      setIsSubmitting(false);\n    }, error => {\n      console.warn(\"Geolocation error:\", error);\n      alert(\"⚠ Location not available. Please enable GPS.\");\n      setLiveCoords(null);\n      setIsSubmitting(false);\n    }, {\n      enableHighAccuracy: true,\n      timeout: 15000,\n      maximumAge: 0\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!formData.complaint.trim()) {\n      alert(\"Please speak or type your complaint.\");\n      return;\n    }\n\n    // Check authentication before submission\n    if (!isAuthenticated) {\n      alert(\"Please log in to submit a complaint. This ensures proper tracking and follow-up.\");\n      return;\n    }\n    setIsSubmitting(true);\n    try {\n      const formDataToSend = new FormData();\n      formDataToSend.append(\"complaint\", formData.complaint);\n      formDataToSend.append(\"location\", formData.location);\n\n      // Use authenticated user's name, not form input\n      if (user && user.name) {\n        formDataToSend.append(\"name\", user.name);\n      }\n      if (photo) {\n        formDataToSend.append(\"photo\", photo);\n      }\n      if (liveCoords) {\n        formDataToSend.append(\"latitude\", liveCoords.latitude);\n        formDataToSend.append(\"longitude\", liveCoords.longitude);\n      }\n\n      // Add metadata\n      formDataToSend.append(\"timestamp\", new Date().toISOString());\n      formDataToSend.append(\"hasPhoto\", !!photo);\n      formDataToSend.append(\"hasGeoLocation\", !!liveCoords);\n      formDataToSend.append(\"dashboardSource\", \"enhanced-complaint-form\");\n      formDataToSend.append(\"submissionType\", \"authenticated-form-with-nlp\");\n      formDataToSend.append(\"userAgent\", navigator.userAgent);\n      formDataToSend.append(\"platform\", navigator.platform);\n\n      // Make authenticated request\n      const config = getAxiosConfig();\n      const res = await axios.post(\"http://localhost:5000/api/complaint\", formDataToSend, config);\n\n      // Handle backend response\n      const complaintData = res.data.complaint || res.data;\n      const complaintId = complaintData.complaintId || res.data.complaintId;\n      setComplaintId(complaintId);\n      setSubmitted(true);\n\n      // Reset form\n      setFormData({\n        name: (user === null || user === void 0 ? void 0 : user.name) || \"\",\n        complaint: \"\",\n        location: \"\"\n      });\n      setPhoto(null);\n      setPhotoPreview(null);\n      setLiveCoords(null);\n\n      // Show success message with user info\n      alert(`Complaint submitted successfully!\\n\\nComplaint ID: ${complaintId}\\nSubmitted by: ${user.name}\\nDepartment: ${complaintData.department || 'General'}\\nUrgency: ${complaintData.urgency || 'Medium'}`);\n    } catch (err) {\n      var _err$response;\n      console.error(\"Submission failed:\", err);\n\n      // Handle specific error cases\n      if (((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.status) === 401) {\n        alert(\"Authentication expired. Please log in again.\");\n        setIsAuthenticated(false);\n        setUser(null);\n        setAuthToken(null);\n      } else {\n        alert(\"Complaint submission failed. Please try again.\");\n      }\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-xl mx-auto mt-10 p-6 bg-white rounded shadow\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-semibold mb-4\",\n      children: \"Complaint Form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1372,\n      columnNumber: 7\n    }, this), isAuthenticated ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4 p-3 bg-green-100 rounded-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-green-800\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"font-semibold\",\n          children: \"Logged in as:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1378,\n          columnNumber: 13\n        }, this), \" \", user === null || user === void 0 ? void 0 : user.name, \" (\", user === null || user === void 0 ? void 0 : user.email, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1377,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-sm text-green-600\",\n        children: \"Your complaints will be properly tracked and you'll receive updates.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1380,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1376,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4 p-3 bg-yellow-100 rounded-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-yellow-800 font-semibold\",\n        children: \"Please log in to submit complaints\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1386,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-sm text-yellow-600\",\n        children: \"Authentication ensures proper complaint tracking and follow-up communication.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1389,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1385,\n      columnNumber: 9\n    }, this), showCamera && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 bg-black bg-opacity-75 flex items-center justify-center z-50\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-4 rounded-lg max-w-md w-full\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"relative\",\n          children: [/*#__PURE__*/_jsxDEV(\"video\", {\n            ref: videoRef,\n            autoPlay: true,\n            playsInline: true,\n            className: \"w-full h-64 object-cover rounded\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1400,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-center space-x-4 mt-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: capturePhoto,\n              className: \"bg-blue-600 text-white px-4 py-2 rounded\",\n              children: \"\\uD83D\\uDCF7 Capture\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1407,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: stopCamera,\n              className: \"bg-gray-600 text-white px-4 py-2 rounded\",\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1413,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1406,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1399,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1398,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1397,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"space-y-4\",\n      children: [\"User Name (Read-only for authenticated users)\", /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block text-sm font-medium text-gray-700 mb-1\",\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1429,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: formData.name,\n          onChange: e => setFormData({\n            ...formData,\n            name: e.target.value\n          }),\n          placeholder: \"Your name\",\n          readOnly: isAuthenticated,\n          className: `w-full border px-3 py-2 rounded ${isAuthenticated ? 'bg-gray-100 cursor-not-allowed' : ''}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1432,\n          columnNumber: 11\n        }, this), isAuthenticated && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-xs text-gray-500 mt-1\",\n          children: \"Name auto-filled from your account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1443,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1428,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleSpeechToText,\n        disabled: !isAuthenticated,\n        className: `w-full px-4 py-2 rounded-lg font-semibold ${!isAuthenticated ? \"bg-gray-400 cursor-not-allowed\" : recording ? \"bg-red-500\" : \"bg-purple-600\"} text-white`,\n        children: !isAuthenticated ? \"🔒 Login Required for Voice Input\" : recording ? \"🛑 बोलना रोकें\" : \"🎤 शिकायत बोलें\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1450,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        name: \"complaint\",\n        value: formData.complaint,\n        onChange: e => setFormData({\n          ...formData,\n          complaint: e.target.value\n        }),\n        placeholder: \"Describe your complaint or speak...\",\n        required: true,\n        disabled: !isAuthenticated,\n        className: `w-full border px-3 py-2 rounded h-32 ${!isAuthenticated ? 'bg-gray-100 cursor-not-allowed' : ''}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1471,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block text-sm font-medium text-gray-700 mb-1\",\n          children: \"Location\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1485,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex gap-2\",\n          children: [/*#__PURE__*/_jsxDEV(PlacesAutocomplete, {\n            value: formData.location,\n            onChange: address => {\n              setFormData({\n                ...formData,\n                location: address\n              });\n              setLiveCoords(null);\n            },\n            onSelect: handleSelect,\n            searchOptions: {\n              componentRestrictions: {\n                country: [\"in\"]\n              }\n            },\n            children: ({\n              getInputProps,\n              suggestions,\n              getSuggestionItemProps,\n              loading\n            }) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"w-full\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                ...getInputProps({\n                  placeholder: \"Search Location...\",\n                  className: `w-full border px-3 py-2 rounded ${!isAuthenticated ? 'bg-gray-100 cursor-not-allowed' : ''}`,\n                  disabled: !isAuthenticated\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1500,\n                columnNumber: 19\n              }, this), isAuthenticated && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"border rounded bg-white mt-1\",\n                children: [loading && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"p-2 text-gray-500\",\n                  children: \"Loading...\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1511,\n                  columnNumber: 35\n                }, this), suggestions.map(suggestion => {\n                  const className = suggestion.active ? \"p-2 bg-blue-100 cursor-pointer\" : \"p-2 cursor-pointer\";\n                  return /*#__PURE__*/_createElement(\"div\", {\n                    ...getSuggestionItemProps(suggestion, {\n                      className\n                    }),\n                    key: suggestion.placeId,\n                    __self: this,\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 1517,\n                      columnNumber: 27\n                    }\n                  }, suggestion.description);\n                })]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1510,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1499,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1489,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: handleLiveLocation,\n            disabled: isSubmitting || !isAuthenticated,\n            className: `px-4 py-2 rounded text-sm text-white ${!isAuthenticated || isSubmitting ? \"bg-gray-400\" : \"bg-blue-600\"}`,\n            children: \"\\uD83D\\uDCCD Live\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1530,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1488,\n          columnNumber: 11\n        }, this), liveCoords && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-xs text-green-600 mt-1\",\n          children: [\"\\uD83D\\uDCCD Live Location Captured: \", liveCoords.latitude.toFixed(4), \", \", liveCoords.longitude.toFixed(4)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1542,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1484,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block text-sm font-medium text-gray-700 mb-1\",\n          children: \"Upload / Capture Photo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1550,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex gap-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            accept: \"image/*\",\n            capture: \"environment\",\n            onChange: handlePhotoChange,\n            disabled: !isAuthenticated,\n            className: `flex-1 border px-3 py-2 rounded ${!isAuthenticated ? 'bg-gray-100 cursor-not-allowed' : ''}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1554,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: startCamera,\n            disabled: !isAuthenticated,\n            className: `px-4 py-2 rounded text-sm text-white ${!isAuthenticated ? \"bg-gray-400\" : \"bg-green-600\"}`,\n            children: \"\\uD83D\\uDCF7 Camera\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1564,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1553,\n          columnNumber: 11\n        }, this), photoPreview && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: photoPreview,\n            alt: \"Preview\",\n            className: \"w-full h-32 object-cover rounded border\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1578,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => {\n              setPhoto(null);\n              setPhotoPreview(null);\n            },\n            className: \"mt-1 text-red-600 text-sm\",\n            children: \"\\u274C Remove Photo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1583,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1577,\n          columnNumber: 13\n        }, this), photo && !photoPreview && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-xs text-gray-500 mt-1\",\n          children: [\"Selected: \", photo.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1597,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1549,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: isSubmitting || !isAuthenticated,\n        className: `w-full ${!isAuthenticated || isSubmitting ? \"bg-gray-400\" : \"bg-green-600\"} text-white px-4 py-2 rounded font-semibold`,\n        children: !isAuthenticated ? \"🔒 Please Login to Submit\" : isSubmitting ? \"⏳ Submitting...\" : \"✅ Submit Complaint\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1601,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1425,\n      columnNumber: 7\n    }, this), submitted && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-6 p-4 bg-green-100 rounded-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-green-700 font-semibold\",\n        children: [\"\\u2705 Complaint submitted successfully!\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1620,\n          columnNumber: 48\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-lg\",\n          children: [\"Your Complaint ID: \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"font-bold text-green-800\",\n            children: complaintId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1621,\n            columnNumber: 58\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1621,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1619,\n        columnNumber: 11\n      }, this), user && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-sm text-green-600 mt-2\",\n        children: [\"Submitted by: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: user.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1625,\n          columnNumber: 29\n        }, this), \" (\", user.email, \")\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1625,\n          columnNumber: 72\n        }, this), \"Your complaint is being analyzed and will be forwarded to the appropriate department based on urgency and category.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1624,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1618,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      style: {\n        display: 'none'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1633,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1371,\n    columnNumber: 5\n  }, this);\n}\n_s(ComplaintForm, \"AVydr5vYAmC5diDh7xI5kzkO0EQ=\");\n_c = ComplaintForm;\nvar _c;\n$RefreshReg$(_c, \"ComplaintForm\");","map":{"version":3,"names":["React","useState","useRef","useCallback","useEffect","createElement","_createElement","axios","PlacesAutocomplete","geocodeByAddress","getLatLng","jsxDEV","_jsxDEV","ComplaintForm","_s","formData","setFormData","name","complaint","location","photo","setPhoto","photoPreview","setPhotoPreview","complaintId","setComplaintId","submitted","setSubmitted","isSubmitting","setIsSubmitting","liveCoords","setLiveCoords","recording","setRecording","cameraStream","setCameraStream","showCamera","setShowCamera","user","setUser","authToken","setAuthToken","isAuthenticated","setIsAuthenticated","recognitionRef","videoRef","canvasRef","checkAuthentication","token","localStorage","getItem","sessionStorage","console","warn","response","get","headers","data","success","prev","log","error","removeItem","getAxiosConfig","config","transliterateToHinglish","text","res","fetch","encodeURIComponent","json","err","reverseGeocode","latitude","longitude","process","env","REACT_APP_GOOGLE_MAPS_API_KEY","results","length","formatted_address","toFixed","handleSpeechToText","SpeechRecognition","window","webkitSpeechRecognition","alert","_recognitionRef$curre","current","stop","recognition","lang","continuous","interimResults","onresult","event","transcript","i","hinglish","trim","onerror","onend","start","startCamera","stream","navigator","mediaDevices","getUserMedia","video","facingMode","audio","srcObject","stopCamera","getTracks","forEach","track","capturePhoto","canvas","context","getContext","width","videoWidth","height","videoHeight","drawImage","geolocation","getCurrentPosition","position","coords","fillStyle","fillRect","font","fillText","Date","toLocaleString","toBlob","blob","file","File","now","type","toDataURL","enableHighAccuracy","timeout","maximumAge","handlePhotoChange","e","target","files","reader","FileReader","onload","result","readAsDataURL","handleSelect","address","handleLiveLocation","handleSubmit","preventDefault","formDataToSend","FormData","append","toISOString","userAgent","platform","post","complaintData","department","urgency","_err$response","status","className","children","fileName","_jsxFileName","lineNumber","columnNumber","email","ref","autoPlay","playsInline","onClick","onSubmit","value","onChange","placeholder","readOnly","disabled","required","onSelect","searchOptions","componentRestrictions","country","getInputProps","suggestions","getSuggestionItemProps","loading","map","suggestion","active","key","placeId","__self","__source","description","accept","capture","src","alt","style","display","_c","$RefreshReg$"],"sources":["D:/Kunal Files/projects/janta_voice_new1/Janta_Voice_Final/frontend/src/pages/ComplaintForm.jsx"],"sourcesContent":["// // import React, { useState } from \"react\";\r\n// // import axios from \"axios\";\r\n// // import PlacesAutocomplete, { geocodeByAddress, getLatLng } from \"react-places-autocomplete\";\r\n\r\n// // export default function ComplaintForm() {\r\n// //   const [formData, setFormData] = useState({\r\n// //     name: \"\",\r\n// //     complaint: \"\",\r\n// //     location: \"\",\r\n// //     urgency: \"normal\",\r\n// //     department: \"\",\r\n// //   });\r\n\r\n// //   const [photo, setPhoto] = useState(null);\r\n// //   const [complaintId, setComplaintId] = useState(null);\r\n// //   const [submitted, setSubmitted] = useState(false);\r\n\r\n// //   const handleChange = (e) => {\r\n// //     setFormData({ ...formData, [e.target.name]: e.target.value });\r\n// //   };\r\n\r\n// //   // location select handler\r\n// //   const handleSelect = async (address) => {\r\n// //     setFormData({ ...formData, location: address });\r\n// //     try {\r\n// //       const results = await geocodeByAddress(address);\r\n// //       const latLng = await getLatLng(results[0]);\r\n// //       console.log(\"Coordinates: \", latLng); // agar latitude/longitude bhi chahiye backend ke liye\r\n// //     } catch (error) {\r\n// //       console.error(\"Error fetching coordinates\", error);\r\n// //     }\r\n// //   };\r\n\r\n// //   const handlePhotoChange = (e) => {\r\n// //     if (e.target.files && e.target.files[0]) {\r\n// //       setPhoto(e.target.files[0]);\r\n// //     }\r\n// //   };\r\n\r\n// //   const handleSubmit = async (e) => {\r\n// //     e.preventDefault();\r\n\r\n// //     try {\r\n// //       const formDataToSend = new FormData();\r\n// //       Object.keys(formData).forEach((key) => {\r\n// //         formDataToSend.append(key, formData[key]);\r\n// //       });\r\n// //       if (photo) {\r\n// //         formDataToSend.append(\"photo\", photo);\r\n// //       }\r\n\r\n// //       const res = await axios.post(\"http://localhost:5000/api/complaint\", formDataToSend, {\r\n// //         headers: { \"Content-Type\": \"multipart/form-data\" },\r\n// //       });\r\n\r\n// //       setComplaintId(res.data.complaint.complaintId);\r\n// //       setSubmitted(true);\r\n\r\n// //       setFormData({\r\n// //         name: \"\",\r\n// //         complaint: \"\",\r\n// //         location: \"\",\r\n// //         urgency: \"normal\",\r\n// //         department: \"\",\r\n// //       });\r\n// //       setPhoto(null);\r\n// //     } catch (err) {\r\n// //       console.error(\"Submission failed:\", err.message);\r\n// //       alert(\"Complaint submission failed. Try again.\");\r\n// //     }\r\n// //   };\r\n\r\n// //   return (\r\n// //     <div className=\"max-w-xl mx-auto mt-10 p-6 bg-white rounded shadow\">\r\n// //       <h2 className=\"text-2xl font-semibold mb-4\">Complaint Form</h2>\r\n// //       <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n// //         <input\r\n// //           name=\"name\"\r\n// //           value={formData.name}\r\n// //           onChange={handleChange}\r\n// //           placeholder=\"Your Name\"\r\n// //           required\r\n// //           className=\"w-full border px-3 py-2 rounded\"\r\n// //         />\r\n// //         <textarea\r\n// //           name=\"complaint\"\r\n// //           value={formData.complaint}\r\n// //           onChange={handleChange}\r\n// //           placeholder=\"Describe your complaint\"\r\n// //           required\r\n// //           className=\"w-full border px-3 py-2 rounded\"\r\n// //         />\r\n\r\n// //         {/* Location Autocomplete */}\r\n// //         <PlacesAutocomplete\r\n// //           value={formData.location}\r\n// //           onChange={(address) => setFormData({ ...formData, location: address })}\r\n// //           onSelect={handleSelect}\r\n// //           searchOptions={{ componentRestrictions: { country: [\"in\"] } }} // restrict to India\r\n// //         >\r\n// //           {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\r\n// //             <div>\r\n// //               <input\r\n// //                 {...getInputProps({\r\n// //                   placeholder: \"Search Location (India only)\",\r\n// //                   className: \"w-full border px-3 py-2 rounded\",\r\n// //                 })}\r\n// //               />\r\n// //               <div className=\"border rounded bg-white mt-1\">\r\n// //                 {loading && <div className=\"p-2 text-gray-500\">Loading...</div>}\r\n// //                 {suggestions.map((suggestion) => {\r\n// //                   const className = suggestion.active\r\n// //                     ? \"p-2 bg-blue-100 cursor-pointer\"\r\n// //                     : \"p-2 cursor-pointer\";\r\n// //                   return (\r\n// //                     <div\r\n// //                       {...getSuggestionItemProps(suggestion, { className })}\r\n// //                       key={suggestion.placeId}\r\n// //                     >\r\n// //                       {suggestion.description}\r\n// //                     </div>\r\n// //                   );\r\n// //                 })}\r\n// //               </div>\r\n// //             </div>\r\n// //           )}\r\n// //         </PlacesAutocomplete>\r\n\r\n// //         {/* Department */}\r\n// //         <select\r\n// //           name=\"department\"\r\n// //           value={formData.department}\r\n// //           onChange={handleChange}\r\n// //           className=\"w-full border px-3 py-2 rounded\"\r\n// //           required\r\n// //         >\r\n// //           <option value=\"\">Select a Department</option>\r\n// //           <option value=\"Public Works\">Public Works</option>\r\n// //           <option value=\"Water Supply\">Water Supply</option>\r\n// //           <option value=\"Sanitation\">Sanitation</option>\r\n// //           <option value=\"Electricity\">Electricity</option>\r\n// //           <option value=\"Other\">Other</option>\r\n// //         </select>\r\n\r\n// //         {/* Urgency */}\r\n// //         <select\r\n// //           name=\"urgency\"\r\n// //           value={formData.urgency}\r\n// //           onChange={handleChange}\r\n// //           className=\"w-full border px-3 py-2 rounded\"\r\n// //         >\r\n// //           <option value=\"normal\">Normal</option>\r\n// //           <option value=\"urgent\">Urgent</option>\r\n// //         </select>\r\n\r\n// //         {/* Photo Upload */}\r\n// //         <div>\r\n// //           <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n// //             Upload / Capture Photo\r\n// //           </label>\r\n// //           <input\r\n// //             type=\"file\"\r\n// //             accept=\"image/*\"\r\n// //             capture=\"environment\"\r\n// //             onChange={handlePhotoChange}\r\n// //             className=\"w-full border px-3 py-2 rounded\"\r\n// //           />\r\n// //           {photo && (\r\n// //             <p className=\"text-xs text-gray-500 mt-1\">Selected: {photo.name}</p>\r\n// //           )}\r\n// //         </div>\r\n\r\n// //         <button\r\n// //           type=\"submit\"\r\n// //           className=\"bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700\"\r\n// //         >\r\n// //           Submit\r\n// //         </button>\r\n// //       </form>\r\n\r\n// //       {submitted && (\r\n// //         <div className=\"mt-6 text-green-700 font-semibold\">\r\n// //           Complaint submitted successfully!<br />\r\n// //           Your Complaint ID: <span className=\"font-bold\">{complaintId}</span>\r\n// //         </div>\r\n// //       )}\r\n// //     </div>\r\n// //   );\r\n// // }\r\n// import React, { useState } from \"react\";\r\n// import axios from \"axios\";\r\n// import PlacesAutocomplete, {\r\n//   geocodeByAddress,\r\n//   getLatLng,\r\n// } from \"react-places-autocomplete\";\r\n\r\n// export default function ComplaintForm() {\r\n//   const [formData, setFormData] = useState({\r\n//     name: \"\",\r\n//     complaint: \"\",\r\n//     location: \"\",\r\n//     urgency: \"normal\",\r\n//     department: \"\",\r\n//   });\r\n\r\n//   const [photo, setPhoto] = useState(null);\r\n//   const [complaintId, setComplaintId] = useState(null);\r\n//   const [submitted, setSubmitted] = useState(false);\r\n//   const [isSubmitting, setIsSubmitting] = useState(false);\r\n//   const [liveCoords, setLiveCoords] = useState(null);\r\n\r\n//   const handleChange = (e) => {\r\n//     setFormData({ ...formData, [e.target.name]: e.target.value });\r\n//   };\r\n\r\n//   const handlePhotoChange = (e) => {\r\n//     if (e.target.files && e.target.files[0]) {\r\n//       setPhoto(e.target.files[0]);\r\n//     }\r\n//   };\r\n\r\n//   // Google Places Autocomplete handler\r\n//   const handleSelect = async (address) => {\r\n//     setFormData({ ...formData, location: address });\r\n//     setLiveCoords(null); // Clear live coords if user selects an address\r\n//     try {\r\n//       const results = await geocodeByAddress(address);\r\n//       const latLng = await getLatLng(results[0]);\r\n//       console.log(\"Selected Location Coordinates: \", latLng);\r\n//       // You can store these coords in state if your backend needs them\r\n//     } catch (error) {\r\n//       console.error(\"Error fetching coordinates\", error);\r\n//     }\r\n//   };\r\n\r\n//   // Live location button handler\r\n//   const handleLiveLocation = () => {\r\n//     if (!navigator.geolocation) {\r\n//       alert(\"Geolocation is not supported by your browser.\");\r\n//       return;\r\n//     }\r\n\r\n//     setIsSubmitting(true);\r\n//     navigator.geolocation.getCurrentPosition(\r\n//       (position) => {\r\n//         const { latitude, longitude } = position.coords;\r\n//         setLiveCoords({ latitude, longitude });\r\n//         setFormData({ ...formData, location: \"Live Location Captured\" });\r\n//         alert(\"Live location successfully captured!\");\r\n//         setIsSubmitting(false);\r\n//       },\r\n//       (error) => {\r\n//         console.warn(\"Geolocation error:\", error);\r\n//         alert(\"⚠ Location not available. Please enable GPS for accurate location.\");\r\n//         setLiveCoords(null);\r\n//         setIsSubmitting(false);\r\n//       },\r\n//       { enableHighAccuracy: true, timeout: 15000, maximumAge: 0 }\r\n//     );\r\n//   };\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     setIsSubmitting(true);\r\n\r\n//     try {\r\n//       const formDataToSend = new FormData();\r\n//       Object.keys(formData).forEach((key) => {\r\n//         formDataToSend.append(key, formData[key]);\r\n//       });\r\n\r\n//       if (photo) {\r\n//         formDataToSend.append(\"photo\", photo);\r\n//       }\r\n\r\n//       // Logic to determine which location to send\r\n//       let latLng = null;\r\n//       if (liveCoords) {\r\n//         // Option 1: Live location is captured\r\n//         latLng = liveCoords;\r\n//       } else if (formData.location) {\r\n//         // Option 2: User typed and selected a location\r\n//         const results = await geocodeByAddress(formData.location);\r\n//         latLng = await getLatLng(results[0]);\r\n//       }\r\n\r\n//       if (latLng) {\r\n//         formDataToSend.append(\"latitude\", latLng.latitude);\r\n//         formDataToSend.append(\"longitude\", latLng.longitude);\r\n//       }\r\n\r\n//       const res = await axios.post(\"http://localhost:5000/api/complaint\", formDataToSend, {\r\n//         headers: { \"Content-Type\": \"multipart/form-data\" },\r\n//       });\r\n\r\n//       setComplaintId(res.data.complaint.complaintId);\r\n//       setSubmitted(true);\r\n//       alert(`Complaint submitted successfully! Your Complaint ID is: ${res.data.complaint.complaintId}`);\r\n\r\n//       // Reset form\r\n//       setFormData({\r\n//         name: \"\",\r\n//         complaint: \"\",\r\n//         location: \"\",\r\n//         urgency: \"normal\",\r\n//         department: \"\",\r\n//       });\r\n//       setPhoto(null);\r\n//       setLiveCoords(null);\r\n//     } catch (err) {\r\n//       console.error(\"Submission failed:\", err.message);\r\n//       alert(\"Complaint submission failed. Please try again.\");\r\n//     } finally {\r\n//       setIsSubmitting(false);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"max-w-xl mx-auto mt-10 p-6 bg-white rounded shadow\">\r\n//       <h2 className=\"text-2xl font-semibold mb-4\">Complaint Form</h2>\r\n//       <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n//         {/* Input fields */}\r\n//         <input\r\n//           name=\"name\"\r\n//           value={formData.name}\r\n//           onChange={handleChange}\r\n//           placeholder=\"Your Name\"\r\n//           required\r\n//           className=\"w-full border px-3 py-2 rounded\"\r\n//         />\r\n//         <textarea\r\n//           name=\"complaint\"\r\n//           value={formData.complaint}\r\n//           onChange={handleChange}\r\n//           placeholder=\"Describe your complaint\"\r\n//           required\r\n//           className=\"w-full border px-3 py-2 rounded\"\r\n//         />\r\n\r\n//         {/* Location Section */}\r\n//         <div>\r\n//           <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n//             Location\r\n//           </label>\r\n//           <div className=\"flex gap-2\">\r\n//             <PlacesAutocomplete\r\n//               value={formData.location}\r\n//               onChange={(address) => {\r\n//                 setFormData({ ...formData, location: address });\r\n//                 setLiveCoords(null);\r\n//               }}\r\n//               onSelect={handleSelect}\r\n//               searchOptions={{ componentRestrictions: { country: [\"in\"] } }}\r\n//             >\r\n//               {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\r\n//                 <div className=\"w-full\">\r\n//                   <input\r\n//                     {...getInputProps({\r\n//                       placeholder: \"Search Location...\",\r\n//                       className: \"w-full border px-3 py-2 rounded\",\r\n//                     })}\r\n//                   />\r\n//                   <div className=\"border rounded bg-white mt-1\">\r\n//                     {loading && <div className=\"p-2 text-gray-500\">Loading...</div>}\r\n//                     {suggestions.map((suggestion) => {\r\n//                       const className = suggestion.active\r\n//                         ? \"p-2 bg-blue-100 cursor-pointer\"\r\n//                         : \"p-2 cursor-pointer\";\r\n//                       return (\r\n//                         <div\r\n//                           {...getSuggestionItemProps(suggestion, { className })}\r\n//                           key={suggestion.placeId}\r\n//                         >\r\n//                           {suggestion.description}\r\n//                         </div>\r\n//                       );\r\n//                     })}\r\n//                   </div>\r\n//                 </div>\r\n//               )}\r\n//             </PlacesAutocomplete>\r\n//             <button\r\n//               type=\"button\"\r\n//               onClick={handleLiveLocation}\r\n//               disabled={isSubmitting}\r\n//               className={`px-4 py-2 rounded text-sm text-white ${\r\n//                 isSubmitting ? \"bg-gray-400\" : \"bg-blue-600\"\r\n//               }`}\r\n//             >\r\n//               Live\r\n//             </button>\r\n//           </div>\r\n//           {liveCoords && (\r\n//             <p className=\"text-xs text-green-600 mt-1\">\r\n//               Live Location: {liveCoords.latitude.toFixed(4)}, {liveCoords.longitude.toFixed(4)}\r\n//             </p>\r\n//           )}\r\n//         </div>\r\n\r\n//         {/* Other form elements */}\r\n//         <select\r\n//           name=\"department\"\r\n//           value={formData.department}\r\n//           onChange={handleChange}\r\n//           className=\"w-full border px-3 py-2 rounded\"\r\n//           required\r\n//         >\r\n//           <option value=\"\">Select a Department</option>\r\n//           <option value=\"Public Works\">Public Works</option>\r\n//           <option value=\"Water Supply\">Water Supply</option>\r\n//           <option value=\"Sanitation\">Sanitation</option>\r\n//           <option value=\"Electricity\">Electricity</option>\r\n//           <option value=\"Other\">Other</option>\r\n//         </select>\r\n\r\n//         <select\r\n//           name=\"urgency\"\r\n//           value={formData.urgency}\r\n//           onChange={handleChange}\r\n//           className=\"w-full border px-3 py-2 rounded\"\r\n//         >\r\n//           <option value=\"normal\">Normal</option>\r\n//           <option value=\"urgent\">Urgent</option>\r\n//         </select>\r\n\r\n//         <div>\r\n//           <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n//             Upload / Capture Photo\r\n//           </label>\r\n//           <input\r\n//             type=\"file\"\r\n//             accept=\"image/*\"\r\n//             capture=\"environment\"\r\n//             onChange={handlePhotoChange}\r\n//             className=\"w-full border px-3 py-2 rounded\"\r\n//           />\r\n//           {photo && (\r\n//             <p className=\"text-xs text-gray-500 mt-1\">Selected: {photo.name}</p>\r\n//           )}\r\n//         </div>\r\n\r\n//         <button\r\n//           type=\"submit\"\r\n//           disabled={isSubmitting}\r\n//           className={`w-full ${\r\n//             isSubmitting ? \"bg-gray-400\" : \"bg-blue-600\"\r\n//           } text-white px-4 py-2 rounded hover:bg-blue-700`}\r\n//         >\r\n//           {isSubmitting ? \"Submitting...\" : \"Submit Complaint\"}\r\n//         </button>\r\n//       </form>\r\n\r\n//       {submitted && (\r\n//         <div className=\"mt-6 text-green-700 font-semibold\">\r\n//           Complaint submitted successfully!<br />\r\n//           Your Complaint ID: <span className=\"font-bold\">{complaintId}</span>\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useState, useRef, useCallback } from \"react\";\r\n// import axios from \"axios\";\r\n// import PlacesAutocomplete, {\r\n//   geocodeByAddress,\r\n//   getLatLng,\r\n// } from \"react-places-autocomplete\";\r\n\r\n// export default function ComplaintForm() {\r\n//   const [formData, setFormData] = useState({\r\n//     name: \"\",\r\n//     complaint: \"\",\r\n//     location: \"\"\r\n//   });\r\n\r\n//   const [photo, setPhoto] = useState(null);\r\n//   const [photoPreview, setPhotoPreview] = useState(null);\r\n//   const [complaintId, setComplaintId] = useState(null);\r\n//   const [submitted, setSubmitted] = useState(false);\r\n//   const [isSubmitting, setIsSubmitting] = useState(false);\r\n//   const [liveCoords, setLiveCoords] = useState(null);\r\n//   const [recording, setRecording] = useState(false);\r\n//   const [cameraStream, setCameraStream] = useState(null);\r\n//   const [showCamera, setShowCamera] = useState(false);\r\n\r\n//   const recognitionRef = useRef(null);\r\n//   const videoRef = useRef(null);\r\n//   const canvasRef = useRef(null);\r\n\r\n//   // 🔤 Transliteration (Hindi → Hinglish)\r\n//   const transliterateToHinglish = async (text) => {\r\n//     try {\r\n//       const res = await fetch(\r\n//         `https://inputtools.google.com/request?text=${encodeURIComponent(\r\n//           text\r\n//         )}&itc=hi-t-i0-und&num=1&cp=0&cs=1&ie=utf-8&oe=utf-8&app=demopage`\r\n//       );\r\n//       const data = await res.json();\r\n//       if (data[0] === \"SUCCESS\") {\r\n//         return data[1][0][1][0];\r\n//       }\r\n//       return text;\r\n//     } catch (err) {\r\n//       console.error(\"Transliteration API error:\", err);\r\n//       return text;\r\n//     }\r\n//   };\r\n\r\n//   // 🌍 Reverse Geocoding - Convert coordinates to address\r\n//   const reverseGeocode = async (latitude, longitude) => {\r\n//     try {\r\n//       const response = await fetch(\r\n//         `https://maps.googleapis.com/maps/api/geocode/json?latlng=${latitude},${longitude}&key=${process.env.REACT_APP_GOOGLE_MAPS_API_KEY}`\r\n//       );\r\n//       const data = await response.json();\r\n      \r\n//       if (data.results && data.results.length > 0) {\r\n//         return data.results[0].formatted_address;\r\n//       }\r\n//       return `Location: ${latitude.toFixed(4)}, ${longitude.toFixed(4)}`;\r\n//     } catch (error) {\r\n//       console.error(\"Reverse geocoding error:\", error);\r\n//       return `Location: ${latitude.toFixed(4)}, ${longitude.toFixed(4)}`;\r\n//     }\r\n//   };\r\n\r\n//   // 🎙️ Speech-to-text\r\n//   const handleSpeechToText = () => {\r\n//     const SpeechRecognition =\r\n//       window.SpeechRecognition || window.webkitSpeechRecognition;\r\n\r\n//     if (!SpeechRecognition) {\r\n//       alert(\"Speech recognition is not supported in this browser. Please use Chrome.\");\r\n//       return;\r\n//     }\r\n\r\n//     if (recording) {\r\n//       recognitionRef.current?.stop();\r\n//       setRecording(false);\r\n//       return;\r\n//     }\r\n\r\n//     const recognition = new SpeechRecognition();\r\n//     recognition.lang = \"hi-IN\";\r\n//     recognition.continuous = true;\r\n//     recognition.interimResults = true;\r\n\r\n//     recognition.onresult = async (event) => {\r\n//       let transcript = \"\";\r\n//       for (let i = 0; i < event.results.length; i++) {\r\n//         transcript += event.results[i][0].transcript + \" \";\r\n//       }\r\n//       const hinglish = await transliterateToHinglish(transcript.trim());\r\n//       setFormData((prev) => ({ ...prev, complaint: hinglish }));\r\n//     };\r\n\r\n//     recognition.onerror = (err) => {\r\n//       console.error(\"Speech Recognition Error:\", err);\r\n//       setRecording(false);\r\n//     };\r\n\r\n//     recognition.onend = () => {\r\n//       setRecording(false);\r\n//     };\r\n\r\n//     recognition.start();\r\n//     recognitionRef.current = recognition;\r\n//     setRecording(true);\r\n//   };\r\n\r\n//   // 📷 Camera Functions\r\n//   const startCamera = async () => {\r\n//     try {\r\n//       const stream = await navigator.mediaDevices.getUserMedia({\r\n//         video: { facingMode: 'environment' }, // Use back camera\r\n//         audio: false\r\n//       });\r\n      \r\n//       setCameraStream(stream);\r\n//       setShowCamera(true);\r\n      \r\n//       if (videoRef.current) {\r\n//         videoRef.current.srcObject = stream;\r\n//       }\r\n//     } catch (error) {\r\n//       console.error(\"Camera access error:\", error);\r\n//       alert(\"Unable to access camera. Please check permissions.\");\r\n//     }\r\n//   };\r\n\r\n//   const stopCamera = () => {\r\n//     if (cameraStream) {\r\n//       cameraStream.getTracks().forEach(track => track.stop());\r\n//       setCameraStream(null);\r\n//     }\r\n//     setShowCamera(false);\r\n//   };\r\n\r\n//   const capturePhoto = useCallback(async () => {\r\n//     if (!videoRef.current || !canvasRef.current) return;\r\n\r\n//     const video = videoRef.current;\r\n//     const canvas = canvasRef.current;\r\n//     const context = canvas.getContext('2d');\r\n\r\n//     // Set canvas dimensions to match video\r\n//     canvas.width = video.videoWidth;\r\n//     canvas.height = video.videoHeight;\r\n\r\n//     // Draw current video frame to canvas\r\n//     context.drawImage(video, 0, 0);\r\n\r\n//     // Get current location for geo-tagging\r\n//     if (navigator.geolocation) {\r\n//       navigator.geolocation.getCurrentPosition(\r\n//         async (position) => {\r\n//           const { latitude, longitude } = position.coords;\r\n          \r\n//           // Add geo-tag overlay to image\r\n//           context.fillStyle = 'rgba(0, 0, 0, 0.7)';\r\n//           context.fillRect(0, canvas.height - 60, canvas.width, 60);\r\n//           context.fillStyle = 'white';\r\n//           context.font = '14px Arial';\r\n//           context.fillText(`Location: ${latitude.toFixed(6)}, ${longitude.toFixed(6)}`, 10, canvas.height - 35);\r\n//           context.fillText(`Captured: ${new Date().toLocaleString()}`, 10, canvas.height - 15);\r\n\r\n//           // Convert to blob\r\n//           canvas.toBlob((blob) => {\r\n//             const file = new File([blob], `complaint_photo_${Date.now()}.jpg`, {\r\n//               type: 'image/jpeg'\r\n//             });\r\n            \r\n//             setPhoto(file);\r\n//             setPhotoPreview(canvas.toDataURL());\r\n//             stopCamera();\r\n//           }, 'image/jpeg', 0.8);\r\n//         },\r\n//         (error) => {\r\n//           console.warn(\"Location not available for geo-tagging:\", error);\r\n//           // Capture without geo-tag\r\n//           canvas.toBlob((blob) => {\r\n//             const file = new File([blob], `complaint_photo_${Date.now()}.jpg`, {\r\n//               type: 'image/jpeg'\r\n//             });\r\n            \r\n//             setPhoto(file);\r\n//             setPhotoPreview(canvas.toDataURL());\r\n//             stopCamera();\r\n//           }, 'image/jpeg', 0.8);\r\n//         },\r\n//         { enableHighAccuracy: true, timeout: 5000, maximumAge: 0 }\r\n//       );\r\n//     }\r\n//   }, [cameraStream]);\r\n\r\n//   const handlePhotoChange = (e) => {\r\n//     if (e.target.files && e.target.files[0]) {\r\n//       const file = e.target.files[0];\r\n//       setPhoto(file);\r\n      \r\n//       // Create preview\r\n//       const reader = new FileReader();\r\n//       reader.onload = (e) => setPhotoPreview(e.target.result);\r\n//       reader.readAsDataURL(file);\r\n//     }\r\n//   };\r\n\r\n//   const handleSelect = async (address) => {\r\n//     setFormData({ ...formData, location: address });\r\n//     setLiveCoords(null);\r\n//     try {\r\n//       const results = await geocodeByAddress(address);\r\n//       await getLatLng(results[0]);\r\n//     } catch (error) {\r\n//       console.error(\"Error fetching coordinates\", error);\r\n//     }\r\n//   };\r\n\r\n//   const handleLiveLocation = () => {\r\n//     if (!navigator.geolocation) {\r\n//       alert(\"Geolocation is not supported by your browser.\");\r\n//       return;\r\n//     }\r\n\r\n//     setIsSubmitting(true);\r\n//     navigator.geolocation.getCurrentPosition(\r\n//       async (position) => {\r\n//         const { latitude, longitude } = position.coords;\r\n//         setLiveCoords({ latitude, longitude });\r\n        \r\n//         // Get human-readable address\r\n//         const address = await reverseGeocode(latitude, longitude);\r\n//         setFormData({ ...formData, location: address });\r\n        \r\n//         alert(\"Live location successfully captured!\");\r\n//         setIsSubmitting(false);\r\n//       },\r\n//       (error) => {\r\n//         console.warn(\"Geolocation error:\", error);\r\n//         alert(\"⚠ Location not available. Please enable GPS.\");\r\n//         setLiveCoords(null);\r\n//         setIsSubmitting(false);\r\n//       },\r\n//       { enableHighAccuracy: true, timeout: 15000, maximumAge: 0 }\r\n//     );\r\n//   };\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     if (!formData.complaint.trim()) {\r\n//       alert(\"Please speak or type your complaint.\");\r\n//       return;\r\n//     }\r\n\r\n//     setIsSubmitting(true);\r\n//     try {\r\n//       const formDataToSend = new FormData();\r\n//       formDataToSend.append(\"complaint\", formData.complaint);\r\n//       formDataToSend.append(\"location\", formData.location);\r\n//       formDataToSend.append(\"name\", formData.name);\r\n\r\n//       if (photo) {\r\n//         formDataToSend.append(\"photo\", photo);\r\n//       }\r\n\r\n//       if (liveCoords) {\r\n//         formDataToSend.append(\"latitude\", liveCoords.latitude);\r\n//         formDataToSend.append(\"longitude\", liveCoords.longitude);\r\n//       }\r\n\r\n//       // Add metadata\r\n//       formDataToSend.append(\"timestamp\", new Date().toISOString());\r\n//       formDataToSend.append(\"hasPhoto\", !!photo);\r\n//       formDataToSend.append(\"hasGeoLocation\", !!liveCoords);\r\n//       formDataToSend.append(\"dashboardSource\", \"enhanced-complaint-form\");\r\n//       formDataToSend.append(\"submissionType\", \"form-with-nlp\");\r\n//       formDataToSend.append(\"userAgent\", navigator.userAgent);\r\n//       formDataToSend.append(\"platform\", navigator.platform);\r\n\r\n//       const res = await axios.post(\"http://localhost:5000/api/complaint\", formDataToSend, {\r\n//         headers: { \"Content-Type\": \"multipart/form-data\" },\r\n//       });\r\n\r\n//       // Handle backend response\r\n//       const complaintData = res.data.complaint || res.data;\r\n//       const complaintId = complaintData.complaintId || res.data.complaintId;\r\n//       setComplaintId(complaintId);\r\n//       setSubmitted(true);\r\n\r\n//       // Reset form\r\n//       setFormData({\r\n//         name: \"\",\r\n//         complaint: \"\",\r\n//         location: \"\"\r\n//       });\r\n//       setPhoto(null);\r\n//       setPhotoPreview(null);\r\n//       setLiveCoords(null);\r\n\r\n//       // Show success message\r\n//       alert(`Complaint submitted successfully! Your Complaint ID is: ${complaintId}`);\r\n\r\n//     } catch (err) {\r\n//       console.error(\"Submission failed:\", err.message);\r\n//       alert(\"Complaint submission failed.\");\r\n//     } finally {\r\n//       setIsSubmitting(false);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"max-w-xl mx-auto mt-10 p-6 bg-white rounded shadow\">\r\n//       <h2 className=\"text-2xl font-semibold mb-4\">Complaint Form</h2>\r\n      \r\n//       {/* Camera Modal */}\r\n//       {showCamera && (\r\n//         <div className=\"fixed inset-0 bg-black bg-opacity-75 flex items-center justify-center z-50\">\r\n//           <div className=\"bg-white p-4 rounded-lg max-w-md w-full\">\r\n//             <div className=\"relative\">\r\n//               <video\r\n//                 ref={videoRef}\r\n//                 autoPlay\r\n//                 playsInline\r\n//                 className=\"w-full h-64 object-cover rounded\"\r\n//               />\r\n//               <div className=\"flex justify-center space-x-4 mt-4\">\r\n//                 <button\r\n//                   onClick={capturePhoto}\r\n//                   className=\"bg-blue-600 text-white px-4 py-2 rounded\"\r\n//                 >\r\n//                   📷 Capture\r\n//                 </button>\r\n//                 <button\r\n//                   onClick={stopCamera}\r\n//                   className=\"bg-gray-600 text-white px-4 py-2 rounded\"\r\n//                 >\r\n//                   Cancel\r\n//                 </button>\r\n//               </div>\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n\r\n//       <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n        \r\n//         {/* 🎙️ Voice-to-Text */}\r\n//         <button\r\n//           type=\"button\"\r\n//           onClick={handleSpeechToText}\r\n//           className={`w-full px-4 py-2 rounded-lg font-semibold ${\r\n//             recording ? \"bg-red-500\" : \"bg-purple-600\"\r\n//           } text-white`}\r\n//         >\r\n//           {recording ? \"🛑 बोलना रोकें\" : \"🎤 शिकायत बोलें\"}\r\n//         </button>\r\n\r\n//         {/* Complaint Text */}\r\n//         <textarea\r\n//           name=\"complaint\"\r\n//           value={formData.complaint}\r\n//           onChange={(e) => setFormData({ ...formData, complaint: e.target.value })}\r\n//           placeholder=\"Describe your complaint or speak...\"\r\n//           required\r\n//           className=\"w-full border px-3 py-2 rounded h-32\"\r\n//         />\r\n\r\n//         {/* 📍 Location */}\r\n//         <div>\r\n//           <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n//             Location\r\n//           </label>\r\n//           <div className=\"flex gap-2\">\r\n//             <PlacesAutocomplete\r\n//               value={formData.location}\r\n//               onChange={(address) => {\r\n//                 setFormData({ ...formData, location: address });\r\n//                 setLiveCoords(null);\r\n//               }}\r\n//               onSelect={handleSelect}\r\n//               searchOptions={{ componentRestrictions: { country: [\"in\"] } }}\r\n//             >\r\n//               {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\r\n//                 <div className=\"w-full\">\r\n//                   <input\r\n//                     {...getInputProps({\r\n//                       placeholder: \"Search Location...\",\r\n//                       className: \"w-full border px-3 py-2 rounded\",\r\n//                     })}\r\n//                   />\r\n//                   <div className=\"border rounded bg-white mt-1\">\r\n//                     {loading && <div className=\"p-2 text-gray-500\">Loading...</div>}\r\n//                     {suggestions.map((suggestion) => {\r\n//                       const className = suggestion.active\r\n//                         ? \"p-2 bg-blue-100 cursor-pointer\"\r\n//                         : \"p-2 cursor-pointer\";\r\n//                       return (\r\n//                         <div\r\n//                           {...getSuggestionItemProps(suggestion, { className })}\r\n//                           key={suggestion.placeId}\r\n//                         >\r\n//                           {suggestion.description}\r\n//                         </div>\r\n//                       );\r\n//                     })}\r\n//                   </div>\r\n//                 </div>\r\n//               )}\r\n//             </PlacesAutocomplete>\r\n//             <button\r\n//               type=\"button\"\r\n//               onClick={handleLiveLocation}\r\n//               disabled={isSubmitting}\r\n//               className={`px-4 py-2 rounded text-sm text-white ${\r\n//                 isSubmitting ? \"bg-gray-400\" : \"bg-blue-600\"\r\n//               }`}\r\n//             >\r\n//               📍 Live\r\n//             </button>\r\n//           </div>\r\n//           {liveCoords && (\r\n//             <p className=\"text-xs text-green-600 mt-1\">\r\n//               📍 Live Location Captured: {liveCoords.latitude.toFixed(4)}, {liveCoords.longitude.toFixed(4)}\r\n//             </p>\r\n//           )}\r\n//         </div>\r\n\r\n//         {/* 📷 Photo Upload */}\r\n//         <div>\r\n//           <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n//             Upload / Capture Photo\r\n//           </label>\r\n//           <div className=\"flex gap-2\">\r\n//             <input\r\n//               type=\"file\"\r\n//               accept=\"image/*\"\r\n//               capture=\"environment\"\r\n//               onChange={handlePhotoChange}\r\n//               className=\"flex-1 border px-3 py-2 rounded\"\r\n//             />\r\n//             <button\r\n//               type=\"button\"\r\n//               onClick={startCamera}\r\n//               className=\"bg-green-600 text-white px-4 py-2 rounded text-sm\"\r\n//             >\r\n//               📷 Camera\r\n//             </button>\r\n//           </div>\r\n          \r\n//           {photoPreview && (\r\n//             <div className=\"mt-2\">\r\n//               <img \r\n//                 src={photoPreview} \r\n//                 alt=\"Preview\" \r\n//                 className=\"w-full h-32 object-cover rounded border\"\r\n//               />\r\n//               <button\r\n//                 type=\"button\"\r\n//                 onClick={() => {\r\n//                   setPhoto(null);\r\n//                   setPhotoPreview(null);\r\n//                 }}\r\n//                 className=\"mt-1 text-red-600 text-sm\"\r\n//               >\r\n//                 ❌ Remove Photo\r\n//               </button>\r\n//             </div>\r\n//           )}\r\n          \r\n//           {photo && !photoPreview && (\r\n//             <p className=\"text-xs text-gray-500 mt-1\">Selected: {photo.name}</p>\r\n//           )}\r\n//         </div>\r\n\r\n//         <button\r\n//           type=\"submit\"\r\n//           disabled={isSubmitting}\r\n//           className={`w-full ${\r\n//             isSubmitting ? \"bg-gray-400\" : \"bg-green-600\"\r\n//           } text-white px-4 py-2 rounded font-semibold`}\r\n//         >\r\n//           {isSubmitting ? \"⏳ Submitting...\" : \"✅ Submit Complaint\"}\r\n//         </button>\r\n//       </form>\r\n\r\n//       {submitted && (\r\n//         <div className=\"mt-6 p-4 bg-green-100 rounded-lg\">\r\n//           <div className=\"text-green-700 font-semibold\">\r\n//             ✅ Complaint submitted successfully!<br />\r\n//             <span className=\"text-lg\">Your Complaint ID: <span className=\"font-bold text-green-800\">{complaintId}</span></span>\r\n//           </div>\r\n//           <p className=\"text-sm text-green-600 mt-2\">\r\n//             Your complaint is being analyzed and will be forwarded to the appropriate department based on urgency and category.\r\n//           </p>\r\n//         </div>\r\n//       )}\r\n\r\n//       {/* Hidden canvas for photo processing */}\r\n//       <canvas ref={canvasRef} style={{ display: 'none' }} />\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n\r\nimport React, { useState, useRef, useCallback, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport PlacesAutocomplete, {\r\n  geocodeByAddress,\r\n  getLatLng,\r\n} from \"react-places-autocomplete\";\r\n\r\nexport default function ComplaintForm() {\r\n  const [formData, setFormData] = useState({\r\n    name: \"\",\r\n    complaint: \"\",\r\n    location: \"\"\r\n  });\r\n\r\n  const [photo, setPhoto] = useState(null);\r\n  const [photoPreview, setPhotoPreview] = useState(null);\r\n  const [complaintId, setComplaintId] = useState(null);\r\n  const [submitted, setSubmitted] = useState(false);\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const [liveCoords, setLiveCoords] = useState(null);\r\n  const [recording, setRecording] = useState(false);\r\n  const [cameraStream, setCameraStream] = useState(null);\r\n  const [showCamera, setShowCamera] = useState(false);\r\n  \r\n  // Authentication state\r\n  const [user, setUser] = useState(null);\r\n  const [authToken, setAuthToken] = useState(null);\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n\r\n  const recognitionRef = useRef(null);\r\n  const videoRef = useRef(null);\r\n  const canvasRef = useRef(null);\r\n\r\n  // Check authentication on component mount\r\n  useEffect(() => {\r\n    checkAuthentication();\r\n  }, []);\r\n\r\n  const checkAuthentication = async () => {\r\n    try {\r\n      // Get token from localStorage or sessionStorage\r\n      const token = localStorage.getItem('authToken') || sessionStorage.getItem('authToken');\r\n      \r\n      if (!token) {\r\n        console.warn(\"No authentication token found\");\r\n        return;\r\n      }\r\n\r\n      // Verify token and get user profile\r\n      const response = await axios.get('http://localhost:5000/api/user/profile', {\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`,\r\n          'Content-Type': 'application/json'\r\n        }\r\n      });\r\n\r\n      if (response.data.success) {\r\n        setUser(response.data.user);\r\n        setAuthToken(token);\r\n        setIsAuthenticated(true);\r\n        \r\n        // Pre-fill form with user data\r\n        setFormData(prev => ({\r\n          ...prev,\r\n          name: response.data.user.name || \"\"\r\n        }));\r\n        \r\n        console.log(\"User authenticated:\", response.data.user.name);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Authentication check failed:\", error);\r\n      // Clear invalid token\r\n      localStorage.removeItem('authToken');\r\n      sessionStorage.removeItem('authToken');\r\n      setUser(null);\r\n      setAuthToken(null);\r\n      setIsAuthenticated(false);\r\n    }\r\n  };\r\n\r\n  // Get axios config with authentication headers\r\n  const getAxiosConfig = () => {\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data'\r\n      }\r\n    };\r\n\r\n    if (authToken) {\r\n      config.headers['Authorization'] = `Bearer ${authToken}`;\r\n    }\r\n\r\n    return config;\r\n  };\r\n\r\n  // 🔤 Transliteration (Hindi → Hinglish)\r\n  const transliterateToHinglish = async (text) => {\r\n    try {\r\n      const res = await fetch(\r\n        `https://inputtools.google.com/request?text=${encodeURIComponent(\r\n          text\r\n        )}&itc=hi-t-i0-und&num=1&cp=0&cs=1&ie=utf-8&oe=utf-8&app=demopage`\r\n      );\r\n      const data = await res.json();\r\n      if (data[0] === \"SUCCESS\") {\r\n        return data[1][0][1][0];\r\n      }\r\n      return text;\r\n    } catch (err) {\r\n      console.error(\"Transliteration API error:\", err);\r\n      return text;\r\n    }\r\n  };\r\n\r\n  // 🌍 Reverse Geocoding - Convert coordinates to address\r\n  const reverseGeocode = async (latitude, longitude) => {\r\n    try {\r\n      const response = await fetch(\r\n        `https://maps.googleapis.com/maps/api/geocode/json?latlng=${latitude},${longitude}&key=${process.env.REACT_APP_GOOGLE_MAPS_API_KEY}`\r\n      );\r\n      const data = await response.json();\r\n      \r\n      if (data.results && data.results.length > 0) {\r\n        return data.results[0].formatted_address;\r\n      }\r\n      return `Location: ${latitude.toFixed(4)}, ${longitude.toFixed(4)}`;\r\n    } catch (error) {\r\n      console.error(\"Reverse geocoding error:\", error);\r\n      return `Location: ${latitude.toFixed(4)}, ${longitude.toFixed(4)}`;\r\n    }\r\n  };\r\n\r\n  // 🎙️ Speech-to-text\r\n  const handleSpeechToText = () => {\r\n    const SpeechRecognition =\r\n      window.SpeechRecognition || window.webkitSpeechRecognition;\r\n\r\n    if (!SpeechRecognition) {\r\n      alert(\"Speech recognition is not supported in this browser. Please use Chrome.\");\r\n      return;\r\n    }\r\n\r\n    if (recording) {\r\n      recognitionRef.current?.stop();\r\n      setRecording(false);\r\n      return;\r\n    }\r\n\r\n    const recognition = new SpeechRecognition();\r\n    recognition.lang = \"hi-IN\";\r\n    recognition.continuous = true;\r\n    recognition.interimResults = true;\r\n\r\n    recognition.onresult = async (event) => {\r\n      let transcript = \"\";\r\n      for (let i = 0; i < event.results.length; i++) {\r\n        transcript += event.results[i][0].transcript + \" \";\r\n      }\r\n      const hinglish = await transliterateToHinglish(transcript.trim());\r\n      setFormData((prev) => ({ ...prev, complaint: hinglish }));\r\n    };\r\n\r\n    recognition.onerror = (err) => {\r\n      console.error(\"Speech Recognition Error:\", err);\r\n      setRecording(false);\r\n    };\r\n\r\n    recognition.onend = () => {\r\n      setRecording(false);\r\n    };\r\n\r\n    recognition.start();\r\n    recognitionRef.current = recognition;\r\n    setRecording(true);\r\n  };\r\n\r\n  // 📷 Camera Functions\r\n  const startCamera = async () => {\r\n    try {\r\n      const stream = await navigator.mediaDevices.getUserMedia({\r\n        video: { facingMode: 'environment' }, // Use back camera\r\n        audio: false\r\n      });\r\n      \r\n      setCameraStream(stream);\r\n      setShowCamera(true);\r\n      \r\n      if (videoRef.current) {\r\n        videoRef.current.srcObject = stream;\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Camera access error:\", error);\r\n      alert(\"Unable to access camera. Please check permissions.\");\r\n    }\r\n  };\r\n\r\n  const stopCamera = () => {\r\n    if (cameraStream) {\r\n      cameraStream.getTracks().forEach(track => track.stop());\r\n      setCameraStream(null);\r\n    }\r\n    setShowCamera(false);\r\n  };\r\n\r\n  const capturePhoto = useCallback(async () => {\r\n    if (!videoRef.current || !canvasRef.current) return;\r\n\r\n    const video = videoRef.current;\r\n    const canvas = canvasRef.current;\r\n    const context = canvas.getContext('2d');\r\n\r\n    // Set canvas dimensions to match video\r\n    canvas.width = video.videoWidth;\r\n    canvas.height = video.videoHeight;\r\n\r\n    // Draw current video frame to canvas\r\n    context.drawImage(video, 0, 0);\r\n\r\n    // Get current location for geo-tagging\r\n    if (navigator.geolocation) {\r\n      navigator.geolocation.getCurrentPosition(\r\n        async (position) => {\r\n          const { latitude, longitude } = position.coords;\r\n          \r\n          // Add geo-tag overlay to image\r\n          context.fillStyle = 'rgba(0, 0, 0, 0.7)';\r\n          context.fillRect(0, canvas.height - 60, canvas.width, 60);\r\n          context.fillStyle = 'white';\r\n          context.font = '14px Arial';\r\n          context.fillText(`Location: ${latitude.toFixed(6)}, ${longitude.toFixed(6)}`, 10, canvas.height - 35);\r\n          context.fillText(`Captured: ${new Date().toLocaleString()}`, 10, canvas.height - 15);\r\n\r\n          // Convert to blob\r\n          canvas.toBlob((blob) => {\r\n            const file = new File([blob], `complaint_photo_${Date.now()}.jpg`, {\r\n              type: 'image/jpeg'\r\n            });\r\n            \r\n            setPhoto(file);\r\n            setPhotoPreview(canvas.toDataURL());\r\n            stopCamera();\r\n          }, 'image/jpeg', 0.8);\r\n        },\r\n        (error) => {\r\n          console.warn(\"Location not available for geo-tagging:\", error);\r\n          // Capture without geo-tag\r\n          canvas.toBlob((blob) => {\r\n            const file = new File([blob], `complaint_photo_${Date.now()}.jpg`, {\r\n              type: 'image/jpeg'\r\n            });\r\n            \r\n            setPhoto(file);\r\n            setPhotoPreview(canvas.toDataURL());\r\n            stopCamera();\r\n          }, 'image/jpeg', 0.8);\r\n        },\r\n        { enableHighAccuracy: true, timeout: 5000, maximumAge: 0 }\r\n      );\r\n    }\r\n  }, [cameraStream]);\r\n\r\n  const handlePhotoChange = (e) => {\r\n    if (e.target.files && e.target.files[0]) {\r\n      const file = e.target.files[0];\r\n      setPhoto(file);\r\n      \r\n      // Create preview\r\n      const reader = new FileReader();\r\n      reader.onload = (e) => setPhotoPreview(e.target.result);\r\n      reader.readAsDataURL(file);\r\n    }\r\n  };\r\n\r\n  const handleSelect = async (address) => {\r\n    setFormData({ ...formData, location: address });\r\n    setLiveCoords(null);\r\n    try {\r\n      const results = await geocodeByAddress(address);\r\n      await getLatLng(results[0]);\r\n    } catch (error) {\r\n      console.error(\"Error fetching coordinates\", error);\r\n    }\r\n  };\r\n\r\n  const handleLiveLocation = () => {\r\n    if (!navigator.geolocation) {\r\n      alert(\"Geolocation is not supported by your browser.\");\r\n      return;\r\n    }\r\n\r\n    setIsSubmitting(true);\r\n    navigator.geolocation.getCurrentPosition(\r\n      async (position) => {\r\n        const { latitude, longitude } = position.coords;\r\n        setLiveCoords({ latitude, longitude });\r\n        \r\n        // Get human-readable address\r\n        const address = await reverseGeocode(latitude, longitude);\r\n        setFormData({ ...formData, location: address });\r\n        \r\n        alert(\"Live location successfully captured!\");\r\n        setIsSubmitting(false);\r\n      },\r\n      (error) => {\r\n        console.warn(\"Geolocation error:\", error);\r\n        alert(\"⚠ Location not available. Please enable GPS.\");\r\n        setLiveCoords(null);\r\n        setIsSubmitting(false);\r\n      },\r\n      { enableHighAccuracy: true, timeout: 15000, maximumAge: 0 }\r\n    );\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    if (!formData.complaint.trim()) {\r\n      alert(\"Please speak or type your complaint.\");\r\n      return;\r\n    }\r\n\r\n    // Check authentication before submission\r\n    if (!isAuthenticated) {\r\n      alert(\"Please log in to submit a complaint. This ensures proper tracking and follow-up.\");\r\n      return;\r\n    }\r\n\r\n    setIsSubmitting(true);\r\n    try {\r\n      const formDataToSend = new FormData();\r\n      formDataToSend.append(\"complaint\", formData.complaint);\r\n      formDataToSend.append(\"location\", formData.location);\r\n      \r\n      // Use authenticated user's name, not form input\r\n      if (user && user.name) {\r\n        formDataToSend.append(\"name\", user.name);\r\n      }\r\n\r\n      if (photo) {\r\n        formDataToSend.append(\"photo\", photo);\r\n      }\r\n\r\n      if (liveCoords) {\r\n        formDataToSend.append(\"latitude\", liveCoords.latitude);\r\n        formDataToSend.append(\"longitude\", liveCoords.longitude);\r\n      }\r\n\r\n      // Add metadata\r\n      formDataToSend.append(\"timestamp\", new Date().toISOString());\r\n      formDataToSend.append(\"hasPhoto\", !!photo);\r\n      formDataToSend.append(\"hasGeoLocation\", !!liveCoords);\r\n      formDataToSend.append(\"dashboardSource\", \"enhanced-complaint-form\");\r\n      formDataToSend.append(\"submissionType\", \"authenticated-form-with-nlp\");\r\n      formDataToSend.append(\"userAgent\", navigator.userAgent);\r\n      formDataToSend.append(\"platform\", navigator.platform);\r\n\r\n      // Make authenticated request\r\n      const config = getAxiosConfig();\r\n      const res = await axios.post(\"http://localhost:5000/api/complaint\", formDataToSend, config);\r\n\r\n      // Handle backend response\r\n      const complaintData = res.data.complaint || res.data;\r\n      const complaintId = complaintData.complaintId || res.data.complaintId;\r\n      setComplaintId(complaintId);\r\n      setSubmitted(true);\r\n\r\n      // Reset form\r\n      setFormData({\r\n        name: user?.name || \"\",\r\n        complaint: \"\",\r\n        location: \"\"\r\n      });\r\n      setPhoto(null);\r\n      setPhotoPreview(null);\r\n      setLiveCoords(null);\r\n\r\n      // Show success message with user info\r\n      alert(`Complaint submitted successfully!\\n\\nComplaint ID: ${complaintId}\\nSubmitted by: ${user.name}\\nDepartment: ${complaintData.department || 'General'}\\nUrgency: ${complaintData.urgency || 'Medium'}`);\r\n\r\n    } catch (err) {\r\n      console.error(\"Submission failed:\", err);\r\n      \r\n      // Handle specific error cases\r\n      if (err.response?.status === 401) {\r\n        alert(\"Authentication expired. Please log in again.\");\r\n        setIsAuthenticated(false);\r\n        setUser(null);\r\n        setAuthToken(null);\r\n      } else {\r\n        alert(\"Complaint submission failed. Please try again.\");\r\n      }\r\n    } finally {\r\n      setIsSubmitting(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"max-w-xl mx-auto mt-10 p-6 bg-white rounded shadow\">\r\n      <h2 className=\"text-2xl font-semibold mb-4\">Complaint Form</h2>\r\n      \r\n      {/* Authentication Status */}\r\n      {isAuthenticated ? (\r\n        <div className=\"mb-4 p-3 bg-green-100 rounded-lg\">\r\n          <p className=\"text-green-800\">\r\n            <span className=\"font-semibold\">Logged in as:</span> {user?.name} ({user?.email})\r\n          </p>\r\n          <p className=\"text-sm text-green-600\">\r\n            Your complaints will be properly tracked and you'll receive updates.\r\n          </p>\r\n        </div>\r\n      ) : (\r\n        <div className=\"mb-4 p-3 bg-yellow-100 rounded-lg\">\r\n          <p className=\"text-yellow-800 font-semibold\">\r\n            Please log in to submit complaints\r\n          </p>\r\n          <p className=\"text-sm text-yellow-600\">\r\n            Authentication ensures proper complaint tracking and follow-up communication.\r\n          </p>\r\n        </div>\r\n      )}\r\n      \r\n      {/* Camera Modal */}\r\n      {showCamera && (\r\n        <div className=\"fixed inset-0 bg-black bg-opacity-75 flex items-center justify-center z-50\">\r\n          <div className=\"bg-white p-4 rounded-lg max-w-md w-full\">\r\n            <div className=\"relative\">\r\n              <video\r\n                ref={videoRef}\r\n                autoPlay\r\n                playsInline\r\n                className=\"w-full h-64 object-cover rounded\"\r\n              />\r\n              <div className=\"flex justify-center space-x-4 mt-4\">\r\n                <button\r\n                  onClick={capturePhoto}\r\n                  className=\"bg-blue-600 text-white px-4 py-2 rounded\"\r\n                >\r\n                  📷 Capture\r\n                </button>\r\n                <button\r\n                  onClick={stopCamera}\r\n                  className=\"bg-gray-600 text-white px-4 py-2 rounded\"\r\n                >\r\n                  Cancel\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n        \r\n        User Name (Read-only for authenticated users)\r\n        <div>\r\n          <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n            Name\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            value={formData.name}\r\n            onChange={(e) => setFormData({ ...formData, name: e.target.value })}\r\n            placeholder=\"Your name\"\r\n            readOnly={isAuthenticated}\r\n            className={`w-full border px-3 py-2 rounded ${\r\n              isAuthenticated ? 'bg-gray-100 cursor-not-allowed' : ''\r\n            }`}\r\n          />\r\n          {isAuthenticated && (\r\n            <p className=\"text-xs text-gray-500 mt-1\">\r\n              Name auto-filled from your account\r\n            </p>\r\n          )}\r\n        </div>\r\n        \r\n        {/* 🎙️ Voice-to-Text */}\r\n        <button\r\n          type=\"button\"\r\n          onClick={handleSpeechToText}\r\n          disabled={!isAuthenticated}\r\n          className={`w-full px-4 py-2 rounded-lg font-semibold ${\r\n            !isAuthenticated \r\n              ? \"bg-gray-400 cursor-not-allowed\" \r\n              : recording \r\n                ? \"bg-red-500\" \r\n                : \"bg-purple-600\"\r\n          } text-white`}\r\n        >\r\n          {!isAuthenticated \r\n            ? \"🔒 Login Required for Voice Input\"\r\n            : recording \r\n              ? \"🛑 बोलना रोकें\" \r\n              : \"🎤 शिकायत बोलें\"\r\n          }\r\n        </button>\r\n\r\n        {/* Complaint Text */}\r\n        <textarea\r\n          name=\"complaint\"\r\n          value={formData.complaint}\r\n          onChange={(e) => setFormData({ ...formData, complaint: e.target.value })}\r\n          placeholder=\"Describe your complaint or speak...\"\r\n          required\r\n          disabled={!isAuthenticated}\r\n          className={`w-full border px-3 py-2 rounded h-32 ${\r\n            !isAuthenticated ? 'bg-gray-100 cursor-not-allowed' : ''\r\n          }`}\r\n        />\r\n\r\n        {/* 📍 Location */}\r\n        <div>\r\n          <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n            Location\r\n          </label>\r\n          <div className=\"flex gap-2\">\r\n            <PlacesAutocomplete\r\n              value={formData.location}\r\n              onChange={(address) => {\r\n                setFormData({ ...formData, location: address });\r\n                setLiveCoords(null);\r\n              }}\r\n              onSelect={handleSelect}\r\n              searchOptions={{ componentRestrictions: { country: [\"in\"] } }}\r\n            >\r\n              {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\r\n                <div className=\"w-full\">\r\n                  <input\r\n                    {...getInputProps({\r\n                      placeholder: \"Search Location...\",\r\n                      className: `w-full border px-3 py-2 rounded ${\r\n                        !isAuthenticated ? 'bg-gray-100 cursor-not-allowed' : ''\r\n                      }`,\r\n                      disabled: !isAuthenticated\r\n                    })}\r\n                  />\r\n                  {isAuthenticated && (\r\n                    <div className=\"border rounded bg-white mt-1\">\r\n                      {loading && <div className=\"p-2 text-gray-500\">Loading...</div>}\r\n                      {suggestions.map((suggestion) => {\r\n                        const className = suggestion.active\r\n                          ? \"p-2 bg-blue-100 cursor-pointer\"\r\n                          : \"p-2 cursor-pointer\";\r\n                        return (\r\n                          <div\r\n                            {...getSuggestionItemProps(suggestion, { className })}\r\n                            key={suggestion.placeId}\r\n                          >\r\n                            {suggestion.description}\r\n                          </div>\r\n                        );\r\n                      })}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              )}\r\n            </PlacesAutocomplete>\r\n            <button\r\n              type=\"button\"\r\n              onClick={handleLiveLocation}\r\n              disabled={isSubmitting || !isAuthenticated}\r\n              className={`px-4 py-2 rounded text-sm text-white ${\r\n                !isAuthenticated || isSubmitting ? \"bg-gray-400\" : \"bg-blue-600\"\r\n              }`}\r\n            >\r\n              📍 Live\r\n            </button>\r\n          </div>\r\n          {liveCoords && (\r\n            <p className=\"text-xs text-green-600 mt-1\">\r\n              📍 Live Location Captured: {liveCoords.latitude.toFixed(4)}, {liveCoords.longitude.toFixed(4)}\r\n            </p>\r\n          )}\r\n        </div>\r\n\r\n        {/* 📷 Photo Upload */}\r\n        <div>\r\n          <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n            Upload / Capture Photo\r\n          </label>\r\n          <div className=\"flex gap-2\">\r\n            <input\r\n              type=\"file\"\r\n              accept=\"image/*\"\r\n              capture=\"environment\"\r\n              onChange={handlePhotoChange}\r\n              disabled={!isAuthenticated}\r\n              className={`flex-1 border px-3 py-2 rounded ${\r\n                !isAuthenticated ? 'bg-gray-100 cursor-not-allowed' : ''\r\n              }`}\r\n            />\r\n            <button\r\n              type=\"button\"\r\n              onClick={startCamera}\r\n              disabled={!isAuthenticated}\r\n              className={`px-4 py-2 rounded text-sm text-white ${\r\n                !isAuthenticated ? \"bg-gray-400\" : \"bg-green-600\"\r\n              }`}\r\n            >\r\n              📷 Camera\r\n            </button>\r\n          </div>\r\n          \r\n          {photoPreview && (\r\n            <div className=\"mt-2\">\r\n              <img \r\n                src={photoPreview} \r\n                alt=\"Preview\" \r\n                className=\"w-full h-32 object-cover rounded border\"\r\n              />\r\n              <button\r\n                type=\"button\"\r\n                onClick={() => {\r\n                  setPhoto(null);\r\n                  setPhotoPreview(null);\r\n                }}\r\n                className=\"mt-1 text-red-600 text-sm\"\r\n              >\r\n                ❌ Remove Photo\r\n              </button>\r\n            </div>\r\n          )}\r\n          \r\n          {photo && !photoPreview && (\r\n            <p className=\"text-xs text-gray-500 mt-1\">Selected: {photo.name}</p>\r\n          )}\r\n        </div>\r\n\r\n        <button\r\n          type=\"submit\"\r\n          disabled={isSubmitting || !isAuthenticated}\r\n          className={`w-full ${\r\n            !isAuthenticated || isSubmitting ? \"bg-gray-400\" : \"bg-green-600\"\r\n          } text-white px-4 py-2 rounded font-semibold`}\r\n        >\r\n          {!isAuthenticated \r\n            ? \"🔒 Please Login to Submit\" \r\n            : isSubmitting \r\n              ? \"⏳ Submitting...\" \r\n              : \"✅ Submit Complaint\"\r\n          }\r\n        </button>\r\n      </form>\r\n\r\n      {submitted && (\r\n        <div className=\"mt-6 p-4 bg-green-100 rounded-lg\">\r\n          <div className=\"text-green-700 font-semibold\">\r\n            ✅ Complaint submitted successfully!<br />\r\n            <span className=\"text-lg\">Your Complaint ID: <span className=\"font-bold text-green-800\">{complaintId}</span></span>\r\n          </div>\r\n          {user && (\r\n            <p className=\"text-sm text-green-600 mt-2\">\r\n              Submitted by: <strong>{user.name}</strong> ({user.email})<br />\r\n              Your complaint is being analyzed and will be forwarded to the appropriate department based on urgency and category.\r\n            </p>\r\n          )}\r\n        </div>\r\n      )}\r\n\r\n      {/* Hidden canvas for photo processing */}\r\n      <canvas ref={canvasRef} style={{ display: 'none' }} />\r\n    </div>\r\n  );\r\n}"],"mappings":";;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAUA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAGA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,EAAEC,WAAW,EAAEC,SAAS,EAAAC,aAAA,IAAAC,cAAA,QAAQ,OAAO;AACvE,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,kBAAkB,IACvBC,gBAAgB,EAChBC,SAAS,QACJ,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnC,eAAe,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACtC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGf,QAAQ,CAAC;IACvCgB,IAAI,EAAE,EAAE;IACRC,SAAS,EAAE,EAAE;IACbC,QAAQ,EAAE;EACZ,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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}