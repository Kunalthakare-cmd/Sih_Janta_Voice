{"ast":null,"code":"var _jsxFileName = \"D:\\\\Kunal Files\\\\projects\\\\janta_voice_new1\\\\Janta_Voice_Final\\\\frontend\\\\src\\\\pages\\\\ComplaintForm.jsx\",\n  _s = $RefreshSig$();\n// // import React, { useState } from \"react\";\n// // import axios from \"axios\";\n// // import PlacesAutocomplete, { geocodeByAddress, getLatLng } from \"react-places-autocomplete\";\n\n// // export default function ComplaintForm() {\n// //   const [formData, setFormData] = useState({\n// //     name: \"\",\n// //     complaint: \"\",\n// //     location: \"\",\n// //     urgency: \"normal\",\n// //     department: \"\",\n// //   });\n\n// //   const [photo, setPhoto] = useState(null);\n// //   const [complaintId, setComplaintId] = useState(null);\n// //   const [submitted, setSubmitted] = useState(false);\n\n// //   const handleChange = (e) => {\n// //     setFormData({ ...formData, [e.target.name]: e.target.value });\n// //   };\n\n// //   // location select handler\n// //   const handleSelect = async (address) => {\n// //     setFormData({ ...formData, location: address });\n// //     try {\n// //       const results = await geocodeByAddress(address);\n// //       const latLng = await getLatLng(results[0]);\n// //       console.log(\"Coordinates: \", latLng); // agar latitude/longitude bhi chahiye backend ke liye\n// //     } catch (error) {\n// //       console.error(\"Error fetching coordinates\", error);\n// //     }\n// //   };\n\n// //   const handlePhotoChange = (e) => {\n// //     if (e.target.files && e.target.files[0]) {\n// //       setPhoto(e.target.files[0]);\n// //     }\n// //   };\n\n// //   const handleSubmit = async (e) => {\n// //     e.preventDefault();\n\n// //     try {\n// //       const formDataToSend = new FormData();\n// //       Object.keys(formData).forEach((key) => {\n// //         formDataToSend.append(key, formData[key]);\n// //       });\n// //       if (photo) {\n// //         formDataToSend.append(\"photo\", photo);\n// //       }\n\n// //       const res = await axios.post(\"http://localhost:5000/api/complaint\", formDataToSend, {\n// //         headers: { \"Content-Type\": \"multipart/form-data\" },\n// //       });\n\n// //       setComplaintId(res.data.complaint.complaintId);\n// //       setSubmitted(true);\n\n// //       setFormData({\n// //         name: \"\",\n// //         complaint: \"\",\n// //         location: \"\",\n// //         urgency: \"normal\",\n// //         department: \"\",\n// //       });\n// //       setPhoto(null);\n// //     } catch (err) {\n// //       console.error(\"Submission failed:\", err.message);\n// //       alert(\"Complaint submission failed. Try again.\");\n// //     }\n// //   };\n\n// //   return (\n// //     <div className=\"max-w-xl mx-auto mt-10 p-6 bg-white rounded shadow\">\n// //       <h2 className=\"text-2xl font-semibold mb-4\">Complaint Form</h2>\n// //       <form onSubmit={handleSubmit} className=\"space-y-4\">\n// //         <input\n// //           name=\"name\"\n// //           value={formData.name}\n// //           onChange={handleChange}\n// //           placeholder=\"Your Name\"\n// //           required\n// //           className=\"w-full border px-3 py-2 rounded\"\n// //         />\n// //         <textarea\n// //           name=\"complaint\"\n// //           value={formData.complaint}\n// //           onChange={handleChange}\n// //           placeholder=\"Describe your complaint\"\n// //           required\n// //           className=\"w-full border px-3 py-2 rounded\"\n// //         />\n\n// //         {/* Location Autocomplete */}\n// //         <PlacesAutocomplete\n// //           value={formData.location}\n// //           onChange={(address) => setFormData({ ...formData, location: address })}\n// //           onSelect={handleSelect}\n// //           searchOptions={{ componentRestrictions: { country: [\"in\"] } }} // restrict to India\n// //         >\n// //           {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\n// //             <div>\n// //               <input\n// //                 {...getInputProps({\n// //                   placeholder: \"Search Location (India only)\",\n// //                   className: \"w-full border px-3 py-2 rounded\",\n// //                 })}\n// //               />\n// //               <div className=\"border rounded bg-white mt-1\">\n// //                 {loading && <div className=\"p-2 text-gray-500\">Loading...</div>}\n// //                 {suggestions.map((suggestion) => {\n// //                   const className = suggestion.active\n// //                     ? \"p-2 bg-blue-100 cursor-pointer\"\n// //                     : \"p-2 cursor-pointer\";\n// //                   return (\n// //                     <div\n// //                       {...getSuggestionItemProps(suggestion, { className })}\n// //                       key={suggestion.placeId}\n// //                     >\n// //                       {suggestion.description}\n// //                     </div>\n// //                   );\n// //                 })}\n// //               </div>\n// //             </div>\n// //           )}\n// //         </PlacesAutocomplete>\n\n// //         {/* Department */}\n// //         <select\n// //           name=\"department\"\n// //           value={formData.department}\n// //           onChange={handleChange}\n// //           className=\"w-full border px-3 py-2 rounded\"\n// //           required\n// //         >\n// //           <option value=\"\">Select a Department</option>\n// //           <option value=\"Public Works\">Public Works</option>\n// //           <option value=\"Water Supply\">Water Supply</option>\n// //           <option value=\"Sanitation\">Sanitation</option>\n// //           <option value=\"Electricity\">Electricity</option>\n// //           <option value=\"Other\">Other</option>\n// //         </select>\n\n// //         {/* Urgency */}\n// //         <select\n// //           name=\"urgency\"\n// //           value={formData.urgency}\n// //           onChange={handleChange}\n// //           className=\"w-full border px-3 py-2 rounded\"\n// //         >\n// //           <option value=\"normal\">Normal</option>\n// //           <option value=\"urgent\">Urgent</option>\n// //         </select>\n\n// //         {/* Photo Upload */}\n// //         <div>\n// //           <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n// //             Upload / Capture Photo\n// //           </label>\n// //           <input\n// //             type=\"file\"\n// //             accept=\"image/*\"\n// //             capture=\"environment\"\n// //             onChange={handlePhotoChange}\n// //             className=\"w-full border px-3 py-2 rounded\"\n// //           />\n// //           {photo && (\n// //             <p className=\"text-xs text-gray-500 mt-1\">Selected: {photo.name}</p>\n// //           )}\n// //         </div>\n\n// //         <button\n// //           type=\"submit\"\n// //           className=\"bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700\"\n// //         >\n// //           Submit\n// //         </button>\n// //       </form>\n\n// //       {submitted && (\n// //         <div className=\"mt-6 text-green-700 font-semibold\">\n// //           Complaint submitted successfully!<br />\n// //           Your Complaint ID: <span className=\"font-bold\">{complaintId}</span>\n// //         </div>\n// //       )}\n// //     </div>\n// //   );\n// // }\n// import React, { useState } from \"react\";\n// import axios from \"axios\";\n// import PlacesAutocomplete, {\n//   geocodeByAddress,\n//   getLatLng,\n// } from \"react-places-autocomplete\";\n\n// export default function ComplaintForm() {\n//   const [formData, setFormData] = useState({\n//     name: \"\",\n//     complaint: \"\",\n//     location: \"\",\n//     urgency: \"normal\",\n//     department: \"\",\n//   });\n\n//   const [photo, setPhoto] = useState(null);\n//   const [complaintId, setComplaintId] = useState(null);\n//   const [submitted, setSubmitted] = useState(false);\n//   const [isSubmitting, setIsSubmitting] = useState(false);\n//   const [liveCoords, setLiveCoords] = useState(null);\n\n//   const handleChange = (e) => {\n//     setFormData({ ...formData, [e.target.name]: e.target.value });\n//   };\n\n//   const handlePhotoChange = (e) => {\n//     if (e.target.files && e.target.files[0]) {\n//       setPhoto(e.target.files[0]);\n//     }\n//   };\n\n//   // Google Places Autocomplete handler\n//   const handleSelect = async (address) => {\n//     setFormData({ ...formData, location: address });\n//     setLiveCoords(null); // Clear live coords if user selects an address\n//     try {\n//       const results = await geocodeByAddress(address);\n//       const latLng = await getLatLng(results[0]);\n//       console.log(\"Selected Location Coordinates: \", latLng);\n//       // You can store these coords in state if your backend needs them\n//     } catch (error) {\n//       console.error(\"Error fetching coordinates\", error);\n//     }\n//   };\n\n//   // Live location button handler\n//   const handleLiveLocation = () => {\n//     if (!navigator.geolocation) {\n//       alert(\"Geolocation is not supported by your browser.\");\n//       return;\n//     }\n\n//     setIsSubmitting(true);\n//     navigator.geolocation.getCurrentPosition(\n//       (position) => {\n//         const { latitude, longitude } = position.coords;\n//         setLiveCoords({ latitude, longitude });\n//         setFormData({ ...formData, location: \"Live Location Captured\" });\n//         alert(\"Live location successfully captured!\");\n//         setIsSubmitting(false);\n//       },\n//       (error) => {\n//         console.warn(\"Geolocation error:\", error);\n//         alert(\"⚠ Location not available. Please enable GPS for accurate location.\");\n//         setLiveCoords(null);\n//         setIsSubmitting(false);\n//       },\n//       { enableHighAccuracy: true, timeout: 15000, maximumAge: 0 }\n//     );\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     setIsSubmitting(true);\n\n//     try {\n//       const formDataToSend = new FormData();\n//       Object.keys(formData).forEach((key) => {\n//         formDataToSend.append(key, formData[key]);\n//       });\n\n//       if (photo) {\n//         formDataToSend.append(\"photo\", photo);\n//       }\n\n//       // Logic to determine which location to send\n//       let latLng = null;\n//       if (liveCoords) {\n//         // Option 1: Live location is captured\n//         latLng = liveCoords;\n//       } else if (formData.location) {\n//         // Option 2: User typed and selected a location\n//         const results = await geocodeByAddress(formData.location);\n//         latLng = await getLatLng(results[0]);\n//       }\n\n//       if (latLng) {\n//         formDataToSend.append(\"latitude\", latLng.latitude);\n//         formDataToSend.append(\"longitude\", latLng.longitude);\n//       }\n\n//       const res = await axios.post(\"http://localhost:5000/api/complaint\", formDataToSend, {\n//         headers: { \"Content-Type\": \"multipart/form-data\" },\n//       });\n\n//       setComplaintId(res.data.complaint.complaintId);\n//       setSubmitted(true);\n//       alert(`Complaint submitted successfully! Your Complaint ID is: ${res.data.complaint.complaintId}`);\n\n//       // Reset form\n//       setFormData({\n//         name: \"\",\n//         complaint: \"\",\n//         location: \"\",\n//         urgency: \"normal\",\n//         department: \"\",\n//       });\n//       setPhoto(null);\n//       setLiveCoords(null);\n//     } catch (err) {\n//       console.error(\"Submission failed:\", err.message);\n//       alert(\"Complaint submission failed. Please try again.\");\n//     } finally {\n//       setIsSubmitting(false);\n//     }\n//   };\n\n//   return (\n//     <div className=\"max-w-xl mx-auto mt-10 p-6 bg-white rounded shadow\">\n//       <h2 className=\"text-2xl font-semibold mb-4\">Complaint Form</h2>\n//       <form onSubmit={handleSubmit} className=\"space-y-4\">\n//         {/* Input fields */}\n//         <input\n//           name=\"name\"\n//           value={formData.name}\n//           onChange={handleChange}\n//           placeholder=\"Your Name\"\n//           required\n//           className=\"w-full border px-3 py-2 rounded\"\n//         />\n//         <textarea\n//           name=\"complaint\"\n//           value={formData.complaint}\n//           onChange={handleChange}\n//           placeholder=\"Describe your complaint\"\n//           required\n//           className=\"w-full border px-3 py-2 rounded\"\n//         />\n\n//         {/* Location Section */}\n//         <div>\n//           <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n//             Location\n//           </label>\n//           <div className=\"flex gap-2\">\n//             <PlacesAutocomplete\n//               value={formData.location}\n//               onChange={(address) => {\n//                 setFormData({ ...formData, location: address });\n//                 setLiveCoords(null);\n//               }}\n//               onSelect={handleSelect}\n//               searchOptions={{ componentRestrictions: { country: [\"in\"] } }}\n//             >\n//               {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\n//                 <div className=\"w-full\">\n//                   <input\n//                     {...getInputProps({\n//                       placeholder: \"Search Location...\",\n//                       className: \"w-full border px-3 py-2 rounded\",\n//                     })}\n//                   />\n//                   <div className=\"border rounded bg-white mt-1\">\n//                     {loading && <div className=\"p-2 text-gray-500\">Loading...</div>}\n//                     {suggestions.map((suggestion) => {\n//                       const className = suggestion.active\n//                         ? \"p-2 bg-blue-100 cursor-pointer\"\n//                         : \"p-2 cursor-pointer\";\n//                       return (\n//                         <div\n//                           {...getSuggestionItemProps(suggestion, { className })}\n//                           key={suggestion.placeId}\n//                         >\n//                           {suggestion.description}\n//                         </div>\n//                       );\n//                     })}\n//                   </div>\n//                 </div>\n//               )}\n//             </PlacesAutocomplete>\n//             <button\n//               type=\"button\"\n//               onClick={handleLiveLocation}\n//               disabled={isSubmitting}\n//               className={`px-4 py-2 rounded text-sm text-white ${\n//                 isSubmitting ? \"bg-gray-400\" : \"bg-blue-600\"\n//               }`}\n//             >\n//               Live\n//             </button>\n//           </div>\n//           {liveCoords && (\n//             <p className=\"text-xs text-green-600 mt-1\">\n//               Live Location: {liveCoords.latitude.toFixed(4)}, {liveCoords.longitude.toFixed(4)}\n//             </p>\n//           )}\n//         </div>\n\n//         {/* Other form elements */}\n//         <select\n//           name=\"department\"\n//           value={formData.department}\n//           onChange={handleChange}\n//           className=\"w-full border px-3 py-2 rounded\"\n//           required\n//         >\n//           <option value=\"\">Select a Department</option>\n//           <option value=\"Public Works\">Public Works</option>\n//           <option value=\"Water Supply\">Water Supply</option>\n//           <option value=\"Sanitation\">Sanitation</option>\n//           <option value=\"Electricity\">Electricity</option>\n//           <option value=\"Other\">Other</option>\n//         </select>\n\n//         <select\n//           name=\"urgency\"\n//           value={formData.urgency}\n//           onChange={handleChange}\n//           className=\"w-full border px-3 py-2 rounded\"\n//         >\n//           <option value=\"normal\">Normal</option>\n//           <option value=\"urgent\">Urgent</option>\n//         </select>\n\n//         <div>\n//           <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n//             Upload / Capture Photo\n//           </label>\n//           <input\n//             type=\"file\"\n//             accept=\"image/*\"\n//             capture=\"environment\"\n//             onChange={handlePhotoChange}\n//             className=\"w-full border px-3 py-2 rounded\"\n//           />\n//           {photo && (\n//             <p className=\"text-xs text-gray-500 mt-1\">Selected: {photo.name}</p>\n//           )}\n//         </div>\n\n//         <button\n//           type=\"submit\"\n//           disabled={isSubmitting}\n//           className={`w-full ${\n//             isSubmitting ? \"bg-gray-400\" : \"bg-blue-600\"\n//           } text-white px-4 py-2 rounded hover:bg-blue-700`}\n//         >\n//           {isSubmitting ? \"Submitting...\" : \"Submit Complaint\"}\n//         </button>\n//       </form>\n\n//       {submitted && (\n//         <div className=\"mt-6 text-green-700 font-semibold\">\n//           Complaint submitted successfully!<br />\n//           Your Complaint ID: <span className=\"font-bold\">{complaintId}</span>\n//         </div>\n//       )}\n//     </div>\n//   );\n// }\n\nimport React, { useState, useRef, useCallback, createElement as _createElement } from \"react\";\nimport axios from \"axios\";\nimport PlacesAutocomplete, { geocodeByAddress, getLatLng } from \"react-places-autocomplete\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ComplaintForm() {\n  _s();\n  const [formData, setFormData] = useState({\n    complaint: \"\",\n    location: \"\"\n  });\n  const [photo, setPhoto] = useState(null);\n  const [photoPreview, setPhotoPreview] = useState(null);\n  const [complaintId, setComplaintId] = useState(null);\n  const [submitted, setSubmitted] = useState(false);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [liveCoords, setLiveCoords] = useState(null);\n  const [recording, setRecording] = useState(false);\n  const [cameraStream, setCameraStream] = useState(null);\n  const [showCamera, setShowCamera] = useState(false);\n  const recognitionRef = useRef(null);\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n\n  // 🔤 Transliteration (Hindi → Hinglish)\n  const transliterateToHinglish = async text => {\n    try {\n      const res = await fetch(`https://inputtools.google.com/request?text=${encodeURIComponent(text)}&itc=hi-t-i0-und&num=1&cp=0&cs=1&ie=utf-8&oe=utf-8&app=demopage`);\n      const data = await res.json();\n      if (data[0] === \"SUCCESS\") {\n        return data[1][0][1][0];\n      }\n      return text;\n    } catch (err) {\n      console.error(\"Transliteration API error:\", err);\n      return text;\n    }\n  };\n\n  // 🌍 Reverse Geocoding - Convert coordinates to address\n  const reverseGeocode = async (latitude, longitude) => {\n    try {\n      const response = await fetch(`https://maps.googleapis.com/maps/api/geocode/json?latlng=${latitude},${longitude}&key=${process.env.REACT_APP_GOOGLE_MAPS_API_KEY}`);\n      const data = await response.json();\n      if (data.results && data.results.length > 0) {\n        return data.results[0].formatted_address;\n      }\n      return `Location: ${latitude.toFixed(4)}, ${longitude.toFixed(4)}`;\n    } catch (error) {\n      console.error(\"Reverse geocoding error:\", error);\n      return `Location: ${latitude.toFixed(4)}, ${longitude.toFixed(4)}`;\n    }\n  };\n\n  // 🎙️ Speech-to-text\n  const handleSpeechToText = () => {\n    const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n    if (!SpeechRecognition) {\n      alert(\"Speech recognition is not supported in this browser. Please use Chrome.\");\n      return;\n    }\n    if (recording) {\n      var _recognitionRef$curre;\n      (_recognitionRef$curre = recognitionRef.current) === null || _recognitionRef$curre === void 0 ? void 0 : _recognitionRef$curre.stop();\n      setRecording(false);\n      return;\n    }\n    const recognition = new SpeechRecognition();\n    recognition.lang = \"hi-IN\";\n    recognition.continuous = true;\n    recognition.interimResults = true;\n    recognition.onresult = async event => {\n      let transcript = \"\";\n      for (let i = 0; i < event.results.length; i++) {\n        transcript += event.results[i][0].transcript + \" \";\n      }\n      const hinglish = await transliterateToHinglish(transcript.trim());\n      setFormData(prev => ({\n        ...prev,\n        complaint: hinglish\n      }));\n    };\n    recognition.onerror = err => {\n      console.error(\"Speech Recognition Error:\", err);\n      setRecording(false);\n    };\n    recognition.onend = () => {\n      setRecording(false);\n    };\n    recognition.start();\n    recognitionRef.current = recognition;\n    setRecording(true);\n  };\n\n  // 📷 Camera Functions\n  const startCamera = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        video: {\n          facingMode: 'environment'\n        },\n        // Use back camera\n        audio: false\n      });\n      setCameraStream(stream);\n      setShowCamera(true);\n      if (videoRef.current) {\n        videoRef.current.srcObject = stream;\n      }\n    } catch (error) {\n      console.error(\"Camera access error:\", error);\n      alert(\"Unable to access camera. Please check permissions.\");\n    }\n  };\n  const stopCamera = () => {\n    if (cameraStream) {\n      cameraStream.getTracks().forEach(track => track.stop());\n      setCameraStream(null);\n    }\n    setShowCamera(false);\n  };\n  const capturePhoto = useCallback(async () => {\n    if (!videoRef.current || !canvasRef.current) return;\n    const video = videoRef.current;\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n\n    // Set canvas dimensions to match video\n    canvas.width = video.videoWidth;\n    canvas.height = video.videoHeight;\n\n    // Draw current video frame to canvas\n    context.drawImage(video, 0, 0);\n\n    // Get current location for geo-tagging\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(async position => {\n        const {\n          latitude,\n          longitude\n        } = position.coords;\n\n        // Add geo-tag overlay to image\n        context.fillStyle = 'rgba(0, 0, 0, 0.7)';\n        context.fillRect(0, canvas.height - 60, canvas.width, 60);\n        context.fillStyle = 'white';\n        context.font = '14px Arial';\n        context.fillText(`Location: ${latitude.toFixed(6)}, ${longitude.toFixed(6)}`, 10, canvas.height - 35);\n        context.fillText(`Captured: ${new Date().toLocaleString()}`, 10, canvas.height - 15);\n\n        // Convert to blob\n        canvas.toBlob(blob => {\n          const file = new File([blob], `complaint_photo_${Date.now()}.jpg`, {\n            type: 'image/jpeg'\n          });\n          setPhoto(file);\n          setPhotoPreview(canvas.toDataURL());\n          stopCamera();\n        }, 'image/jpeg', 0.8);\n      }, error => {\n        console.warn(\"Location not available for geo-tagging:\", error);\n        // Capture without geo-tag\n        canvas.toBlob(blob => {\n          const file = new File([blob], `complaint_photo_${Date.now()}.jpg`, {\n            type: 'image/jpeg'\n          });\n          setPhoto(file);\n          setPhotoPreview(canvas.toDataURL());\n          stopCamera();\n        }, 'image/jpeg', 0.8);\n      }, {\n        enableHighAccuracy: true,\n        timeout: 5000,\n        maximumAge: 0\n      });\n    }\n  }, [cameraStream]);\n  const handlePhotoChange = e => {\n    if (e.target.files && e.target.files[0]) {\n      const file = e.target.files[0];\n      setPhoto(file);\n\n      // Create preview\n      const reader = new FileReader();\n      reader.onload = e => setPhotoPreview(e.target.result);\n      reader.readAsDataURL(file);\n    }\n  };\n  const handleSelect = async address => {\n    setFormData({\n      ...formData,\n      location: address\n    });\n    setLiveCoords(null);\n    try {\n      const results = await geocodeByAddress(address);\n      await getLatLng(results[0]);\n    } catch (error) {\n      console.error(\"Error fetching coordinates\", error);\n    }\n  };\n  const handleLiveLocation = () => {\n    if (!navigator.geolocation) {\n      alert(\"Geolocation is not supported by your browser.\");\n      return;\n    }\n    setIsSubmitting(true);\n    navigator.geolocation.getCurrentPosition(async position => {\n      const {\n        latitude,\n        longitude\n      } = position.coords;\n      setLiveCoords({\n        latitude,\n        longitude\n      });\n\n      // Get human-readable address\n      const address = await reverseGeocode(latitude, longitude);\n      setFormData({\n        ...formData,\n        location: address\n      });\n      alert(\"Live location successfully captured!\");\n      setIsSubmitting(false);\n    }, error => {\n      console.warn(\"Geolocation error:\", error);\n      alert(\"⚠ Location not available. Please enable GPS.\");\n      setLiveCoords(null);\n      setIsSubmitting(false);\n    }, {\n      enableHighAccuracy: true,\n      timeout: 15000,\n      maximumAge: 0\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!formData.complaint.trim()) {\n      alert(\"Please speak or type your complaint.\");\n      return;\n    }\n    setIsSubmitting(true);\n    try {\n      const formDataToSend = new FormData();\n      formDataToSend.append(\"complaint\", formData.complaint);\n      formDataToSend.append(\"location\", formData.location);\n      if (photo) {\n        formDataToSend.append(\"photo\", photo);\n      }\n      if (liveCoords) {\n        formDataToSend.append(\"latitude\", liveCoords.latitude);\n        formDataToSend.append(\"longitude\", liveCoords.longitude);\n      }\n\n      // Add metadata for NLP analysis\n      formDataToSend.append(\"timestamp\", new Date().toISOString());\n      formDataToSend.append(\"hasPhoto\", !!photo);\n      formDataToSend.append(\"hasGeoLocation\", !!liveCoords);\n      const res = await axios.post(\"http://localhost:5000/api/complaint\", formDataToSend, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      });\n      setComplaintId(res.data.complaint.complaintId);\n      setSubmitted(true);\n      alert(`Complaint submitted! ID: ${res.data.complaint.complaintId}`);\n\n      // Reset form\n      setFormData({\n        complaint: \"\",\n        location: \"\"\n      });\n      setPhoto(null);\n      setPhotoPreview(null);\n      setLiveCoords(null);\n    } catch (err) {\n      console.error(\"Submission failed:\", err.message);\n      alert(\"Complaint submission failed.\");\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-xl mx-auto mt-10 p-6 bg-white rounded shadow\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-semibold mb-4\",\n      children: \"Complaint Form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 767,\n      columnNumber: 7\n    }, this), showCamera && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 bg-black bg-opacity-75 flex items-center justify-center z-50\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-4 rounded-lg max-w-md w-full\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"relative\",\n          children: [/*#__PURE__*/_jsxDEV(\"video\", {\n            ref: videoRef,\n            autoPlay: true,\n            playsInline: true,\n            className: \"w-full h-64 object-cover rounded\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 774,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-center space-x-4 mt-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: capturePhoto,\n              className: \"bg-blue-600 text-white px-4 py-2 rounded\",\n              children: \"\\uD83D\\uDCF7 Capture\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 781,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: stopCamera,\n              className: \"bg-gray-600 text-white px-4 py-2 rounded\",\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 787,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 780,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 773,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 772,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 771,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"space-y-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleSpeechToText,\n        className: `w-full px-4 py-2 rounded-lg font-semibold ${recording ? \"bg-red-500\" : \"bg-purple-600\"} text-white`,\n        children: recording ? \"🛑 बोलना रोकें\" : \"🎤 शिकायत बोलें\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 802,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        name: \"complaint\",\n        value: formData.complaint,\n        onChange: e => setFormData({\n          ...formData,\n          complaint: e.target.value\n        }),\n        placeholder: \"Describe your complaint or speak...\",\n        required: true,\n        className: \"w-full border px-3 py-2 rounded h-32\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 813,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block text-sm font-medium text-gray-700 mb-1\",\n          children: \"Location\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 824,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex gap-2\",\n          children: [/*#__PURE__*/_jsxDEV(PlacesAutocomplete, {\n            value: formData.location,\n            onChange: address => {\n              setFormData({\n                ...formData,\n                location: address\n              });\n              setLiveCoords(null);\n            },\n            onSelect: handleSelect,\n            searchOptions: {\n              componentRestrictions: {\n                country: [\"in\"]\n              }\n            },\n            children: ({\n              getInputProps,\n              suggestions,\n              getSuggestionItemProps,\n              loading\n            }) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"w-full\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                ...getInputProps({\n                  placeholder: \"Search Location...\",\n                  className: \"w-full border px-3 py-2 rounded\"\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 839,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"border rounded bg-white mt-1\",\n                children: [loading && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"p-2 text-gray-500\",\n                  children: \"Loading...\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 846,\n                  columnNumber: 33\n                }, this), suggestions.map(suggestion => {\n                  const className = suggestion.active ? \"p-2 bg-blue-100 cursor-pointer\" : \"p-2 cursor-pointer\";\n                  return /*#__PURE__*/_createElement(\"div\", {\n                    ...getSuggestionItemProps(suggestion, {\n                      className\n                    }),\n                    key: suggestion.placeId,\n                    __self: this,\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 852,\n                      columnNumber: 25\n                    }\n                  }, suggestion.description);\n                })]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 845,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 838,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 828,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: handleLiveLocation,\n            disabled: isSubmitting,\n            className: `px-4 py-2 rounded text-sm text-white ${isSubmitting ? \"bg-gray-400\" : \"bg-blue-600\"}`,\n            children: \"\\uD83D\\uDCCD Live\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 864,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 827,\n          columnNumber: 11\n        }, this), liveCoords && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-xs text-green-600 mt-1\",\n          children: [\"\\uD83D\\uDCCD Live Location Captured: \", liveCoords.latitude.toFixed(4), \", \", liveCoords.longitude.toFixed(4)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 876,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 823,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block text-sm font-medium text-gray-700 mb-1\",\n          children: \"Upload / Capture Photo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 884,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex gap-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            accept: \"image/*\",\n            capture: \"environment\",\n            onChange: handlePhotoChange,\n            className: \"flex-1 border px-3 py-2 rounded\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 888,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: startCamera,\n            className: \"bg-green-600 text-white px-4 py-2 rounded text-sm\",\n            children: \"\\uD83D\\uDCF7 Camera\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 895,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 887,\n          columnNumber: 11\n        }, this), photoPreview && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: photoPreview,\n            alt: \"Preview\",\n            className: \"w-full h-32 object-cover rounded border\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 906,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => {\n              setPhoto(null);\n              setPhotoPreview(null);\n            },\n            className: \"mt-1 text-red-600 text-sm\",\n            children: \"\\u274C Remove Photo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 911,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 905,\n          columnNumber: 13\n        }, this), photo && !photoPreview && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-xs text-gray-500 mt-1\",\n          children: [\"Selected: \", photo.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 925,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 883,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: isSubmitting,\n        className: `w-full ${isSubmitting ? \"bg-gray-400\" : \"bg-green-600\"} text-white px-4 py-2 rounded font-semibold`,\n        children: isSubmitting ? \"⏳ Submitting...\" : \"✅ Submit Complaint\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 929,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 799,\n      columnNumber: 7\n    }, this), submitted && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-6 p-4 bg-green-100 rounded-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-green-700 font-semibold\",\n        children: [\"\\u2705 Complaint submitted successfully!\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 943,\n          columnNumber: 48\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-lg\",\n          children: [\"Your Complaint ID: \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"font-bold text-green-800\",\n            children: complaintId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 944,\n            columnNumber: 58\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 944,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 942,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-sm text-green-600 mt-2\",\n        children: \"Your complaint is being analyzed and will be forwarded to the appropriate department based on urgency and category.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 946,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 941,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      style: {\n        display: 'none'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 953,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 766,\n    columnNumber: 5\n  }, this);\n}\n_s(ComplaintForm, \"xKfk1qM/OrtE+mJuSYiW+NZa88I=\");\n_c = ComplaintForm;\nvar _c;\n$RefreshReg$(_c, \"ComplaintForm\");","map":{"version":3,"names":["React","useState","useRef","useCallback","createElement","_createElement","axios","PlacesAutocomplete","geocodeByAddress","getLatLng","jsxDEV","_jsxDEV","ComplaintForm","_s","formData","setFormData","complaint","location","photo","setPhoto","photoPreview","setPhotoPreview","complaintId","setComplaintId","submitted","setSubmitted","isSubmitting","setIsSubmitting","liveCoords","setLiveCoords","recording","setRecording","cameraStream","setCameraStream","showCamera","setShowCamera","recognitionRef","videoRef","canvasRef","transliterateToHinglish","text","res","fetch","encodeURIComponent","data","json","err","console","error","reverseGeocode","latitude","longitude","response","process","env","REACT_APP_GOOGLE_MAPS_API_KEY","results","length","formatted_address","toFixed","handleSpeechToText","SpeechRecognition","window","webkitSpeechRecognition","alert","_recognitionRef$curre","current","stop","recognition","lang","continuous","interimResults","onresult","event","transcript","i","hinglish","trim","prev","onerror","onend","start","startCamera","stream","navigator","mediaDevices","getUserMedia","video","facingMode","audio","srcObject","stopCamera","getTracks","forEach","track","capturePhoto","canvas","context","getContext","width","videoWidth","height","videoHeight","drawImage","geolocation","getCurrentPosition","position","coords","fillStyle","fillRect","font","fillText","Date","toLocaleString","toBlob","blob","file","File","now","type","toDataURL","warn","enableHighAccuracy","timeout","maximumAge","handlePhotoChange","e","target","files","reader","FileReader","onload","result","readAsDataURL","handleSelect","address","handleLiveLocation","handleSubmit","preventDefault","formDataToSend","FormData","append","toISOString","post","headers","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","autoPlay","playsInline","onClick","onSubmit","name","value","onChange","placeholder","required","onSelect","searchOptions","componentRestrictions","country","getInputProps","suggestions","getSuggestionItemProps","loading","map","suggestion","active","key","placeId","__self","__source","description","disabled","accept","capture","src","alt","style","display","_c","$RefreshReg$"],"sources":["D:/Kunal Files/projects/janta_voice_new1/Janta_Voice_Final/frontend/src/pages/ComplaintForm.jsx"],"sourcesContent":["// // import React, { useState } from \"react\";\r\n// // import axios from \"axios\";\r\n// // import PlacesAutocomplete, { geocodeByAddress, getLatLng } from \"react-places-autocomplete\";\r\n\r\n// // export default function ComplaintForm() {\r\n// //   const [formData, setFormData] = useState({\r\n// //     name: \"\",\r\n// //     complaint: \"\",\r\n// //     location: \"\",\r\n// //     urgency: \"normal\",\r\n// //     department: \"\",\r\n// //   });\r\n\r\n// //   const [photo, setPhoto] = useState(null);\r\n// //   const [complaintId, setComplaintId] = useState(null);\r\n// //   const [submitted, setSubmitted] = useState(false);\r\n\r\n// //   const handleChange = (e) => {\r\n// //     setFormData({ ...formData, [e.target.name]: e.target.value });\r\n// //   };\r\n\r\n// //   // location select handler\r\n// //   const handleSelect = async (address) => {\r\n// //     setFormData({ ...formData, location: address });\r\n// //     try {\r\n// //       const results = await geocodeByAddress(address);\r\n// //       const latLng = await getLatLng(results[0]);\r\n// //       console.log(\"Coordinates: \", latLng); // agar latitude/longitude bhi chahiye backend ke liye\r\n// //     } catch (error) {\r\n// //       console.error(\"Error fetching coordinates\", error);\r\n// //     }\r\n// //   };\r\n\r\n// //   const handlePhotoChange = (e) => {\r\n// //     if (e.target.files && e.target.files[0]) {\r\n// //       setPhoto(e.target.files[0]);\r\n// //     }\r\n// //   };\r\n\r\n// //   const handleSubmit = async (e) => {\r\n// //     e.preventDefault();\r\n\r\n// //     try {\r\n// //       const formDataToSend = new FormData();\r\n// //       Object.keys(formData).forEach((key) => {\r\n// //         formDataToSend.append(key, formData[key]);\r\n// //       });\r\n// //       if (photo) {\r\n// //         formDataToSend.append(\"photo\", photo);\r\n// //       }\r\n\r\n// //       const res = await axios.post(\"http://localhost:5000/api/complaint\", formDataToSend, {\r\n// //         headers: { \"Content-Type\": \"multipart/form-data\" },\r\n// //       });\r\n\r\n// //       setComplaintId(res.data.complaint.complaintId);\r\n// //       setSubmitted(true);\r\n\r\n// //       setFormData({\r\n// //         name: \"\",\r\n// //         complaint: \"\",\r\n// //         location: \"\",\r\n// //         urgency: \"normal\",\r\n// //         department: \"\",\r\n// //       });\r\n// //       setPhoto(null);\r\n// //     } catch (err) {\r\n// //       console.error(\"Submission failed:\", err.message);\r\n// //       alert(\"Complaint submission failed. Try again.\");\r\n// //     }\r\n// //   };\r\n\r\n// //   return (\r\n// //     <div className=\"max-w-xl mx-auto mt-10 p-6 bg-white rounded shadow\">\r\n// //       <h2 className=\"text-2xl font-semibold mb-4\">Complaint Form</h2>\r\n// //       <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n// //         <input\r\n// //           name=\"name\"\r\n// //           value={formData.name}\r\n// //           onChange={handleChange}\r\n// //           placeholder=\"Your Name\"\r\n// //           required\r\n// //           className=\"w-full border px-3 py-2 rounded\"\r\n// //         />\r\n// //         <textarea\r\n// //           name=\"complaint\"\r\n// //           value={formData.complaint}\r\n// //           onChange={handleChange}\r\n// //           placeholder=\"Describe your complaint\"\r\n// //           required\r\n// //           className=\"w-full border px-3 py-2 rounded\"\r\n// //         />\r\n\r\n// //         {/* Location Autocomplete */}\r\n// //         <PlacesAutocomplete\r\n// //           value={formData.location}\r\n// //           onChange={(address) => setFormData({ ...formData, location: address })}\r\n// //           onSelect={handleSelect}\r\n// //           searchOptions={{ componentRestrictions: { country: [\"in\"] } }} // restrict to India\r\n// //         >\r\n// //           {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\r\n// //             <div>\r\n// //               <input\r\n// //                 {...getInputProps({\r\n// //                   placeholder: \"Search Location (India only)\",\r\n// //                   className: \"w-full border px-3 py-2 rounded\",\r\n// //                 })}\r\n// //               />\r\n// //               <div className=\"border rounded bg-white mt-1\">\r\n// //                 {loading && <div className=\"p-2 text-gray-500\">Loading...</div>}\r\n// //                 {suggestions.map((suggestion) => {\r\n// //                   const className = suggestion.active\r\n// //                     ? \"p-2 bg-blue-100 cursor-pointer\"\r\n// //                     : \"p-2 cursor-pointer\";\r\n// //                   return (\r\n// //                     <div\r\n// //                       {...getSuggestionItemProps(suggestion, { className })}\r\n// //                       key={suggestion.placeId}\r\n// //                     >\r\n// //                       {suggestion.description}\r\n// //                     </div>\r\n// //                   );\r\n// //                 })}\r\n// //               </div>\r\n// //             </div>\r\n// //           )}\r\n// //         </PlacesAutocomplete>\r\n\r\n// //         {/* Department */}\r\n// //         <select\r\n// //           name=\"department\"\r\n// //           value={formData.department}\r\n// //           onChange={handleChange}\r\n// //           className=\"w-full border px-3 py-2 rounded\"\r\n// //           required\r\n// //         >\r\n// //           <option value=\"\">Select a Department</option>\r\n// //           <option value=\"Public Works\">Public Works</option>\r\n// //           <option value=\"Water Supply\">Water Supply</option>\r\n// //           <option value=\"Sanitation\">Sanitation</option>\r\n// //           <option value=\"Electricity\">Electricity</option>\r\n// //           <option value=\"Other\">Other</option>\r\n// //         </select>\r\n\r\n// //         {/* Urgency */}\r\n// //         <select\r\n// //           name=\"urgency\"\r\n// //           value={formData.urgency}\r\n// //           onChange={handleChange}\r\n// //           className=\"w-full border px-3 py-2 rounded\"\r\n// //         >\r\n// //           <option value=\"normal\">Normal</option>\r\n// //           <option value=\"urgent\">Urgent</option>\r\n// //         </select>\r\n\r\n// //         {/* Photo Upload */}\r\n// //         <div>\r\n// //           <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n// //             Upload / Capture Photo\r\n// //           </label>\r\n// //           <input\r\n// //             type=\"file\"\r\n// //             accept=\"image/*\"\r\n// //             capture=\"environment\"\r\n// //             onChange={handlePhotoChange}\r\n// //             className=\"w-full border px-3 py-2 rounded\"\r\n// //           />\r\n// //           {photo && (\r\n// //             <p className=\"text-xs text-gray-500 mt-1\">Selected: {photo.name}</p>\r\n// //           )}\r\n// //         </div>\r\n\r\n// //         <button\r\n// //           type=\"submit\"\r\n// //           className=\"bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700\"\r\n// //         >\r\n// //           Submit\r\n// //         </button>\r\n// //       </form>\r\n\r\n// //       {submitted && (\r\n// //         <div className=\"mt-6 text-green-700 font-semibold\">\r\n// //           Complaint submitted successfully!<br />\r\n// //           Your Complaint ID: <span className=\"font-bold\">{complaintId}</span>\r\n// //         </div>\r\n// //       )}\r\n// //     </div>\r\n// //   );\r\n// // }\r\n// import React, { useState } from \"react\";\r\n// import axios from \"axios\";\r\n// import PlacesAutocomplete, {\r\n//   geocodeByAddress,\r\n//   getLatLng,\r\n// } from \"react-places-autocomplete\";\r\n\r\n// export default function ComplaintForm() {\r\n//   const [formData, setFormData] = useState({\r\n//     name: \"\",\r\n//     complaint: \"\",\r\n//     location: \"\",\r\n//     urgency: \"normal\",\r\n//     department: \"\",\r\n//   });\r\n\r\n//   const [photo, setPhoto] = useState(null);\r\n//   const [complaintId, setComplaintId] = useState(null);\r\n//   const [submitted, setSubmitted] = useState(false);\r\n//   const [isSubmitting, setIsSubmitting] = useState(false);\r\n//   const [liveCoords, setLiveCoords] = useState(null);\r\n\r\n//   const handleChange = (e) => {\r\n//     setFormData({ ...formData, [e.target.name]: e.target.value });\r\n//   };\r\n\r\n//   const handlePhotoChange = (e) => {\r\n//     if (e.target.files && e.target.files[0]) {\r\n//       setPhoto(e.target.files[0]);\r\n//     }\r\n//   };\r\n\r\n//   // Google Places Autocomplete handler\r\n//   const handleSelect = async (address) => {\r\n//     setFormData({ ...formData, location: address });\r\n//     setLiveCoords(null); // Clear live coords if user selects an address\r\n//     try {\r\n//       const results = await geocodeByAddress(address);\r\n//       const latLng = await getLatLng(results[0]);\r\n//       console.log(\"Selected Location Coordinates: \", latLng);\r\n//       // You can store these coords in state if your backend needs them\r\n//     } catch (error) {\r\n//       console.error(\"Error fetching coordinates\", error);\r\n//     }\r\n//   };\r\n\r\n//   // Live location button handler\r\n//   const handleLiveLocation = () => {\r\n//     if (!navigator.geolocation) {\r\n//       alert(\"Geolocation is not supported by your browser.\");\r\n//       return;\r\n//     }\r\n\r\n//     setIsSubmitting(true);\r\n//     navigator.geolocation.getCurrentPosition(\r\n//       (position) => {\r\n//         const { latitude, longitude } = position.coords;\r\n//         setLiveCoords({ latitude, longitude });\r\n//         setFormData({ ...formData, location: \"Live Location Captured\" });\r\n//         alert(\"Live location successfully captured!\");\r\n//         setIsSubmitting(false);\r\n//       },\r\n//       (error) => {\r\n//         console.warn(\"Geolocation error:\", error);\r\n//         alert(\"⚠ Location not available. Please enable GPS for accurate location.\");\r\n//         setLiveCoords(null);\r\n//         setIsSubmitting(false);\r\n//       },\r\n//       { enableHighAccuracy: true, timeout: 15000, maximumAge: 0 }\r\n//     );\r\n//   };\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     setIsSubmitting(true);\r\n\r\n//     try {\r\n//       const formDataToSend = new FormData();\r\n//       Object.keys(formData).forEach((key) => {\r\n//         formDataToSend.append(key, formData[key]);\r\n//       });\r\n\r\n//       if (photo) {\r\n//         formDataToSend.append(\"photo\", photo);\r\n//       }\r\n\r\n//       // Logic to determine which location to send\r\n//       let latLng = null;\r\n//       if (liveCoords) {\r\n//         // Option 1: Live location is captured\r\n//         latLng = liveCoords;\r\n//       } else if (formData.location) {\r\n//         // Option 2: User typed and selected a location\r\n//         const results = await geocodeByAddress(formData.location);\r\n//         latLng = await getLatLng(results[0]);\r\n//       }\r\n\r\n//       if (latLng) {\r\n//         formDataToSend.append(\"latitude\", latLng.latitude);\r\n//         formDataToSend.append(\"longitude\", latLng.longitude);\r\n//       }\r\n\r\n//       const res = await axios.post(\"http://localhost:5000/api/complaint\", formDataToSend, {\r\n//         headers: { \"Content-Type\": \"multipart/form-data\" },\r\n//       });\r\n\r\n//       setComplaintId(res.data.complaint.complaintId);\r\n//       setSubmitted(true);\r\n//       alert(`Complaint submitted successfully! Your Complaint ID is: ${res.data.complaint.complaintId}`);\r\n\r\n//       // Reset form\r\n//       setFormData({\r\n//         name: \"\",\r\n//         complaint: \"\",\r\n//         location: \"\",\r\n//         urgency: \"normal\",\r\n//         department: \"\",\r\n//       });\r\n//       setPhoto(null);\r\n//       setLiveCoords(null);\r\n//     } catch (err) {\r\n//       console.error(\"Submission failed:\", err.message);\r\n//       alert(\"Complaint submission failed. Please try again.\");\r\n//     } finally {\r\n//       setIsSubmitting(false);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"max-w-xl mx-auto mt-10 p-6 bg-white rounded shadow\">\r\n//       <h2 className=\"text-2xl font-semibold mb-4\">Complaint Form</h2>\r\n//       <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n//         {/* Input fields */}\r\n//         <input\r\n//           name=\"name\"\r\n//           value={formData.name}\r\n//           onChange={handleChange}\r\n//           placeholder=\"Your Name\"\r\n//           required\r\n//           className=\"w-full border px-3 py-2 rounded\"\r\n//         />\r\n//         <textarea\r\n//           name=\"complaint\"\r\n//           value={formData.complaint}\r\n//           onChange={handleChange}\r\n//           placeholder=\"Describe your complaint\"\r\n//           required\r\n//           className=\"w-full border px-3 py-2 rounded\"\r\n//         />\r\n\r\n//         {/* Location Section */}\r\n//         <div>\r\n//           <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n//             Location\r\n//           </label>\r\n//           <div className=\"flex gap-2\">\r\n//             <PlacesAutocomplete\r\n//               value={formData.location}\r\n//               onChange={(address) => {\r\n//                 setFormData({ ...formData, location: address });\r\n//                 setLiveCoords(null);\r\n//               }}\r\n//               onSelect={handleSelect}\r\n//               searchOptions={{ componentRestrictions: { country: [\"in\"] } }}\r\n//             >\r\n//               {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\r\n//                 <div className=\"w-full\">\r\n//                   <input\r\n//                     {...getInputProps({\r\n//                       placeholder: \"Search Location...\",\r\n//                       className: \"w-full border px-3 py-2 rounded\",\r\n//                     })}\r\n//                   />\r\n//                   <div className=\"border rounded bg-white mt-1\">\r\n//                     {loading && <div className=\"p-2 text-gray-500\">Loading...</div>}\r\n//                     {suggestions.map((suggestion) => {\r\n//                       const className = suggestion.active\r\n//                         ? \"p-2 bg-blue-100 cursor-pointer\"\r\n//                         : \"p-2 cursor-pointer\";\r\n//                       return (\r\n//                         <div\r\n//                           {...getSuggestionItemProps(suggestion, { className })}\r\n//                           key={suggestion.placeId}\r\n//                         >\r\n//                           {suggestion.description}\r\n//                         </div>\r\n//                       );\r\n//                     })}\r\n//                   </div>\r\n//                 </div>\r\n//               )}\r\n//             </PlacesAutocomplete>\r\n//             <button\r\n//               type=\"button\"\r\n//               onClick={handleLiveLocation}\r\n//               disabled={isSubmitting}\r\n//               className={`px-4 py-2 rounded text-sm text-white ${\r\n//                 isSubmitting ? \"bg-gray-400\" : \"bg-blue-600\"\r\n//               }`}\r\n//             >\r\n//               Live\r\n//             </button>\r\n//           </div>\r\n//           {liveCoords && (\r\n//             <p className=\"text-xs text-green-600 mt-1\">\r\n//               Live Location: {liveCoords.latitude.toFixed(4)}, {liveCoords.longitude.toFixed(4)}\r\n//             </p>\r\n//           )}\r\n//         </div>\r\n\r\n//         {/* Other form elements */}\r\n//         <select\r\n//           name=\"department\"\r\n//           value={formData.department}\r\n//           onChange={handleChange}\r\n//           className=\"w-full border px-3 py-2 rounded\"\r\n//           required\r\n//         >\r\n//           <option value=\"\">Select a Department</option>\r\n//           <option value=\"Public Works\">Public Works</option>\r\n//           <option value=\"Water Supply\">Water Supply</option>\r\n//           <option value=\"Sanitation\">Sanitation</option>\r\n//           <option value=\"Electricity\">Electricity</option>\r\n//           <option value=\"Other\">Other</option>\r\n//         </select>\r\n\r\n//         <select\r\n//           name=\"urgency\"\r\n//           value={formData.urgency}\r\n//           onChange={handleChange}\r\n//           className=\"w-full border px-3 py-2 rounded\"\r\n//         >\r\n//           <option value=\"normal\">Normal</option>\r\n//           <option value=\"urgent\">Urgent</option>\r\n//         </select>\r\n\r\n//         <div>\r\n//           <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n//             Upload / Capture Photo\r\n//           </label>\r\n//           <input\r\n//             type=\"file\"\r\n//             accept=\"image/*\"\r\n//             capture=\"environment\"\r\n//             onChange={handlePhotoChange}\r\n//             className=\"w-full border px-3 py-2 rounded\"\r\n//           />\r\n//           {photo && (\r\n//             <p className=\"text-xs text-gray-500 mt-1\">Selected: {photo.name}</p>\r\n//           )}\r\n//         </div>\r\n\r\n//         <button\r\n//           type=\"submit\"\r\n//           disabled={isSubmitting}\r\n//           className={`w-full ${\r\n//             isSubmitting ? \"bg-gray-400\" : \"bg-blue-600\"\r\n//           } text-white px-4 py-2 rounded hover:bg-blue-700`}\r\n//         >\r\n//           {isSubmitting ? \"Submitting...\" : \"Submit Complaint\"}\r\n//         </button>\r\n//       </form>\r\n\r\n//       {submitted && (\r\n//         <div className=\"mt-6 text-green-700 font-semibold\">\r\n//           Complaint submitted successfully!<br />\r\n//           Your Complaint ID: <span className=\"font-bold\">{complaintId}</span>\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nimport React, { useState, useRef, useCallback } from \"react\";\r\nimport axios from \"axios\";\r\nimport PlacesAutocomplete, {\r\n  geocodeByAddress,\r\n  getLatLng,\r\n} from \"react-places-autocomplete\";\r\n\r\nexport default function ComplaintForm() {\r\n  const [formData, setFormData] = useState({\r\n    complaint: \"\",\r\n    location: \"\",\r\n  });\r\n\r\n  const [photo, setPhoto] = useState(null);\r\n  const [photoPreview, setPhotoPreview] = useState(null);\r\n  const [complaintId, setComplaintId] = useState(null);\r\n  const [submitted, setSubmitted] = useState(false);\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const [liveCoords, setLiveCoords] = useState(null);\r\n  const [recording, setRecording] = useState(false);\r\n  const [cameraStream, setCameraStream] = useState(null);\r\n  const [showCamera, setShowCamera] = useState(false);\r\n\r\n  const recognitionRef = useRef(null);\r\n  const videoRef = useRef(null);\r\n  const canvasRef = useRef(null);\r\n\r\n  // 🔤 Transliteration (Hindi → Hinglish)\r\n  const transliterateToHinglish = async (text) => {\r\n    try {\r\n      const res = await fetch(\r\n        `https://inputtools.google.com/request?text=${encodeURIComponent(\r\n          text\r\n        )}&itc=hi-t-i0-und&num=1&cp=0&cs=1&ie=utf-8&oe=utf-8&app=demopage`\r\n      );\r\n      const data = await res.json();\r\n      if (data[0] === \"SUCCESS\") {\r\n        return data[1][0][1][0];\r\n      }\r\n      return text;\r\n    } catch (err) {\r\n      console.error(\"Transliteration API error:\", err);\r\n      return text;\r\n    }\r\n  };\r\n\r\n  // 🌍 Reverse Geocoding - Convert coordinates to address\r\n  const reverseGeocode = async (latitude, longitude) => {\r\n    try {\r\n      const response = await fetch(\r\n        `https://maps.googleapis.com/maps/api/geocode/json?latlng=${latitude},${longitude}&key=${process.env.REACT_APP_GOOGLE_MAPS_API_KEY}`\r\n      );\r\n      const data = await response.json();\r\n      \r\n      if (data.results && data.results.length > 0) {\r\n        return data.results[0].formatted_address;\r\n      }\r\n      return `Location: ${latitude.toFixed(4)}, ${longitude.toFixed(4)}`;\r\n    } catch (error) {\r\n      console.error(\"Reverse geocoding error:\", error);\r\n      return `Location: ${latitude.toFixed(4)}, ${longitude.toFixed(4)}`;\r\n    }\r\n  };\r\n\r\n  // 🎙️ Speech-to-text\r\n  const handleSpeechToText = () => {\r\n    const SpeechRecognition =\r\n      window.SpeechRecognition || window.webkitSpeechRecognition;\r\n\r\n    if (!SpeechRecognition) {\r\n      alert(\"Speech recognition is not supported in this browser. Please use Chrome.\");\r\n      return;\r\n    }\r\n\r\n    if (recording) {\r\n      recognitionRef.current?.stop();\r\n      setRecording(false);\r\n      return;\r\n    }\r\n\r\n    const recognition = new SpeechRecognition();\r\n    recognition.lang = \"hi-IN\";\r\n    recognition.continuous = true;\r\n    recognition.interimResults = true;\r\n\r\n    recognition.onresult = async (event) => {\r\n      let transcript = \"\";\r\n      for (let i = 0; i < event.results.length; i++) {\r\n        transcript += event.results[i][0].transcript + \" \";\r\n      }\r\n      const hinglish = await transliterateToHinglish(transcript.trim());\r\n      setFormData((prev) => ({ ...prev, complaint: hinglish }));\r\n    };\r\n\r\n    recognition.onerror = (err) => {\r\n      console.error(\"Speech Recognition Error:\", err);\r\n      setRecording(false);\r\n    };\r\n\r\n    recognition.onend = () => {\r\n      setRecording(false);\r\n    };\r\n\r\n    recognition.start();\r\n    recognitionRef.current = recognition;\r\n    setRecording(true);\r\n  };\r\n\r\n  // 📷 Camera Functions\r\n  const startCamera = async () => {\r\n    try {\r\n      const stream = await navigator.mediaDevices.getUserMedia({\r\n        video: { facingMode: 'environment' }, // Use back camera\r\n        audio: false\r\n      });\r\n      \r\n      setCameraStream(stream);\r\n      setShowCamera(true);\r\n      \r\n      if (videoRef.current) {\r\n        videoRef.current.srcObject = stream;\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Camera access error:\", error);\r\n      alert(\"Unable to access camera. Please check permissions.\");\r\n    }\r\n  };\r\n\r\n  const stopCamera = () => {\r\n    if (cameraStream) {\r\n      cameraStream.getTracks().forEach(track => track.stop());\r\n      setCameraStream(null);\r\n    }\r\n    setShowCamera(false);\r\n  };\r\n\r\n  const capturePhoto = useCallback(async () => {\r\n    if (!videoRef.current || !canvasRef.current) return;\r\n\r\n    const video = videoRef.current;\r\n    const canvas = canvasRef.current;\r\n    const context = canvas.getContext('2d');\r\n\r\n    // Set canvas dimensions to match video\r\n    canvas.width = video.videoWidth;\r\n    canvas.height = video.videoHeight;\r\n\r\n    // Draw current video frame to canvas\r\n    context.drawImage(video, 0, 0);\r\n\r\n    // Get current location for geo-tagging\r\n    if (navigator.geolocation) {\r\n      navigator.geolocation.getCurrentPosition(\r\n        async (position) => {\r\n          const { latitude, longitude } = position.coords;\r\n          \r\n          // Add geo-tag overlay to image\r\n          context.fillStyle = 'rgba(0, 0, 0, 0.7)';\r\n          context.fillRect(0, canvas.height - 60, canvas.width, 60);\r\n          context.fillStyle = 'white';\r\n          context.font = '14px Arial';\r\n          context.fillText(`Location: ${latitude.toFixed(6)}, ${longitude.toFixed(6)}`, 10, canvas.height - 35);\r\n          context.fillText(`Captured: ${new Date().toLocaleString()}`, 10, canvas.height - 15);\r\n\r\n          // Convert to blob\r\n          canvas.toBlob((blob) => {\r\n            const file = new File([blob], `complaint_photo_${Date.now()}.jpg`, {\r\n              type: 'image/jpeg'\r\n            });\r\n            \r\n            setPhoto(file);\r\n            setPhotoPreview(canvas.toDataURL());\r\n            stopCamera();\r\n          }, 'image/jpeg', 0.8);\r\n        },\r\n        (error) => {\r\n          console.warn(\"Location not available for geo-tagging:\", error);\r\n          // Capture without geo-tag\r\n          canvas.toBlob((blob) => {\r\n            const file = new File([blob], `complaint_photo_${Date.now()}.jpg`, {\r\n              type: 'image/jpeg'\r\n            });\r\n            \r\n            setPhoto(file);\r\n            setPhotoPreview(canvas.toDataURL());\r\n            stopCamera();\r\n          }, 'image/jpeg', 0.8);\r\n        },\r\n        { enableHighAccuracy: true, timeout: 5000, maximumAge: 0 }\r\n      );\r\n    }\r\n  }, [cameraStream]);\r\n\r\n  const handlePhotoChange = (e) => {\r\n    if (e.target.files && e.target.files[0]) {\r\n      const file = e.target.files[0];\r\n      setPhoto(file);\r\n      \r\n      // Create preview\r\n      const reader = new FileReader();\r\n      reader.onload = (e) => setPhotoPreview(e.target.result);\r\n      reader.readAsDataURL(file);\r\n    }\r\n  };\r\n\r\n  const handleSelect = async (address) => {\r\n    setFormData({ ...formData, location: address });\r\n    setLiveCoords(null);\r\n    try {\r\n      const results = await geocodeByAddress(address);\r\n      await getLatLng(results[0]);\r\n    } catch (error) {\r\n      console.error(\"Error fetching coordinates\", error);\r\n    }\r\n  };\r\n\r\n  const handleLiveLocation = () => {\r\n    if (!navigator.geolocation) {\r\n      alert(\"Geolocation is not supported by your browser.\");\r\n      return;\r\n    }\r\n\r\n    setIsSubmitting(true);\r\n    navigator.geolocation.getCurrentPosition(\r\n      async (position) => {\r\n        const { latitude, longitude } = position.coords;\r\n        setLiveCoords({ latitude, longitude });\r\n        \r\n        // Get human-readable address\r\n        const address = await reverseGeocode(latitude, longitude);\r\n        setFormData({ ...formData, location: address });\r\n        \r\n        alert(\"Live location successfully captured!\");\r\n        setIsSubmitting(false);\r\n      },\r\n      (error) => {\r\n        console.warn(\"Geolocation error:\", error);\r\n        alert(\"⚠ Location not available. Please enable GPS.\");\r\n        setLiveCoords(null);\r\n        setIsSubmitting(false);\r\n      },\r\n      { enableHighAccuracy: true, timeout: 15000, maximumAge: 0 }\r\n    );\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (!formData.complaint.trim()) {\r\n      alert(\"Please speak or type your complaint.\");\r\n      return;\r\n    }\r\n\r\n    setIsSubmitting(true);\r\n    try {\r\n      const formDataToSend = new FormData();\r\n      formDataToSend.append(\"complaint\", formData.complaint);\r\n      formDataToSend.append(\"location\", formData.location);\r\n\r\n      if (photo) {\r\n        formDataToSend.append(\"photo\", photo);\r\n      }\r\n\r\n      if (liveCoords) {\r\n        formDataToSend.append(\"latitude\", liveCoords.latitude);\r\n        formDataToSend.append(\"longitude\", liveCoords.longitude);\r\n      }\r\n\r\n      // Add metadata for NLP analysis\r\n      formDataToSend.append(\"timestamp\", new Date().toISOString());\r\n      formDataToSend.append(\"hasPhoto\", !!photo);\r\n      formDataToSend.append(\"hasGeoLocation\", !!liveCoords);\r\n\r\n      const res = await axios.post(\"http://localhost:5000/api/complaint\", formDataToSend, {\r\n        headers: { \"Content-Type\": \"multipart/form-data\" },\r\n      });\r\n\r\n      setComplaintId(res.data.complaint.complaintId);\r\n      setSubmitted(true);\r\n      alert(`Complaint submitted! ID: ${res.data.complaint.complaintId}`);\r\n\r\n      // Reset form\r\n      setFormData({ complaint: \"\", location: \"\" });\r\n      setPhoto(null);\r\n      setPhotoPreview(null);\r\n      setLiveCoords(null);\r\n    } catch (err) {\r\n      console.error(\"Submission failed:\", err.message);\r\n      alert(\"Complaint submission failed.\");\r\n    } finally {\r\n      setIsSubmitting(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"max-w-xl mx-auto mt-10 p-6 bg-white rounded shadow\">\r\n      <h2 className=\"text-2xl font-semibold mb-4\">Complaint Form</h2>\r\n      \r\n      {/* Camera Modal */}\r\n      {showCamera && (\r\n        <div className=\"fixed inset-0 bg-black bg-opacity-75 flex items-center justify-center z-50\">\r\n          <div className=\"bg-white p-4 rounded-lg max-w-md w-full\">\r\n            <div className=\"relative\">\r\n              <video\r\n                ref={videoRef}\r\n                autoPlay\r\n                playsInline\r\n                className=\"w-full h-64 object-cover rounded\"\r\n              />\r\n              <div className=\"flex justify-center space-x-4 mt-4\">\r\n                <button\r\n                  onClick={capturePhoto}\r\n                  className=\"bg-blue-600 text-white px-4 py-2 rounded\"\r\n                >\r\n                  📷 Capture\r\n                </button>\r\n                <button\r\n                  onClick={stopCamera}\r\n                  className=\"bg-gray-600 text-white px-4 py-2 rounded\"\r\n                >\r\n                  Cancel\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n        \r\n        {/* 🎙️ Voice-to-Text */}\r\n        <button\r\n          type=\"button\"\r\n          onClick={handleSpeechToText}\r\n          className={`w-full px-4 py-2 rounded-lg font-semibold ${\r\n            recording ? \"bg-red-500\" : \"bg-purple-600\"\r\n          } text-white`}\r\n        >\r\n          {recording ? \"🛑 बोलना रोकें\" : \"🎤 शिकायत बोलें\"}\r\n        </button>\r\n\r\n        {/* Complaint Text */}\r\n        <textarea\r\n          name=\"complaint\"\r\n          value={formData.complaint}\r\n          onChange={(e) => setFormData({ ...formData, complaint: e.target.value })}\r\n          placeholder=\"Describe your complaint or speak...\"\r\n          required\r\n          className=\"w-full border px-3 py-2 rounded h-32\"\r\n        />\r\n\r\n        {/* 📍 Location */}\r\n        <div>\r\n          <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n            Location\r\n          </label>\r\n          <div className=\"flex gap-2\">\r\n            <PlacesAutocomplete\r\n              value={formData.location}\r\n              onChange={(address) => {\r\n                setFormData({ ...formData, location: address });\r\n                setLiveCoords(null);\r\n              }}\r\n              onSelect={handleSelect}\r\n              searchOptions={{ componentRestrictions: { country: [\"in\"] } }}\r\n            >\r\n              {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\r\n                <div className=\"w-full\">\r\n                  <input\r\n                    {...getInputProps({\r\n                      placeholder: \"Search Location...\",\r\n                      className: \"w-full border px-3 py-2 rounded\",\r\n                    })}\r\n                  />\r\n                  <div className=\"border rounded bg-white mt-1\">\r\n                    {loading && <div className=\"p-2 text-gray-500\">Loading...</div>}\r\n                    {suggestions.map((suggestion) => {\r\n                      const className = suggestion.active\r\n                        ? \"p-2 bg-blue-100 cursor-pointer\"\r\n                        : \"p-2 cursor-pointer\";\r\n                      return (\r\n                        <div\r\n                          {...getSuggestionItemProps(suggestion, { className })}\r\n                          key={suggestion.placeId}\r\n                        >\r\n                          {suggestion.description}\r\n                        </div>\r\n                      );\r\n                    })}\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </PlacesAutocomplete>\r\n            <button\r\n              type=\"button\"\r\n              onClick={handleLiveLocation}\r\n              disabled={isSubmitting}\r\n              className={`px-4 py-2 rounded text-sm text-white ${\r\n                isSubmitting ? \"bg-gray-400\" : \"bg-blue-600\"\r\n              }`}\r\n            >\r\n              📍 Live\r\n            </button>\r\n          </div>\r\n          {liveCoords && (\r\n            <p className=\"text-xs text-green-600 mt-1\">\r\n              📍 Live Location Captured: {liveCoords.latitude.toFixed(4)}, {liveCoords.longitude.toFixed(4)}\r\n            </p>\r\n          )}\r\n        </div>\r\n\r\n        {/* 📷 Photo Upload */}\r\n        <div>\r\n          <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n            Upload / Capture Photo\r\n          </label>\r\n          <div className=\"flex gap-2\">\r\n            <input\r\n              type=\"file\"\r\n              accept=\"image/*\"\r\n              capture=\"environment\"\r\n              onChange={handlePhotoChange}\r\n              className=\"flex-1 border px-3 py-2 rounded\"\r\n            />\r\n            <button\r\n              type=\"button\"\r\n              onClick={startCamera}\r\n              className=\"bg-green-600 text-white px-4 py-2 rounded text-sm\"\r\n            >\r\n              📷 Camera\r\n            </button>\r\n          </div>\r\n          \r\n          {photoPreview && (\r\n            <div className=\"mt-2\">\r\n              <img \r\n                src={photoPreview} \r\n                alt=\"Preview\" \r\n                className=\"w-full h-32 object-cover rounded border\"\r\n              />\r\n              <button\r\n                type=\"button\"\r\n                onClick={() => {\r\n                  setPhoto(null);\r\n                  setPhotoPreview(null);\r\n                }}\r\n                className=\"mt-1 text-red-600 text-sm\"\r\n              >\r\n                ❌ Remove Photo\r\n              </button>\r\n            </div>\r\n          )}\r\n          \r\n          {photo && !photoPreview && (\r\n            <p className=\"text-xs text-gray-500 mt-1\">Selected: {photo.name}</p>\r\n          )}\r\n        </div>\r\n\r\n        <button\r\n          type=\"submit\"\r\n          disabled={isSubmitting}\r\n          className={`w-full ${\r\n            isSubmitting ? \"bg-gray-400\" : \"bg-green-600\"\r\n          } text-white px-4 py-2 rounded font-semibold`}\r\n        >\r\n          {isSubmitting ? \"⏳ Submitting...\" : \"✅ Submit Complaint\"}\r\n        </button>\r\n      </form>\r\n\r\n      {submitted && (\r\n        <div className=\"mt-6 p-4 bg-green-100 rounded-lg\">\r\n          <div className=\"text-green-700 font-semibold\">\r\n            ✅ Complaint submitted successfully!<br />\r\n            <span className=\"text-lg\">Your Complaint ID: <span className=\"font-bold text-green-800\">{complaintId}</span></span>\r\n          </div>\r\n          <p className=\"text-sm text-green-600 mt-2\">\r\n            Your complaint is being analyzed and will be forwarded to the appropriate department based on urgency and category.\r\n          </p>\r\n        </div>\r\n      )}\r\n\r\n      {/* Hidden canvas for photo processing */}\r\n      <canvas ref={canvasRef} style={{ display: 'none' }} />\r\n    </div>\r\n  );\r\n}"],"mappings":";;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAWA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,EAAEC,WAAW,EAAAC,aAAA,IAAAC,cAAA,QAAQ,OAAO;AAC5D,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,kBAAkB,IACvBC,gBAAgB,EAChBC,SAAS,QACJ,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnC,eAAe,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACtC,MAAM,C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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}