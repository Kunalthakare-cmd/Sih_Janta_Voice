{"ast":null,"code":"var _jsxFileName = \"D:\\\\Kunal Files\\\\projects\\\\janta_voice_new1\\\\Janta_Voice_Final\\\\frontend\\\\src\\\\pages\\\\SignupForm.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n// import axios from \"axios\";\n\n// export default function SignupForm() {\n//   const navigate = useNavigate();\n//   const [form, setForm] = useState({\n//     name: \"\",\n//     email: \"\",\n//     password: \"\",\n//     phone: \"\",\n//     address: \"\",\n//   });\n//   const [photo, setPhoto] = useState(null);\n\n//   const handleChange = (e) => {\n//     setForm({ ...form, [e.target.name]: e.target.value });\n//   };\n\n//   const handlePhotoChange = (e) => {\n//     if (e.target.files && e.target.files[0]) {\n//       setPhoto(e.target.files[0]);\n//     }\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     try {\n//       const formData = new FormData();\n//       Object.keys(form).forEach((key) => formData.append(key, form[key]));\n//       if (photo) formData.append(\"photo\", photo);\n\n//       await axios.post(\"http://localhost:5000/api/auth/register\", formData, {\n//         headers: { \"Content-Type\": \"multipart/form-data\" },\n//       });\n\n//       alert(\"Signup successful! Please login now.\");\n//       setForm({ name: \"\", email: \"\", password: \"\", phone: \"\", address: \"\" });\n//       setPhoto(null);\n//       navigate(\"/login\"); // redirect to login page after signup\n//     } catch (err) {\n//       alert(err.response?.data?.error || \"Signup failed\");\n//     }\n//   };\n\n//   return (\n//     <div className=\"max-w-md mx-auto mt-10 p-6 bg-white rounded shadow\">\n//       <h2 className=\"text-2xl font-semibold mb-4\">Signup</h2>\n//       <form onSubmit={handleSubmit} className=\"space-y-4\">\n//         <input name=\"name\" value={form.name} onChange={handleChange} placeholder=\"Full Name\" required className=\"w-full border px-3 py-2 rounded\" />\n//         <input type=\"email\" name=\"email\" value={form.email} onChange={handleChange} placeholder=\"Email\" required className=\"w-full border px-3 py-2 rounded\" />\n//         <input type=\"password\" name=\"password\" value={form.password} onChange={handleChange} placeholder=\"Password\" required className=\"w-full border px-3 py-2 rounded\" />\n//         <input name=\"phone\" value={form.phone} onChange={handleChange} placeholder=\"Phone Number\" required className=\"w-full border px-3 py-2 rounded\" />\n//         <textarea name=\"address\" value={form.address} onChange={handleChange} placeholder=\"Full Address\" required className=\"w-full border px-3 py-2 rounded\" />\n//         <input type=\"file\" accept=\"image/*\" onChange={handlePhotoChange} className=\"w-full border px-3 py-2 rounded\" />\n//         <button type=\"submit\" className=\"w-full bg-blue-600 text-white px-4 py-2 rounded\">Signup</button>\n//       </form>\n\n//       <p className=\"mt-4 text-center text-gray-600\">\n//         Already have an account?{\" \"}\n//         <span\n//           onClick={() => navigate(\"/login\")}\n//           className=\"text-blue-600 underline cursor-pointer\"\n//         >\n//           Login here\n//         </span>\n//       </p>\n//     </div>\n//   );\n// }\n\nimport React, { useState, createElement as _createElement } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport PlacesAutocomplete, { geocodeByAddress, getLatLng } from \"react-places-autocomplete\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SignupForm() {\n  _s();\n  const navigate = useNavigate();\n  const [form, setForm] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    phone: \"\",\n    address: \"\",\n    latitude: \"\",\n    longitude: \"\"\n  });\n  const [photo, setPhoto] = useState(null);\n  const [liveCoords, setLiveCoords] = useState(null);\n  const [isGettingLocation, setIsGettingLocation] = useState(false);\n\n  // 🌍 Reverse Geocoding - Convert coordinates to address\n  const reverseGeocode = async (latitude, longitude) => {\n    try {\n      const response = await fetch(`https://maps.googleapis.com/maps/api/geocode/json?latlng=${latitude},${longitude}&key=AIzaSyA9spKFBlhfECHHoXnMPRziyuUuhL124yo`);\n      const data = await response.json();\n      if (data.results && data.results.length > 0) {\n        return data.results[0].formatted_address;\n      }\n      return `Location: ${latitude.toFixed(4)}, ${longitude.toFixed(4)}`;\n    } catch (error) {\n      console.error(\"Reverse geocoding error:\", error);\n      return `Location: ${latitude.toFixed(4)}, ${longitude.toFixed(4)}`;\n    }\n  };\n  const handleChange = e => {\n    setForm({\n      ...form,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handlePhotoChange = e => {\n    if (e.target.files && e.target.files[0]) {\n      setPhoto(e.target.files[0]);\n    }\n  };\n\n  // Handle Places Autocomplete selection\n  const handleSelect = async address => {\n    setForm({\n      ...form,\n      address\n    });\n    setLiveCoords(null);\n    try {\n      const results = await geocodeByAddress(address);\n      const {\n        lat,\n        lng\n      } = await getLatLng(results[0]);\n\n      // Update form with coordinates\n      setForm(prev => ({\n        ...prev,\n        address,\n        latitude: lat.toString(),\n        longitude: lng.toString()\n      }));\n    } catch (error) {\n      console.error(\"Error fetching coordinates\", error);\n    }\n  };\n\n  // Get live location\n  const handleLiveLocation = () => {\n    if (!navigator.geolocation) {\n      alert(\"Geolocation is not supported by your browser.\");\n      return;\n    }\n    setIsGettingLocation(true);\n    navigator.geolocation.getCurrentPosition(async position => {\n      const {\n        latitude,\n        longitude\n      } = position.coords;\n      setLiveCoords({\n        latitude,\n        longitude\n      });\n\n      // Get human-readable address\n      const address = await reverseGeocode(latitude, longitude);\n\n      // Update form with location data\n      setForm(prev => ({\n        ...prev,\n        address,\n        latitude: latitude.toString(),\n        longitude: longitude.toString()\n      }));\n      setIsGettingLocation(false);\n    }, error => {\n      console.warn(\"Geolocation error:\", error);\n      alert(\"⚠ Location not available. Please enable GPS and try again.\");\n      setLiveCoords(null);\n      setIsGettingLocation(false);\n    }, {\n      enableHighAccuracy: true,\n      timeout: 15000,\n      maximumAge: 0\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const formData = new FormData();\n      Object.keys(form).forEach(key => formData.append(key, form[key]));\n      if (photo) formData.append(\"photo\", photo);\n\n      // Add location metadata\n      if (liveCoords) {\n        formData.append(\"hasLiveLocation\", \"true\");\n        formData.append(\"locationMethod\", \"gps\");\n      } else if (form.latitude && form.longitude) {\n        formData.append(\"hasLiveLocation\", \"false\");\n        formData.append(\"locationMethod\", \"places_autocomplete\");\n      }\n      await axios.post(\"http://localhost:5000/api/auth/register\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      });\n      alert(\"Signup successful! Please login now.\");\n      setForm({\n        name: \"\",\n        email: \"\",\n        password: \"\",\n        phone: \"\",\n        address: \"\",\n        latitude: \"\",\n        longitude: \"\"\n      });\n      setPhoto(null);\n      setLiveCoords(null);\n      navigate(\"/login\");\n    } catch (err) {\n      var _err$response, _err$response$data;\n      alert(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.error) || \"Signup failed\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-md mx-auto mt-10 p-6 bg-white rounded shadow\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-semibold mb-4\",\n      children: \"Signup\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"space-y-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"name\",\n        value: form.name,\n        onChange: handleChange,\n        placeholder: \"Full Name\",\n        required: true,\n        className: \"w-full border px-3 py-2 rounded\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        name: \"email\",\n        value: form.email,\n        onChange: handleChange,\n        placeholder: \"Email\",\n        required: true,\n        className: \"w-full border px-3 py-2 rounded\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        value: form.password,\n        onChange: handleChange,\n        placeholder: \"Password\",\n        required: true,\n        className: \"w-full border px-3 py-2 rounded\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"phone\",\n        value: form.phone,\n        onChange: handleChange,\n        placeholder: \"Phone Number\",\n        required: true,\n        className: \"w-full border px-3 py-2 rounded\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block text-sm font-medium text-gray-700 mb-1\",\n          children: \"Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex gap-2\",\n          children: [/*#__PURE__*/_jsxDEV(PlacesAutocomplete, {\n            value: form.address,\n            onChange: address => {\n              setForm({\n                ...form,\n                address\n              });\n              setLiveCoords(null);\n            },\n            onSelect: handleSelect,\n            searchOptions: {\n              componentRestrictions: {\n                country: [\"in\"]\n              }\n            },\n            children: ({\n              getInputProps,\n              suggestions,\n              getSuggestionItemProps,\n              loading\n            }) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"w-full\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                ...getInputProps({\n                  placeholder: \"Search Address...\",\n                  className: \"w-full border px-3 py-2 rounded\",\n                  required: true\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 279,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"border rounded bg-white mt-1\",\n                children: [loading && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"p-2 text-gray-500\",\n                  children: \"Loading...\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 287,\n                  columnNumber: 33\n                }, this), suggestions.map(suggestion => {\n                  const className = suggestion.active ? \"p-2 bg-blue-100 cursor-pointer\" : \"p-2 cursor-pointer hover:bg-gray-50\";\n                  return /*#__PURE__*/_createElement(\"div\", {\n                    ...getSuggestionItemProps(suggestion, {\n                      className\n                    }),\n                    key: suggestion.placeId,\n                    __self: this,\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 293,\n                      columnNumber: 25\n                    }\n                  }, suggestion.description);\n                })]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 286,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: handleLiveLocation,\n            disabled: isGettingLocation,\n            className: `px-4 py-2 rounded text-sm text-white whitespace-nowrap ${isGettingLocation ? \"bg-gray-400\" : \"bg-blue-600 hover:bg-blue-700\"}`,\n            children: isGettingLocation ? \"📍 Getting...\" : \"📍 Live\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 11\n        }, this), liveCoords && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-xs text-green-600 mt-1\",\n          children: [\"\\uD83D\\uDCCD Live Location Captured: \", liveCoords.latitude.toFixed(4), \", \", liveCoords.longitude.toFixed(4)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 13\n        }, this), form.latitude && form.longitude && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-xs text-gray-500 mt-1\",\n          children: [\"Coordinates: \", parseFloat(form.latitude).toFixed(6), \", \", parseFloat(form.longitude).toFixed(6)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"hidden\",\n        name: \"latitude\",\n        value: form.latitude\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"hidden\",\n        name: \"longitude\",\n        value: form.longitude\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \"image/*\",\n        onChange: handlePhotoChange,\n        className: \"w-full border px-3 py-2 rounded\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"w-full bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700\",\n        children: \"Signup\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"mt-4 text-center text-gray-600\",\n      children: [\"Already have an account?\", \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: () => navigate(\"/login\"),\n        className: \"text-blue-600 underline cursor-pointer hover:text-blue-800\",\n        children: \"Login here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 221,\n    columnNumber: 5\n  }, this);\n}\n_s(SignupForm, \"0BDfXLDHKIN4STRydt2DAKefLpI=\", false, function () {\n  return [useNavigate];\n});\n_c = SignupForm;\nvar _c;\n$RefreshReg$(_c, \"SignupForm\");","map":{"version":3,"names":["React","useState","createElement","_createElement","useNavigate","axios","PlacesAutocomplete","geocodeByAddress","getLatLng","jsxDEV","_jsxDEV","SignupForm","_s","navigate","form","setForm","name","email","password","phone","address","latitude","longitude","photo","setPhoto","liveCoords","setLiveCoords","isGettingLocation","setIsGettingLocation","reverseGeocode","response","fetch","data","json","results","length","formatted_address","toFixed","error","console","handleChange","e","target","value","handlePhotoChange","files","handleSelect","lat","lng","prev","toString","handleLiveLocation","navigator","geolocation","alert","getCurrentPosition","position","coords","warn","enableHighAccuracy","timeout","maximumAge","handleSubmit","preventDefault","formData","FormData","Object","keys","forEach","key","append","post","headers","err","_err$response","_err$response$data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","onChange","placeholder","required","type","onSelect","searchOptions","componentRestrictions","country","getInputProps","suggestions","getSuggestionItemProps","loading","map","suggestion","active","placeId","__self","__source","description","onClick","disabled","parseFloat","accept","_c","$RefreshReg$"],"sources":["D:/Kunal Files/projects/janta_voice_new1/Janta_Voice_Final/frontend/src/pages/SignupForm.jsx"],"sourcesContent":["// import React, { useState } from \"react\";\r\n// import { useNavigate } from \"react-router-dom\";\r\n// import axios from \"axios\";\r\n\r\n// export default function SignupForm() {\r\n//   const navigate = useNavigate();\r\n//   const [form, setForm] = useState({\r\n//     name: \"\",\r\n//     email: \"\",\r\n//     password: \"\",\r\n//     phone: \"\",\r\n//     address: \"\",\r\n//   });\r\n//   const [photo, setPhoto] = useState(null);\r\n\r\n//   const handleChange = (e) => {\r\n//     setForm({ ...form, [e.target.name]: e.target.value });\r\n//   };\r\n\r\n//   const handlePhotoChange = (e) => {\r\n//     if (e.target.files && e.target.files[0]) {\r\n//       setPhoto(e.target.files[0]);\r\n//     }\r\n//   };\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     try {\r\n//       const formData = new FormData();\r\n//       Object.keys(form).forEach((key) => formData.append(key, form[key]));\r\n//       if (photo) formData.append(\"photo\", photo);\r\n\r\n//       await axios.post(\"http://localhost:5000/api/auth/register\", formData, {\r\n//         headers: { \"Content-Type\": \"multipart/form-data\" },\r\n//       });\r\n\r\n//       alert(\"Signup successful! Please login now.\");\r\n//       setForm({ name: \"\", email: \"\", password: \"\", phone: \"\", address: \"\" });\r\n//       setPhoto(null);\r\n//       navigate(\"/login\"); // redirect to login page after signup\r\n//     } catch (err) {\r\n//       alert(err.response?.data?.error || \"Signup failed\");\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"max-w-md mx-auto mt-10 p-6 bg-white rounded shadow\">\r\n//       <h2 className=\"text-2xl font-semibold mb-4\">Signup</h2>\r\n//       <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n//         <input name=\"name\" value={form.name} onChange={handleChange} placeholder=\"Full Name\" required className=\"w-full border px-3 py-2 rounded\" />\r\n//         <input type=\"email\" name=\"email\" value={form.email} onChange={handleChange} placeholder=\"Email\" required className=\"w-full border px-3 py-2 rounded\" />\r\n//         <input type=\"password\" name=\"password\" value={form.password} onChange={handleChange} placeholder=\"Password\" required className=\"w-full border px-3 py-2 rounded\" />\r\n//         <input name=\"phone\" value={form.phone} onChange={handleChange} placeholder=\"Phone Number\" required className=\"w-full border px-3 py-2 rounded\" />\r\n//         <textarea name=\"address\" value={form.address} onChange={handleChange} placeholder=\"Full Address\" required className=\"w-full border px-3 py-2 rounded\" />\r\n//         <input type=\"file\" accept=\"image/*\" onChange={handlePhotoChange} className=\"w-full border px-3 py-2 rounded\" />\r\n//         <button type=\"submit\" className=\"w-full bg-blue-600 text-white px-4 py-2 rounded\">Signup</button>\r\n//       </form>\r\n\r\n//       <p className=\"mt-4 text-center text-gray-600\">\r\n//         Already have an account?{\" \"}\r\n//         <span\r\n//           onClick={() => navigate(\"/login\")}\r\n//           className=\"text-blue-600 underline cursor-pointer\"\r\n//         >\r\n//           Login here\r\n//         </span>\r\n//       </p>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n\r\n\r\nimport React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport PlacesAutocomplete, {\r\n  geocodeByAddress,\r\n  getLatLng,\r\n} from \"react-places-autocomplete\";\r\n\r\nexport default function SignupForm() {\r\n  const navigate = useNavigate();\r\n  const [form, setForm] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    phone: \"\",\r\n    address: \"\",\r\n    latitude: \"\",\r\n    longitude: \"\",\r\n  });\r\n  const [photo, setPhoto] = useState(null);\r\n  const [liveCoords, setLiveCoords] = useState(null);\r\n  const [isGettingLocation, setIsGettingLocation] = useState(false);\r\n\r\n  // 🌍 Reverse Geocoding - Convert coordinates to address\r\n  const reverseGeocode = async (latitude, longitude) => {\r\n    try {\r\n      const response = await fetch(\r\n        `https://maps.googleapis.com/maps/api/geocode/json?latlng=${latitude},${longitude}&key=AIzaSyA9spKFBlhfECHHoXnMPRziyuUuhL124yo`\r\n      );\r\n      const data = await response.json();\r\n      \r\n      if (data.results && data.results.length > 0) {\r\n        return data.results[0].formatted_address;\r\n      }\r\n      return `Location: ${latitude.toFixed(4)}, ${longitude.toFixed(4)}`;\r\n    } catch (error) {\r\n      console.error(\"Reverse geocoding error:\", error);\r\n      return `Location: ${latitude.toFixed(4)}, ${longitude.toFixed(4)}`;\r\n    }\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setForm({ ...form, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handlePhotoChange = (e) => {\r\n    if (e.target.files && e.target.files[0]) {\r\n      setPhoto(e.target.files[0]);\r\n    }\r\n  };\r\n\r\n  // Handle Places Autocomplete selection\r\n  const handleSelect = async (address) => {\r\n    setForm({ ...form, address });\r\n    setLiveCoords(null);\r\n    \r\n    try {\r\n      const results = await geocodeByAddress(address);\r\n      const { lat, lng } = await getLatLng(results[0]);\r\n      \r\n      // Update form with coordinates\r\n      setForm(prev => ({\r\n        ...prev,\r\n        address,\r\n        latitude: lat.toString(),\r\n        longitude: lng.toString()\r\n      }));\r\n    } catch (error) {\r\n      console.error(\"Error fetching coordinates\", error);\r\n    }\r\n  };\r\n\r\n  // Get live location\r\n  const handleLiveLocation = () => {\r\n    if (!navigator.geolocation) {\r\n      alert(\"Geolocation is not supported by your browser.\");\r\n      return;\r\n    }\r\n\r\n    setIsGettingLocation(true);\r\n    navigator.geolocation.getCurrentPosition(\r\n      async (position) => {\r\n        const { latitude, longitude } = position.coords;\r\n        setLiveCoords({ latitude, longitude });\r\n        \r\n        // Get human-readable address\r\n        const address = await reverseGeocode(latitude, longitude);\r\n        \r\n        // Update form with location data\r\n        setForm(prev => ({\r\n          ...prev,\r\n          address,\r\n          latitude: latitude.toString(),\r\n          longitude: longitude.toString()\r\n        }));\r\n        \r\n        setIsGettingLocation(false);\r\n      },\r\n      (error) => {\r\n        console.warn(\"Geolocation error:\", error);\r\n        alert(\"⚠ Location not available. Please enable GPS and try again.\");\r\n        setLiveCoords(null);\r\n        setIsGettingLocation(false);\r\n      },\r\n      { enableHighAccuracy: true, timeout: 15000, maximumAge: 0 }\r\n    );\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const formData = new FormData();\r\n      Object.keys(form).forEach((key) => formData.append(key, form[key]));\r\n      if (photo) formData.append(\"photo\", photo);\r\n\r\n      // Add location metadata\r\n      if (liveCoords) {\r\n        formData.append(\"hasLiveLocation\", \"true\");\r\n        formData.append(\"locationMethod\", \"gps\");\r\n      } else if (form.latitude && form.longitude) {\r\n        formData.append(\"hasLiveLocation\", \"false\");\r\n        formData.append(\"locationMethod\", \"places_autocomplete\");\r\n      }\r\n\r\n      await axios.post(\"http://localhost:5000/api/auth/register\", formData, {\r\n        headers: { \"Content-Type\": \"multipart/form-data\" },\r\n      });\r\n\r\n      alert(\"Signup successful! Please login now.\");\r\n      setForm({ \r\n        name: \"\", \r\n        email: \"\", \r\n        password: \"\", \r\n        phone: \"\", \r\n        address: \"\",\r\n        latitude: \"\",\r\n        longitude: \"\"\r\n      });\r\n      setPhoto(null);\r\n      setLiveCoords(null);\r\n      navigate(\"/login\");\r\n    } catch (err) {\r\n      alert(err.response?.data?.error || \"Signup failed\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"max-w-md mx-auto mt-10 p-6 bg-white rounded shadow\">\r\n      <h2 className=\"text-2xl font-semibold mb-4\">Signup</h2>\r\n      <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n        <input \r\n          name=\"name\" \r\n          value={form.name} \r\n          onChange={handleChange} \r\n          placeholder=\"Full Name\" \r\n          required \r\n          className=\"w-full border px-3 py-2 rounded\" \r\n        />\r\n        \r\n        <input \r\n          type=\"email\" \r\n          name=\"email\" \r\n          value={form.email} \r\n          onChange={handleChange} \r\n          placeholder=\"Email\" \r\n          required \r\n          className=\"w-full border px-3 py-2 rounded\" \r\n        />\r\n        \r\n        <input \r\n          type=\"password\" \r\n          name=\"password\" \r\n          value={form.password} \r\n          onChange={handleChange} \r\n          placeholder=\"Password\" \r\n          required \r\n          className=\"w-full border px-3 py-2 rounded\" \r\n        />\r\n        \r\n        <input \r\n          name=\"phone\" \r\n          value={form.phone} \r\n          onChange={handleChange} \r\n          placeholder=\"Phone Number\" \r\n          required \r\n          className=\"w-full border px-3 py-2 rounded\" \r\n        />\r\n\r\n        {/* 📍 Enhanced Address with Location */}\r\n        <div>\r\n          <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n            Address\r\n          </label>\r\n          <div className=\"flex gap-2\">\r\n            <PlacesAutocomplete\r\n              value={form.address}\r\n              onChange={(address) => {\r\n                setForm({ ...form, address });\r\n                setLiveCoords(null);\r\n              }}\r\n              onSelect={handleSelect}\r\n              searchOptions={{ componentRestrictions: { country: [\"in\"] } }}\r\n            >\r\n              {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\r\n                <div className=\"w-full\">\r\n                  <input\r\n                    {...getInputProps({\r\n                      placeholder: \"Search Address...\",\r\n                      className: \"w-full border px-3 py-2 rounded\",\r\n                      required: true\r\n                    })}\r\n                  />\r\n                  <div className=\"border rounded bg-white mt-1\">\r\n                    {loading && <div className=\"p-2 text-gray-500\">Loading...</div>}\r\n                    {suggestions.map((suggestion) => {\r\n                      const className = suggestion.active\r\n                        ? \"p-2 bg-blue-100 cursor-pointer\"\r\n                        : \"p-2 cursor-pointer hover:bg-gray-50\";\r\n                      return (\r\n                        <div\r\n                          {...getSuggestionItemProps(suggestion, { className })}\r\n                          key={suggestion.placeId}\r\n                        >\r\n                          {suggestion.description}\r\n                        </div>\r\n                      );\r\n                    })}\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </PlacesAutocomplete>\r\n            \r\n            <button\r\n              type=\"button\"\r\n              onClick={handleLiveLocation}\r\n              disabled={isGettingLocation}\r\n              className={`px-4 py-2 rounded text-sm text-white whitespace-nowrap ${\r\n                isGettingLocation ? \"bg-gray-400\" : \"bg-blue-600 hover:bg-blue-700\"\r\n              }`}\r\n            >\r\n              {isGettingLocation ? \"📍 Getting...\" : \"📍 Live\"}\r\n            </button>\r\n          </div>\r\n          \r\n          {liveCoords && (\r\n            <p className=\"text-xs text-green-600 mt-1\">\r\n              📍 Live Location Captured: {liveCoords.latitude.toFixed(4)}, {liveCoords.longitude.toFixed(4)}\r\n            </p>\r\n          )}\r\n          \r\n          {form.latitude && form.longitude && (\r\n            <p className=\"text-xs text-gray-500 mt-1\">\r\n              Coordinates: {parseFloat(form.latitude).toFixed(6)}, {parseFloat(form.longitude).toFixed(6)}\r\n            </p>\r\n          )}\r\n        </div>\r\n\r\n        {/* Hidden coordinate inputs for form submission */}\r\n        <input \r\n          type=\"hidden\" \r\n          name=\"latitude\" \r\n          value={form.latitude} \r\n        />\r\n        <input \r\n          type=\"hidden\" \r\n          name=\"longitude\" \r\n          value={form.longitude} \r\n        />\r\n\r\n        <input \r\n          type=\"file\" \r\n          accept=\"image/*\" \r\n          onChange={handlePhotoChange} \r\n          className=\"w-full border px-3 py-2 rounded\" \r\n        />\r\n        \r\n        <button \r\n          type=\"submit\" \r\n          className=\"w-full bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700\"\r\n        >\r\n          Signup\r\n        </button>\r\n      </form>\r\n\r\n      <p className=\"mt-4 text-center text-gray-600\">\r\n        Already have an account?{\" \"}\r\n        <span\r\n          onClick={() => navigate(\"/login\")}\r\n          className=\"text-blue-600 underline cursor-pointer hover:text-blue-800\"\r\n        >\r\n          Login here\r\n        </span>\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}