{"ast":null,"code":"var _jsxFileName = \"D:\\\\Kunal Files\\\\projects\\\\janta_voice_new1\\\\Janta_Voice_Final\\\\frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [authToken, setAuthToken] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n\n  // API Base URL\n  const API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000';\n\n  // Check authentication on app load\n  useEffect(() => {\n    checkAuthentication();\n  }, []);\n  const checkAuthentication = async () => {\n    try {\n      setIsLoading(true);\n      // Get token from localStorage or sessionStorage\n      const token = localStorage.getItem('authToken') || sessionStorage.getItem('authToken');\n      if (!token) {\n        setIsLoading(false);\n        return;\n      }\n\n      // Verify token and get user profile\n      const response = await axios.get(`${API_BASE_URL}/api/user/profile`, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      if (response.data.success) {\n        setUser(response.data.user);\n        setAuthToken(token);\n        setIsAuthenticated(true);\n        console.log(\"User authenticated:\", response.data.user.name);\n      }\n    } catch (error) {\n      console.error(\"Authentication check failed:\", error);\n      // Clear invalid token\n      localStorage.removeItem('authToken');\n      sessionStorage.removeItem('authToken');\n      setUser(null);\n      setAuthToken(null);\n      setIsAuthenticated(false);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const login = async (email, password, rememberMe = false) => {\n    try {\n      const response = await axios.post(`${API_BASE_URL}/api/auth/login`, {\n        email,\n        password\n      });\n      if (response.data.success) {\n        const {\n          token,\n          user\n        } = response.data;\n\n        // Store token in appropriate storage\n        if (rememberMe) {\n          localStorage.setItem('authToken', token);\n        } else {\n          sessionStorage.setItem('authToken', token);\n        }\n        setUser(user);\n        setAuthToken(token);\n        setIsAuthenticated(true);\n        return {\n          success: true,\n          user\n        };\n      } else {\n        return {\n          success: false,\n          message: response.data.message\n        };\n      }\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error(\"Login error:\", error);\n      return {\n        success: false,\n        message: ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || \"Login failed\"\n      };\n    }\n  };\n  const register = async userData => {\n    try {\n      const response = await axios.post(`${API_BASE_URL}/api/auth/register`, userData);\n      if (response.data.success) {\n        return {\n          success: true,\n          message: response.data.message\n        };\n      } else {\n        return {\n          success: false,\n          message: response.data.message\n        };\n      }\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      console.error(\"Registration error:\", error);\n      return {\n        success: false,\n        message: ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || \"Registration failed\"\n      };\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('authToken');\n    sessionStorage.removeItem('authToken');\n    setUser(null);\n    setAuthToken(null);\n    setIsAuthenticated(false);\n  };\n\n  // Get axios config with authentication headers\n  const getAxiosConfig = () => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    if (authToken) {\n      config.headers['Authorization'] = `Bearer ${authToken}`;\n    }\n    return config;\n  };\n\n  // Get axios config for multipart form data (file uploads)\n  const getMultipartAxiosConfig = () => {\n    const config = {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    };\n    if (authToken) {\n      config.headers['Authorization'] = `Bearer ${authToken}`;\n    }\n    return config;\n  };\n\n  // Axios interceptor to handle token expiration\n  useEffect(() => {\n    const interceptor = axios.interceptors.response.use(response => response, error => {\n      var _error$response3;\n      if (((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.status) === 401) {\n        // Token expired or invalid\n        logout();\n        // Optionally redirect to login\n        window.location.href = '/login';\n      }\n      return Promise.reject(error);\n    });\n    return () => {\n      axios.interceptors.response.eject(interceptor);\n    };\n  }, []);\n  const value = {\n    user,\n    authToken,\n    isAuthenticated,\n    isLoading,\n    login,\n    register,\n    logout,\n    checkAuthentication,\n    getAxiosConfig,\n    getMultipartAxiosConfig,\n    API_BASE_URL\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 191,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"o03/VT2K/WPFIi6UVcOKfk+hHTI=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","axios","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","authToken","setAuthToken","isAuthenticated","setIsAuthenticated","isLoading","setIsLoading","API_BASE_URL","process","env","REACT_APP_API_URL","checkAuthentication","token","localStorage","getItem","sessionStorage","response","get","headers","data","success","console","log","name","error","removeItem","login","email","password","rememberMe","post","setItem","message","_error$response","_error$response$data","register","userData","_error$response2","_error$response2$data","logout","getAxiosConfig","config","getMultipartAxiosConfig","interceptor","interceptors","use","_error$response3","status","window","location","href","Promise","reject","eject","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Kunal Files/projects/janta_voice_new1/Janta_Voice_Final/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [authToken, setAuthToken] = useState(null);\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  // API Base URL\r\n  const API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000';\r\n\r\n  // Check authentication on app load\r\n  useEffect(() => {\r\n    checkAuthentication();\r\n  }, []);\r\n\r\n  const checkAuthentication = async () => {\r\n    try {\r\n      setIsLoading(true);\r\n      // Get token from localStorage or sessionStorage\r\n      const token = localStorage.getItem('authToken') || sessionStorage.getItem('authToken');\r\n      \r\n      if (!token) {\r\n        setIsLoading(false);\r\n        return;\r\n      }\r\n\r\n      // Verify token and get user profile\r\n      const response = await axios.get(`${API_BASE_URL}/api/user/profile`, {\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`,\r\n          'Content-Type': 'application/json'\r\n        }\r\n      });\r\n\r\n      if (response.data.success) {\r\n        setUser(response.data.user);\r\n        setAuthToken(token);\r\n        setIsAuthenticated(true);\r\n        console.log(\"User authenticated:\", response.data.user.name);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Authentication check failed:\", error);\r\n      // Clear invalid token\r\n      localStorage.removeItem('authToken');\r\n      sessionStorage.removeItem('authToken');\r\n      setUser(null);\r\n      setAuthToken(null);\r\n      setIsAuthenticated(false);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const login = async (email, password, rememberMe = false) => {\r\n    try {\r\n      const response = await axios.post(`${API_BASE_URL}/api/auth/login`, {\r\n        email,\r\n        password\r\n      });\r\n\r\n      if (response.data.success) {\r\n        const { token, user } = response.data;\r\n        \r\n        // Store token in appropriate storage\r\n        if (rememberMe) {\r\n          localStorage.setItem('authToken', token);\r\n        } else {\r\n          sessionStorage.setItem('authToken', token);\r\n        }\r\n\r\n        setUser(user);\r\n        setAuthToken(token);\r\n        setIsAuthenticated(true);\r\n        \r\n        return { success: true, user };\r\n      } else {\r\n        return { success: false, message: response.data.message };\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Login error:\", error);\r\n      return { \r\n        success: false, \r\n        message: error.response?.data?.message || \"Login failed\" \r\n      };\r\n    }\r\n  };\r\n\r\n  const register = async (userData) => {\r\n    try {\r\n      const response = await axios.post(`${API_BASE_URL}/api/auth/register`, userData);\r\n\r\n      if (response.data.success) {\r\n        return { success: true, message: response.data.message };\r\n      } else {\r\n        return { success: false, message: response.data.message };\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Registration error:\", error);\r\n      return { \r\n        success: false, \r\n        message: error.response?.data?.message || \"Registration failed\" \r\n      };\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem('authToken');\r\n    sessionStorage.removeItem('authToken');\r\n    setUser(null);\r\n    setAuthToken(null);\r\n    setIsAuthenticated(false);\r\n  };\r\n\r\n  // Get axios config with authentication headers\r\n  const getAxiosConfig = () => {\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    };\r\n\r\n    if (authToken) {\r\n      config.headers['Authorization'] = `Bearer ${authToken}`;\r\n    }\r\n\r\n    return config;\r\n  };\r\n\r\n  // Get axios config for multipart form data (file uploads)\r\n  const getMultipartAxiosConfig = () => {\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data'\r\n      }\r\n    };\r\n\r\n    if (authToken) {\r\n      config.headers['Authorization'] = `Bearer ${authToken}`;\r\n    }\r\n\r\n    return config;\r\n  };\r\n\r\n  // Axios interceptor to handle token expiration\r\n  useEffect(() => {\r\n    const interceptor = axios.interceptors.response.use(\r\n      (response) => response,\r\n      (error) => {\r\n        if (error.response?.status === 401) {\r\n          // Token expired or invalid\r\n          logout();\r\n          // Optionally redirect to login\r\n          window.location.href = '/login';\r\n        }\r\n        return Promise.reject(error);\r\n      }\r\n    );\r\n\r\n    return () => {\r\n      axios.interceptors.response.eject(interceptor);\r\n    };\r\n  }, []);\r\n\r\n  const value = {\r\n    user,\r\n    authToken,\r\n    isAuthenticated,\r\n    isLoading,\r\n    login,\r\n    register,\r\n    logout,\r\n    checkAuthentication,    \r\n    getAxiosConfig,\r\n    getMultipartAxiosConfig,\r\n    API_BASE_URL\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}