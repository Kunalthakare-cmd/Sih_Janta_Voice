{"ast":null,"code":"var _jsxFileName = \"D:\\\\Kunal Files\\\\projects\\\\janta_voice_new1\\\\Janta_Voice_Final\\\\frontend\\\\src\\\\pages\\\\ComplaintForm.jsx\",\n  _s = $RefreshSig$();\n// // import React, { useState } from \"react\";\n// // import axios from \"axios\";\n// // import PlacesAutocomplete, { geocodeByAddress, getLatLng } from \"react-places-autocomplete\";\n\n// // export default function ComplaintForm() {\n// //   const [formData, setFormData] = useState({\n// //     name: \"\",\n// //     complaint: \"\",\n// //     location: \"\",\n// //     urgency: \"normal\",\n// //     department: \"\",\n// //   });\n\n// //   const [photo, setPhoto] = useState(null);\n// //   const [complaintId, setComplaintId] = useState(null);\n// //   const [submitted, setSubmitted] = useState(false);\n\n// //   const handleChange = (e) => {\n// //     setFormData({ ...formData, [e.target.name]: e.target.value });\n// //   };\n\n// //   // location select handler\n// //   const handleSelect = async (address) => {\n// //     setFormData({ ...formData, location: address });\n// //     try {\n// //       const results = await geocodeByAddress(address);\n// //       const latLng = await getLatLng(results[0]);\n// //       console.log(\"Coordinates: \", latLng); // agar latitude/longitude bhi chahiye backend ke liye\n// //     } catch (error) {\n// //       console.error(\"Error fetching coordinates\", error);\n// //     }\n// //   };\n\n// //   const handlePhotoChange = (e) => {\n// //     if (e.target.files && e.target.files[0]) {\n// //       setPhoto(e.target.files[0]);\n// //     }\n// //   };\n\n// //   const handleSubmit = async (e) => {\n// //     e.preventDefault();\n\n// //     try {\n// //       const formDataToSend = new FormData();\n// //       Object.keys(formData).forEach((key) => {\n// //         formDataToSend.append(key, formData[key]);\n// //       });\n// //       if (photo) {\n// //         formDataToSend.append(\"photo\", photo);\n// //       }\n\n// //       const res = await axios.post(\"http://localhost:5000/api/complaint\", formDataToSend, {\n// //         headers: { \"Content-Type\": \"multipart/form-data\" },\n// //       });\n\n// //       setComplaintId(res.data.complaint.complaintId);\n// //       setSubmitted(true);\n\n// //       setFormData({\n// //         name: \"\",\n// //         complaint: \"\",\n// //         location: \"\",\n// //         urgency: \"normal\",\n// //         department: \"\",\n// //       });\n// //       setPhoto(null);\n// //     } catch (err) {\n// //       console.error(\"Submission failed:\", err.message);\n// //       alert(\"Complaint submission failed. Try again.\");\n// //     }\n// //   };\n\n// //   return (\n// //     <div className=\"max-w-xl mx-auto mt-10 p-6 bg-white rounded shadow\">\n// //       <h2 className=\"text-2xl font-semibold mb-4\">Complaint Form</h2>\n// //       <form onSubmit={handleSubmit} className=\"space-y-4\">\n// //         <input\n// //           name=\"name\"\n// //           value={formData.name}\n// //           onChange={handleChange}\n// //           placeholder=\"Your Name\"\n// //           required\n// //           className=\"w-full border px-3 py-2 rounded\"\n// //         />\n// //         <textarea\n// //           name=\"complaint\"\n// //           value={formData.complaint}\n// //           onChange={handleChange}\n// //           placeholder=\"Describe your complaint\"\n// //           required\n// //           className=\"w-full border px-3 py-2 rounded\"\n// //         />\n\n// //         {/* Location Autocomplete */}\n// //         <PlacesAutocomplete\n// //           value={formData.location}\n// //           onChange={(address) => setFormData({ ...formData, location: address })}\n// //           onSelect={handleSelect}\n// //           searchOptions={{ componentRestrictions: { country: [\"in\"] } }} // restrict to India\n// //         >\n// //           {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\n// //             <div>\n// //               <input\n// //                 {...getInputProps({\n// //                   placeholder: \"Search Location (India only)\",\n// //                   className: \"w-full border px-3 py-2 rounded\",\n// //                 })}\n// //               />\n// //               <div className=\"border rounded bg-white mt-1\">\n// //                 {loading && <div className=\"p-2 text-gray-500\">Loading...</div>}\n// //                 {suggestions.map((suggestion) => {\n// //                   const className = suggestion.active\n// //                     ? \"p-2 bg-blue-100 cursor-pointer\"\n// //                     : \"p-2 cursor-pointer\";\n// //                   return (\n// //                     <div\n// //                       {...getSuggestionItemProps(suggestion, { className })}\n// //                       key={suggestion.placeId}\n// //                     >\n// //                       {suggestion.description}\n// //                     </div>\n// //                   );\n// //                 })}\n// //               </div>\n// //             </div>\n// //           )}\n// //         </PlacesAutocomplete>\n\n// //         {/* Department */}\n// //         <select\n// //           name=\"department\"\n// //           value={formData.department}\n// //           onChange={handleChange}\n// //           className=\"w-full border px-3 py-2 rounded\"\n// //           required\n// //         >\n// //           <option value=\"\">Select a Department</option>\n// //           <option value=\"Public Works\">Public Works</option>\n// //           <option value=\"Water Supply\">Water Supply</option>\n// //           <option value=\"Sanitation\">Sanitation</option>\n// //           <option value=\"Electricity\">Electricity</option>\n// //           <option value=\"Other\">Other</option>\n// //         </select>\n\n// //         {/* Urgency */}\n// //         <select\n// //           name=\"urgency\"\n// //           value={formData.urgency}\n// //           onChange={handleChange}\n// //           className=\"w-full border px-3 py-2 rounded\"\n// //         >\n// //           <option value=\"normal\">Normal</option>\n// //           <option value=\"urgent\">Urgent</option>\n// //         </select>\n\n// //         {/* Photo Upload */}\n// //         <div>\n// //           <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n// //             Upload / Capture Photo\n// //           </label>\n// //           <input\n// //             type=\"file\"\n// //             accept=\"image/*\"\n// //             capture=\"environment\"\n// //             onChange={handlePhotoChange}\n// //             className=\"w-full border px-3 py-2 rounded\"\n// //           />\n// //           {photo && (\n// //             <p className=\"text-xs text-gray-500 mt-1\">Selected: {photo.name}</p>\n// //           )}\n// //         </div>\n\n// //         <button\n// //           type=\"submit\"\n// //           className=\"bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700\"\n// //         >\n// //           Submit\n// //         </button>\n// //       </form>\n\n// //       {submitted && (\n// //         <div className=\"mt-6 text-green-700 font-semibold\">\n// //           Complaint submitted successfully!<br />\n// //           Your Complaint ID: <span className=\"font-bold\">{complaintId}</span>\n// //         </div>\n// //       )}\n// //     </div>\n// //   );\n// // }\n// import React, { useState } from \"react\";\n// import axios from \"axios\";\n// import PlacesAutocomplete, {\n//   geocodeByAddress,\n//   getLatLng,\n// } from \"react-places-autocomplete\";\n\n// export default function ComplaintForm() {\n//   const [formData, setFormData] = useState({\n//     name: \"\",\n//     complaint: \"\",\n//     location: \"\",\n//     urgency: \"normal\",\n//     department: \"\",\n//   });\n\n//   const [photo, setPhoto] = useState(null);\n//   const [complaintId, setComplaintId] = useState(null);\n//   const [submitted, setSubmitted] = useState(false);\n//   const [isSubmitting, setIsSubmitting] = useState(false);\n//   const [liveCoords, setLiveCoords] = useState(null);\n\n//   const handleChange = (e) => {\n//     setFormData({ ...formData, [e.target.name]: e.target.value });\n//   };\n\n//   const handlePhotoChange = (e) => {\n//     if (e.target.files && e.target.files[0]) {\n//       setPhoto(e.target.files[0]);\n//     }\n//   };\n\n//   // Google Places Autocomplete handler\n//   const handleSelect = async (address) => {\n//     setFormData({ ...formData, location: address });\n//     setLiveCoords(null); // Clear live coords if user selects an address\n//     try {\n//       const results = await geocodeByAddress(address);\n//       const latLng = await getLatLng(results[0]);\n//       console.log(\"Selected Location Coordinates: \", latLng);\n//       // You can store these coords in state if your backend needs them\n//     } catch (error) {\n//       console.error(\"Error fetching coordinates\", error);\n//     }\n//   };\n\n//   // Live location button handler\n//   const handleLiveLocation = () => {\n//     if (!navigator.geolocation) {\n//       alert(\"Geolocation is not supported by your browser.\");\n//       return;\n//     }\n\n//     setIsSubmitting(true);\n//     navigator.geolocation.getCurrentPosition(\n//       (position) => {\n//         const { latitude, longitude } = position.coords;\n//         setLiveCoords({ latitude, longitude });\n//         setFormData({ ...formData, location: \"Live Location Captured\" });\n//         alert(\"Live location successfully captured!\");\n//         setIsSubmitting(false);\n//       },\n//       (error) => {\n//         console.warn(\"Geolocation error:\", error);\n//         alert(\"⚠ Location not available. Please enable GPS for accurate location.\");\n//         setLiveCoords(null);\n//         setIsSubmitting(false);\n//       },\n//       { enableHighAccuracy: true, timeout: 15000, maximumAge: 0 }\n//     );\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     setIsSubmitting(true);\n\n//     try {\n//       const formDataToSend = new FormData();\n//       Object.keys(formData).forEach((key) => {\n//         formDataToSend.append(key, formData[key]);\n//       });\n\n//       if (photo) {\n//         formDataToSend.append(\"photo\", photo);\n//       }\n\n//       // Logic to determine which location to send\n//       let latLng = null;\n//       if (liveCoords) {\n//         // Option 1: Live location is captured\n//         latLng = liveCoords;\n//       } else if (formData.location) {\n//         // Option 2: User typed and selected a location\n//         const results = await geocodeByAddress(formData.location);\n//         latLng = await getLatLng(results[0]);\n//       }\n\n//       if (latLng) {\n//         formDataToSend.append(\"latitude\", latLng.latitude);\n//         formDataToSend.append(\"longitude\", latLng.longitude);\n//       }\n\n//       const res = await axios.post(\"http://localhost:5000/api/complaint\", formDataToSend, {\n//         headers: { \"Content-Type\": \"multipart/form-data\" },\n//       });\n\n//       setComplaintId(res.data.complaint.complaintId);\n//       setSubmitted(true);\n//       alert(`Complaint submitted successfully! Your Complaint ID is: ${res.data.complaint.complaintId}`);\n\n//       // Reset form\n//       setFormData({\n//         name: \"\",\n//         complaint: \"\",\n//         location: \"\",\n//         urgency: \"normal\",\n//         department: \"\",\n//       });\n//       setPhoto(null);\n//       setLiveCoords(null);\n//     } catch (err) {\n//       console.error(\"Submission failed:\", err.message);\n//       alert(\"Complaint submission failed. Please try again.\");\n//     } finally {\n//       setIsSubmitting(false);\n//     }\n//   };\n\n//   return (\n//     <div className=\"max-w-xl mx-auto mt-10 p-6 bg-white rounded shadow\">\n//       <h2 className=\"text-2xl font-semibold mb-4\">Complaint Form</h2>\n//       <form onSubmit={handleSubmit} className=\"space-y-4\">\n//         {/* Input fields */}\n//         <input\n//           name=\"name\"\n//           value={formData.name}\n//           onChange={handleChange}\n//           placeholder=\"Your Name\"\n//           required\n//           className=\"w-full border px-3 py-2 rounded\"\n//         />\n//         <textarea\n//           name=\"complaint\"\n//           value={formData.complaint}\n//           onChange={handleChange}\n//           placeholder=\"Describe your complaint\"\n//           required\n//           className=\"w-full border px-3 py-2 rounded\"\n//         />\n\n//         {/* Location Section */}\n//         <div>\n//           <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n//             Location\n//           </label>\n//           <div className=\"flex gap-2\">\n//             <PlacesAutocomplete\n//               value={formData.location}\n//               onChange={(address) => {\n//                 setFormData({ ...formData, location: address });\n//                 setLiveCoords(null);\n//               }}\n//               onSelect={handleSelect}\n//               searchOptions={{ componentRestrictions: { country: [\"in\"] } }}\n//             >\n//               {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\n//                 <div className=\"w-full\">\n//                   <input\n//                     {...getInputProps({\n//                       placeholder: \"Search Location...\",\n//                       className: \"w-full border px-3 py-2 rounded\",\n//                     })}\n//                   />\n//                   <div className=\"border rounded bg-white mt-1\">\n//                     {loading && <div className=\"p-2 text-gray-500\">Loading...</div>}\n//                     {suggestions.map((suggestion) => {\n//                       const className = suggestion.active\n//                         ? \"p-2 bg-blue-100 cursor-pointer\"\n//                         : \"p-2 cursor-pointer\";\n//                       return (\n//                         <div\n//                           {...getSuggestionItemProps(suggestion, { className })}\n//                           key={suggestion.placeId}\n//                         >\n//                           {suggestion.description}\n//                         </div>\n//                       );\n//                     })}\n//                   </div>\n//                 </div>\n//               )}\n//             </PlacesAutocomplete>\n//             <button\n//               type=\"button\"\n//               onClick={handleLiveLocation}\n//               disabled={isSubmitting}\n//               className={`px-4 py-2 rounded text-sm text-white ${\n//                 isSubmitting ? \"bg-gray-400\" : \"bg-blue-600\"\n//               }`}\n//             >\n//               Live\n//             </button>\n//           </div>\n//           {liveCoords && (\n//             <p className=\"text-xs text-green-600 mt-1\">\n//               Live Location: {liveCoords.latitude.toFixed(4)}, {liveCoords.longitude.toFixed(4)}\n//             </p>\n//           )}\n//         </div>\n\n//         {/* Other form elements */}\n//         <select\n//           name=\"department\"\n//           value={formData.department}\n//           onChange={handleChange}\n//           className=\"w-full border px-3 py-2 rounded\"\n//           required\n//         >\n//           <option value=\"\">Select a Department</option>\n//           <option value=\"Public Works\">Public Works</option>\n//           <option value=\"Water Supply\">Water Supply</option>\n//           <option value=\"Sanitation\">Sanitation</option>\n//           <option value=\"Electricity\">Electricity</option>\n//           <option value=\"Other\">Other</option>\n//         </select>\n\n//         <select\n//           name=\"urgency\"\n//           value={formData.urgency}\n//           onChange={handleChange}\n//           className=\"w-full border px-3 py-2 rounded\"\n//         >\n//           <option value=\"normal\">Normal</option>\n//           <option value=\"urgent\">Urgent</option>\n//         </select>\n\n//         <div>\n//           <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n//             Upload / Capture Photo\n//           </label>\n//           <input\n//             type=\"file\"\n//             accept=\"image/*\"\n//             capture=\"environment\"\n//             onChange={handlePhotoChange}\n//             className=\"w-full border px-3 py-2 rounded\"\n//           />\n//           {photo && (\n//             <p className=\"text-xs text-gray-500 mt-1\">Selected: {photo.name}</p>\n//           )}\n//         </div>\n\n//         <button\n//           type=\"submit\"\n//           disabled={isSubmitting}\n//           className={`w-full ${\n//             isSubmitting ? \"bg-gray-400\" : \"bg-blue-600\"\n//           } text-white px-4 py-2 rounded hover:bg-blue-700`}\n//         >\n//           {isSubmitting ? \"Submitting...\" : \"Submit Complaint\"}\n//         </button>\n//       </form>\n\n//       {submitted && (\n//         <div className=\"mt-6 text-green-700 font-semibold\">\n//           Complaint submitted successfully!<br />\n//           Your Complaint ID: <span className=\"font-bold\">{complaintId}</span>\n//         </div>\n//       )}\n//     </div>\n//   );\n// }\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ComplaintForm() {\n  _s();\n  const [formData, setFormData] = useState({\n    title: \"\",\n    description: \"\",\n    image: null\n  });\n  const [preview, setPreview] = useState(null);\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleFileChange = e => {\n    const file = e.target.files[0];\n    if (file) {\n      setFormData({\n        ...formData,\n        image: file\n      });\n      setPreview(URL.createObjectURL(file));\n    }\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    // 🚀 send formData (including image) to backend\n    console.log(\"Complaint Submitted:\", formData);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"bg-white/80 backdrop-blur-sm p-8 rounded-2xl shadow-lg space-y-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold text-gray-900 mb-4\",\n      children: \"File a Complaint / \\u0936\\u093F\\u0915\\u093E\\u092F\\u0924 \\u0926\\u0930\\u094D\\u091C \\u0915\\u0930\\u0947\\u0902\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 505,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"block text-gray-700 font-medium mb-2\",\n        children: \"Complaint Title / \\u0936\\u0940\\u0930\\u094D\\u0937\\u0915\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 511,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"title\",\n        value: formData.title,\n        onChange: handleChange,\n        className: \"w-full p-3 border rounded-xl focus:ring-2 focus:ring-blue-500\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 514,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 510,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"block text-gray-700 font-medium mb-2\",\n        children: \"Description / \\u0935\\u093F\\u0935\\u0930\\u0923\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 526,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        name: \"description\",\n        value: formData.description,\n        onChange: handleChange,\n        className: \"w-full p-3 border rounded-xl focus:ring-2 focus:ring-blue-500\",\n        rows: \"4\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 529,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 525,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"block text-gray-700 font-medium mb-2\",\n        children: \"Upload Photo / \\u092B\\u094B\\u091F\\u094B \\u091C\\u094B\\u0921\\u093C\\u0947\\u0902\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 541,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \"image/*\",\n        capture: \"environment\" // rear camera on mobile\n        ,\n        onChange: handleFileChange,\n        className: \"block w-full text-sm text-gray-500\\r file:mr-4 file:py-2 file:px-4\\r file:rounded-full file:border-0\\r file:text-sm file:font-semibold\\r file:bg-blue-50 file:text-blue-700\\r hover:file:bg-blue-100\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 544,\n        columnNumber: 9\n      }, this), preview && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: preview,\n        alt: \"Preview\",\n        className: \"mt-4 w-64 h-64 object-cover rounded-xl shadow-md\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 557,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 540,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"w-full py-3 bg-blue-600 text-white font-semibold rounded-xl hover:bg-blue-700 transition\",\n      children: \"Submit Complaint / \\u0938\\u092C\\u092E\\u093F\\u091F \\u0915\\u0930\\u0947\\u0902\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 566,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 501,\n    columnNumber: 5\n  }, this);\n}\n_s(ComplaintForm, \"ZHZrrJxdGQnA8W7s91w1pDEsJuM=\");\n_c = ComplaintForm;\nvar _c;\n$RefreshReg$(_c, \"ComplaintForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ComplaintForm","_s","formData","setFormData","title","description","image","preview","setPreview","handleChange","e","target","name","value","handleFileChange","file","files","URL","createObjectURL","handleSubmit","preventDefault","console","log","onSubmit","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","required","rows","accept","capture","src","alt","_c","$RefreshReg$"],"sources":["D:/Kunal Files/projects/janta_voice_new1/Janta_Voice_Final/frontend/src/pages/ComplaintForm.jsx"],"sourcesContent":["// // import React, { useState } from \"react\";\r\n// // import axios from \"axios\";\r\n// // import PlacesAutocomplete, { geocodeByAddress, getLatLng } from \"react-places-autocomplete\";\r\n\r\n// // export default function ComplaintForm() {\r\n// //   const [formData, setFormData] = useState({\r\n// //     name: \"\",\r\n// //     complaint: \"\",\r\n// //     location: \"\",\r\n// //     urgency: \"normal\",\r\n// //     department: \"\",\r\n// //   });\r\n\r\n// //   const [photo, setPhoto] = useState(null);\r\n// //   const [complaintId, setComplaintId] = useState(null);\r\n// //   const [submitted, setSubmitted] = useState(false);\r\n\r\n// //   const handleChange = (e) => {\r\n// //     setFormData({ ...formData, [e.target.name]: e.target.value });\r\n// //   };\r\n\r\n// //   // location select handler\r\n// //   const handleSelect = async (address) => {\r\n// //     setFormData({ ...formData, location: address });\r\n// //     try {\r\n// //       const results = await geocodeByAddress(address);\r\n// //       const latLng = await getLatLng(results[0]);\r\n// //       console.log(\"Coordinates: \", latLng); // agar latitude/longitude bhi chahiye backend ke liye\r\n// //     } catch (error) {\r\n// //       console.error(\"Error fetching coordinates\", error);\r\n// //     }\r\n// //   };\r\n\r\n// //   const handlePhotoChange = (e) => {\r\n// //     if (e.target.files && e.target.files[0]) {\r\n// //       setPhoto(e.target.files[0]);\r\n// //     }\r\n// //   };\r\n\r\n// //   const handleSubmit = async (e) => {\r\n// //     e.preventDefault();\r\n\r\n// //     try {\r\n// //       const formDataToSend = new FormData();\r\n// //       Object.keys(formData).forEach((key) => {\r\n// //         formDataToSend.append(key, formData[key]);\r\n// //       });\r\n// //       if (photo) {\r\n// //         formDataToSend.append(\"photo\", photo);\r\n// //       }\r\n\r\n// //       const res = await axios.post(\"http://localhost:5000/api/complaint\", formDataToSend, {\r\n// //         headers: { \"Content-Type\": \"multipart/form-data\" },\r\n// //       });\r\n\r\n// //       setComplaintId(res.data.complaint.complaintId);\r\n// //       setSubmitted(true);\r\n\r\n// //       setFormData({\r\n// //         name: \"\",\r\n// //         complaint: \"\",\r\n// //         location: \"\",\r\n// //         urgency: \"normal\",\r\n// //         department: \"\",\r\n// //       });\r\n// //       setPhoto(null);\r\n// //     } catch (err) {\r\n// //       console.error(\"Submission failed:\", err.message);\r\n// //       alert(\"Complaint submission failed. Try again.\");\r\n// //     }\r\n// //   };\r\n\r\n// //   return (\r\n// //     <div className=\"max-w-xl mx-auto mt-10 p-6 bg-white rounded shadow\">\r\n// //       <h2 className=\"text-2xl font-semibold mb-4\">Complaint Form</h2>\r\n// //       <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n// //         <input\r\n// //           name=\"name\"\r\n// //           value={formData.name}\r\n// //           onChange={handleChange}\r\n// //           placeholder=\"Your Name\"\r\n// //           required\r\n// //           className=\"w-full border px-3 py-2 rounded\"\r\n// //         />\r\n// //         <textarea\r\n// //           name=\"complaint\"\r\n// //           value={formData.complaint}\r\n// //           onChange={handleChange}\r\n// //           placeholder=\"Describe your complaint\"\r\n// //           required\r\n// //           className=\"w-full border px-3 py-2 rounded\"\r\n// //         />\r\n\r\n// //         {/* Location Autocomplete */}\r\n// //         <PlacesAutocomplete\r\n// //           value={formData.location}\r\n// //           onChange={(address) => setFormData({ ...formData, location: address })}\r\n// //           onSelect={handleSelect}\r\n// //           searchOptions={{ componentRestrictions: { country: [\"in\"] } }} // restrict to India\r\n// //         >\r\n// //           {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\r\n// //             <div>\r\n// //               <input\r\n// //                 {...getInputProps({\r\n// //                   placeholder: \"Search Location (India only)\",\r\n// //                   className: \"w-full border px-3 py-2 rounded\",\r\n// //                 })}\r\n// //               />\r\n// //               <div className=\"border rounded bg-white mt-1\">\r\n// //                 {loading && <div className=\"p-2 text-gray-500\">Loading...</div>}\r\n// //                 {suggestions.map((suggestion) => {\r\n// //                   const className = suggestion.active\r\n// //                     ? \"p-2 bg-blue-100 cursor-pointer\"\r\n// //                     : \"p-2 cursor-pointer\";\r\n// //                   return (\r\n// //                     <div\r\n// //                       {...getSuggestionItemProps(suggestion, { className })}\r\n// //                       key={suggestion.placeId}\r\n// //                     >\r\n// //                       {suggestion.description}\r\n// //                     </div>\r\n// //                   );\r\n// //                 })}\r\n// //               </div>\r\n// //             </div>\r\n// //           )}\r\n// //         </PlacesAutocomplete>\r\n\r\n// //         {/* Department */}\r\n// //         <select\r\n// //           name=\"department\"\r\n// //           value={formData.department}\r\n// //           onChange={handleChange}\r\n// //           className=\"w-full border px-3 py-2 rounded\"\r\n// //           required\r\n// //         >\r\n// //           <option value=\"\">Select a Department</option>\r\n// //           <option value=\"Public Works\">Public Works</option>\r\n// //           <option value=\"Water Supply\">Water Supply</option>\r\n// //           <option value=\"Sanitation\">Sanitation</option>\r\n// //           <option value=\"Electricity\">Electricity</option>\r\n// //           <option value=\"Other\">Other</option>\r\n// //         </select>\r\n\r\n// //         {/* Urgency */}\r\n// //         <select\r\n// //           name=\"urgency\"\r\n// //           value={formData.urgency}\r\n// //           onChange={handleChange}\r\n// //           className=\"w-full border px-3 py-2 rounded\"\r\n// //         >\r\n// //           <option value=\"normal\">Normal</option>\r\n// //           <option value=\"urgent\">Urgent</option>\r\n// //         </select>\r\n\r\n// //         {/* Photo Upload */}\r\n// //         <div>\r\n// //           <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n// //             Upload / Capture Photo\r\n// //           </label>\r\n// //           <input\r\n// //             type=\"file\"\r\n// //             accept=\"image/*\"\r\n// //             capture=\"environment\"\r\n// //             onChange={handlePhotoChange}\r\n// //             className=\"w-full border px-3 py-2 rounded\"\r\n// //           />\r\n// //           {photo && (\r\n// //             <p className=\"text-xs text-gray-500 mt-1\">Selected: {photo.name}</p>\r\n// //           )}\r\n// //         </div>\r\n\r\n// //         <button\r\n// //           type=\"submit\"\r\n// //           className=\"bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700\"\r\n// //         >\r\n// //           Submit\r\n// //         </button>\r\n// //       </form>\r\n\r\n// //       {submitted && (\r\n// //         <div className=\"mt-6 text-green-700 font-semibold\">\r\n// //           Complaint submitted successfully!<br />\r\n// //           Your Complaint ID: <span className=\"font-bold\">{complaintId}</span>\r\n// //         </div>\r\n// //       )}\r\n// //     </div>\r\n// //   );\r\n// // }\r\n// import React, { useState } from \"react\";\r\n// import axios from \"axios\";\r\n// import PlacesAutocomplete, {\r\n//   geocodeByAddress,\r\n//   getLatLng,\r\n// } from \"react-places-autocomplete\";\r\n\r\n// export default function ComplaintForm() {\r\n//   const [formData, setFormData] = useState({\r\n//     name: \"\",\r\n//     complaint: \"\",\r\n//     location: \"\",\r\n//     urgency: \"normal\",\r\n//     department: \"\",\r\n//   });\r\n\r\n//   const [photo, setPhoto] = useState(null);\r\n//   const [complaintId, setComplaintId] = useState(null);\r\n//   const [submitted, setSubmitted] = useState(false);\r\n//   const [isSubmitting, setIsSubmitting] = useState(false);\r\n//   const [liveCoords, setLiveCoords] = useState(null);\r\n\r\n//   const handleChange = (e) => {\r\n//     setFormData({ ...formData, [e.target.name]: e.target.value });\r\n//   };\r\n\r\n//   const handlePhotoChange = (e) => {\r\n//     if (e.target.files && e.target.files[0]) {\r\n//       setPhoto(e.target.files[0]);\r\n//     }\r\n//   };\r\n\r\n//   // Google Places Autocomplete handler\r\n//   const handleSelect = async (address) => {\r\n//     setFormData({ ...formData, location: address });\r\n//     setLiveCoords(null); // Clear live coords if user selects an address\r\n//     try {\r\n//       const results = await geocodeByAddress(address);\r\n//       const latLng = await getLatLng(results[0]);\r\n//       console.log(\"Selected Location Coordinates: \", latLng);\r\n//       // You can store these coords in state if your backend needs them\r\n//     } catch (error) {\r\n//       console.error(\"Error fetching coordinates\", error);\r\n//     }\r\n//   };\r\n\r\n//   // Live location button handler\r\n//   const handleLiveLocation = () => {\r\n//     if (!navigator.geolocation) {\r\n//       alert(\"Geolocation is not supported by your browser.\");\r\n//       return;\r\n//     }\r\n\r\n//     setIsSubmitting(true);\r\n//     navigator.geolocation.getCurrentPosition(\r\n//       (position) => {\r\n//         const { latitude, longitude } = position.coords;\r\n//         setLiveCoords({ latitude, longitude });\r\n//         setFormData({ ...formData, location: \"Live Location Captured\" });\r\n//         alert(\"Live location successfully captured!\");\r\n//         setIsSubmitting(false);\r\n//       },\r\n//       (error) => {\r\n//         console.warn(\"Geolocation error:\", error);\r\n//         alert(\"⚠ Location not available. Please enable GPS for accurate location.\");\r\n//         setLiveCoords(null);\r\n//         setIsSubmitting(false);\r\n//       },\r\n//       { enableHighAccuracy: true, timeout: 15000, maximumAge: 0 }\r\n//     );\r\n//   };\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     setIsSubmitting(true);\r\n\r\n//     try {\r\n//       const formDataToSend = new FormData();\r\n//       Object.keys(formData).forEach((key) => {\r\n//         formDataToSend.append(key, formData[key]);\r\n//       });\r\n\r\n//       if (photo) {\r\n//         formDataToSend.append(\"photo\", photo);\r\n//       }\r\n\r\n//       // Logic to determine which location to send\r\n//       let latLng = null;\r\n//       if (liveCoords) {\r\n//         // Option 1: Live location is captured\r\n//         latLng = liveCoords;\r\n//       } else if (formData.location) {\r\n//         // Option 2: User typed and selected a location\r\n//         const results = await geocodeByAddress(formData.location);\r\n//         latLng = await getLatLng(results[0]);\r\n//       }\r\n\r\n//       if (latLng) {\r\n//         formDataToSend.append(\"latitude\", latLng.latitude);\r\n//         formDataToSend.append(\"longitude\", latLng.longitude);\r\n//       }\r\n\r\n//       const res = await axios.post(\"http://localhost:5000/api/complaint\", formDataToSend, {\r\n//         headers: { \"Content-Type\": \"multipart/form-data\" },\r\n//       });\r\n\r\n//       setComplaintId(res.data.complaint.complaintId);\r\n//       setSubmitted(true);\r\n//       alert(`Complaint submitted successfully! Your Complaint ID is: ${res.data.complaint.complaintId}`);\r\n\r\n//       // Reset form\r\n//       setFormData({\r\n//         name: \"\",\r\n//         complaint: \"\",\r\n//         location: \"\",\r\n//         urgency: \"normal\",\r\n//         department: \"\",\r\n//       });\r\n//       setPhoto(null);\r\n//       setLiveCoords(null);\r\n//     } catch (err) {\r\n//       console.error(\"Submission failed:\", err.message);\r\n//       alert(\"Complaint submission failed. Please try again.\");\r\n//     } finally {\r\n//       setIsSubmitting(false);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"max-w-xl mx-auto mt-10 p-6 bg-white rounded shadow\">\r\n//       <h2 className=\"text-2xl font-semibold mb-4\">Complaint Form</h2>\r\n//       <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n//         {/* Input fields */}\r\n//         <input\r\n//           name=\"name\"\r\n//           value={formData.name}\r\n//           onChange={handleChange}\r\n//           placeholder=\"Your Name\"\r\n//           required\r\n//           className=\"w-full border px-3 py-2 rounded\"\r\n//         />\r\n//         <textarea\r\n//           name=\"complaint\"\r\n//           value={formData.complaint}\r\n//           onChange={handleChange}\r\n//           placeholder=\"Describe your complaint\"\r\n//           required\r\n//           className=\"w-full border px-3 py-2 rounded\"\r\n//         />\r\n\r\n//         {/* Location Section */}\r\n//         <div>\r\n//           <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n//             Location\r\n//           </label>\r\n//           <div className=\"flex gap-2\">\r\n//             <PlacesAutocomplete\r\n//               value={formData.location}\r\n//               onChange={(address) => {\r\n//                 setFormData({ ...formData, location: address });\r\n//                 setLiveCoords(null);\r\n//               }}\r\n//               onSelect={handleSelect}\r\n//               searchOptions={{ componentRestrictions: { country: [\"in\"] } }}\r\n//             >\r\n//               {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\r\n//                 <div className=\"w-full\">\r\n//                   <input\r\n//                     {...getInputProps({\r\n//                       placeholder: \"Search Location...\",\r\n//                       className: \"w-full border px-3 py-2 rounded\",\r\n//                     })}\r\n//                   />\r\n//                   <div className=\"border rounded bg-white mt-1\">\r\n//                     {loading && <div className=\"p-2 text-gray-500\">Loading...</div>}\r\n//                     {suggestions.map((suggestion) => {\r\n//                       const className = suggestion.active\r\n//                         ? \"p-2 bg-blue-100 cursor-pointer\"\r\n//                         : \"p-2 cursor-pointer\";\r\n//                       return (\r\n//                         <div\r\n//                           {...getSuggestionItemProps(suggestion, { className })}\r\n//                           key={suggestion.placeId}\r\n//                         >\r\n//                           {suggestion.description}\r\n//                         </div>\r\n//                       );\r\n//                     })}\r\n//                   </div>\r\n//                 </div>\r\n//               )}\r\n//             </PlacesAutocomplete>\r\n//             <button\r\n//               type=\"button\"\r\n//               onClick={handleLiveLocation}\r\n//               disabled={isSubmitting}\r\n//               className={`px-4 py-2 rounded text-sm text-white ${\r\n//                 isSubmitting ? \"bg-gray-400\" : \"bg-blue-600\"\r\n//               }`}\r\n//             >\r\n//               Live\r\n//             </button>\r\n//           </div>\r\n//           {liveCoords && (\r\n//             <p className=\"text-xs text-green-600 mt-1\">\r\n//               Live Location: {liveCoords.latitude.toFixed(4)}, {liveCoords.longitude.toFixed(4)}\r\n//             </p>\r\n//           )}\r\n//         </div>\r\n\r\n//         {/* Other form elements */}\r\n//         <select\r\n//           name=\"department\"\r\n//           value={formData.department}\r\n//           onChange={handleChange}\r\n//           className=\"w-full border px-3 py-2 rounded\"\r\n//           required\r\n//         >\r\n//           <option value=\"\">Select a Department</option>\r\n//           <option value=\"Public Works\">Public Works</option>\r\n//           <option value=\"Water Supply\">Water Supply</option>\r\n//           <option value=\"Sanitation\">Sanitation</option>\r\n//           <option value=\"Electricity\">Electricity</option>\r\n//           <option value=\"Other\">Other</option>\r\n//         </select>\r\n\r\n//         <select\r\n//           name=\"urgency\"\r\n//           value={formData.urgency}\r\n//           onChange={handleChange}\r\n//           className=\"w-full border px-3 py-2 rounded\"\r\n//         >\r\n//           <option value=\"normal\">Normal</option>\r\n//           <option value=\"urgent\">Urgent</option>\r\n//         </select>\r\n\r\n//         <div>\r\n//           <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n//             Upload / Capture Photo\r\n//           </label>\r\n//           <input\r\n//             type=\"file\"\r\n//             accept=\"image/*\"\r\n//             capture=\"environment\"\r\n//             onChange={handlePhotoChange}\r\n//             className=\"w-full border px-3 py-2 rounded\"\r\n//           />\r\n//           {photo && (\r\n//             <p className=\"text-xs text-gray-500 mt-1\">Selected: {photo.name}</p>\r\n//           )}\r\n//         </div>\r\n\r\n//         <button\r\n//           type=\"submit\"\r\n//           disabled={isSubmitting}\r\n//           className={`w-full ${\r\n//             isSubmitting ? \"bg-gray-400\" : \"bg-blue-600\"\r\n//           } text-white px-4 py-2 rounded hover:bg-blue-700`}\r\n//         >\r\n//           {isSubmitting ? \"Submitting...\" : \"Submit Complaint\"}\r\n//         </button>\r\n//       </form>\r\n\r\n//       {submitted && (\r\n//         <div className=\"mt-6 text-green-700 font-semibold\">\r\n//           Complaint submitted successfully!<br />\r\n//           Your Complaint ID: <span className=\"font-bold\">{complaintId}</span>\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nimport React, { useState } from \"react\";\r\n\r\nexport default function ComplaintForm() {\r\n  const [formData, setFormData] = useState({\r\n    title: \"\",\r\n    description: \"\",\r\n    image: null,\r\n  });\r\n  const [preview, setPreview] = useState(null);\r\n\r\n  const handleChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleFileChange = (e) => {\r\n    const file = e.target.files[0];\r\n    if (file) {\r\n      setFormData({ ...formData, image: file });\r\n      setPreview(URL.createObjectURL(file));\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // 🚀 send formData (including image) to backend\r\n    console.log(\"Complaint Submitted:\", formData);\r\n  };\r\n\r\n  return (\r\n    <form\r\n      onSubmit={handleSubmit}\r\n      className=\"bg-white/80 backdrop-blur-sm p-8 rounded-2xl shadow-lg space-y-6\"\r\n    >\r\n      <h2 className=\"text-2xl font-bold text-gray-900 mb-4\">\r\n        File a Complaint / शिकायत दर्ज करें\r\n      </h2>\r\n\r\n      {/* Title */}\r\n      <div>\r\n        <label className=\"block text-gray-700 font-medium mb-2\">\r\n          Complaint Title / शीर्षक\r\n        </label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"title\"\r\n          value={formData.title}\r\n          onChange={handleChange}\r\n          className=\"w-full p-3 border rounded-xl focus:ring-2 focus:ring-blue-500\"\r\n          required\r\n        />\r\n      </div>\r\n\r\n      {/* Description */}\r\n      <div>\r\n        <label className=\"block text-gray-700 font-medium mb-2\">\r\n          Description / विवरण\r\n        </label>\r\n        <textarea\r\n          name=\"description\"\r\n          value={formData.description}\r\n          onChange={handleChange}\r\n          className=\"w-full p-3 border rounded-xl focus:ring-2 focus:ring-blue-500\"\r\n          rows=\"4\"\r\n          required\r\n        ></textarea>\r\n      </div>\r\n\r\n      {/* Upload or Camera */}\r\n      <div>\r\n        <label className=\"block text-gray-700 font-medium mb-2\">\r\n          Upload Photo / फोटो जोड़ें\r\n        </label>\r\n        <input\r\n          type=\"file\"\r\n          accept=\"image/*\"\r\n          capture=\"environment\" // rear camera on mobile\r\n          onChange={handleFileChange}\r\n          className=\"block w-full text-sm text-gray-500\r\n                     file:mr-4 file:py-2 file:px-4\r\n                     file:rounded-full file:border-0\r\n                     file:text-sm file:font-semibold\r\n                     file:bg-blue-50 file:text-blue-700\r\n                     hover:file:bg-blue-100\"\r\n        />\r\n        {preview && (\r\n          <img\r\n            src={preview}\r\n            alt=\"Preview\"\r\n            className=\"mt-4 w-64 h-64 object-cover rounded-xl shadow-md\"\r\n          />\r\n        )}\r\n      </div>\r\n\r\n      {/* Submit */}\r\n      <button\r\n        type=\"submit\"\r\n        className=\"w-full py-3 bg-blue-600 text-white font-semibold rounded-xl hover:bg-blue-700 transition\"\r\n      >\r\n        Submit Complaint / सबमिट करें\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}