{"ast":null,"code":"var _jsxFileName = \"D:\\\\Kunal Files\\\\projects\\\\janta_voice_new1\\\\Janta_Voice_Final\\\\frontend\\\\src\\\\pages\\\\VoiceComplaint.jsx\",\n  _s = $RefreshSig$();\n// // import React, { useState } from \"react\";\n// // import axios from \"axios\";\n\n// // export default function VoiceComplaint() {\n// //   const [logs, setLogs] = useState([]);\n// //   const [loading, setLoading] = useState(false);\n// //   const [complaintId, setComplaintId] = useState(null);\n// //   const [submitted, setSubmitted] = useState(false);\n\n// //   const appendLog = (line) => {\n// //     setLogs((prev) => [...prev, line]);\n// //   };\n\n// //   const handleVoiceComplaint = async () => {\n// //     setLoading(true);\n// //     setLogs([\"üéôÔ∏è Voice complaint started...\"]);\n// //     setSubmitted(false);\n// //     setComplaintId(null);\n\n// //     try {\n// //       // 1. Trigger the Python voice bot and get structured data\n// //       const voiceRes = await axios.get(\"http://localhost:5000/api/\");\n// //       if (voiceRes.data.status !== \"success\") {\n// //         appendLog(\"‚ùå Voice bot error: \" + voiceRes.data.message);\n// //         return;\n// //       }\n\n// //       const complaintData = voiceRes.data.data;\n// //       appendLog(\"‚úÖ Voice bot finished. Data:\");\n// //       appendLog(JSON.stringify(complaintData, null, 2));\n\n// //       // 2. Send that same data to the complaints endpoint\n// //       const formRes = await axios.post(\n// //         \"http://localhost:5000/api/complaint\",\n// //         {\n// //           name: complaintData[\"‡§∂‡§ø‡§ï‡§æ‡§Ø‡§§‡§ï‡§∞‡•ç‡§§‡§æ ‡§ï‡§æ ‡§®‡§æ‡§Æ\"] || complaintData.name,\n// //           complaint: complaintData[\"‡§∂‡§ø‡§ï‡§æ‡§Ø‡§§\"] || complaintData.complaint,\n// //           location: complaintData[\"‡§∏‡•ç‡§•‡§æ‡§®\"] || complaintData.location,\n// //           // map any other fields if needed\n// //         }\n// //       );\n\n// //       // 3. Capture and display the Complaint ID\n// //       const newId = formRes.data.complaintId || formRes.data.complaintId;\n// //       setComplaintId(newId);\n// //       setSubmitted(true);\n// //       appendLog(`üì¨ Complaint submitted. ID: ${newId}`);\n// //     } catch (err) {\n// //       appendLog(\"‚ùå Error: \" + err.message);\n// //     } finally {\n// //       setLoading(false);\n// //     }\n// //   };\n\n// //   return (\n// //     <div className=\"max-w-xl mx-auto mt-10 p-6 bg-white rounded shadow\">\n// //       <h2 className=\"text-2xl font-semibold mb-4\">Voice Complaint</h2>\n// //       <button\n// //         onClick={handleVoiceComplaint}\n// //         disabled={loading}\n// //         className=\"bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700 disabled:opacity-50\"\n// //       >\n// //         {loading ? \"Processing...\" : \"Start Voice Complaint\"}\n// //       </button>\n\n// //       <div className=\"mt-6 bg-gray-900 text-green-200 p-4 rounded font-mono h-48 overflow-y-scroll\">\n// //         {logs.map((line, i) => (\n// //           <div key={i}>{line}</div>\n// //         ))}\n// //       </div>\n\n// //       {submitted && (\n// //         <div className=\"mt-6 text-green-700 font-semibold\">\n// //           Complaint submitted successfully!<br />\n// //           Your Complaint ID: <span className=\"font-bold\">{complaintId}</span>\n// //         </div>\n// //       )}\n// //     </div>\n// //   );\n// // }\n\n// import React, { useState, useEffect } from \"react\";\n// import { Phone, PhoneCall, Mic, MicOff, Volume2, VolumeX } from \"lucide-react\";\n\n// export default function VoiceComplaint() {\n//   const [callState, setCallState] = useState(\"idle\"); // idle, calling, connected, ended\n//   const [isListening, setIsListening] = useState(false);\n//   const [isSpeaking, setIsSpeaking] = useState(false);\n//   const [callDuration, setCallDuration] = useState(0);\n//   const [logs, setLogs] = useState([]);\n//   const [loading, setLoading] = useState(false);\n//   const [complaintId, setComplaintId] = useState(null);\n//   const [submitted, setSubmitted] = useState(false);\n//   const [currentStep, setCurrentStep] = useState(\"\");\n\n//   // Timer for call duration\n//   useEffect(() => {\n//     let interval;\n//     if (callState === \"connected\") {\n//       interval = setInterval(() => {\n//         setCallDuration(prev => prev + 1);\n//       }, 1000);\n//     }\n//     return () => clearInterval(interval);\n//   }, [callState]);\n\n//   const formatTime = (seconds) => {\n//     const mins = Math.floor(seconds / 60);\n//     const secs = seconds % 60;\n//     return `${mins.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`;\n//   };\n\n//   const appendLog = (line, type = \"info\") => {\n//     setLogs((prev) => [...prev, { message: line, type, time: new Date().toLocaleTimeString() }]);\n//   };\n\n//   const startCall = async () => {\n//     setCallState(\"calling\");\n//     setCallDuration(0);\n//     setLogs([]);\n//     setComplaintId(null);\n//     setSubmitted(false);\n//     setCurrentStep(\"Connecting to JantaVoice...\");\n\n//     // Simulate connecting\n//     setTimeout(() => {\n//       setCallState(\"connected\");\n//       setCurrentStep(\"Connected - Starting voice complaint process\");\n//       appendLog(\"üîó Connected to JantaVoice system\", \"success\");\n//       handleVoiceComplaint();\n//     }, 2000);\n//   };\n\n//   const endCall = () => {\n//     setCallState(\"ended\");\n//     setIsListening(false);\n//     setIsSpeaking(false);\n//     setCurrentStep(submitted ? \"Call completed successfully\" : \"Call ended\");\n//     setTimeout(() => {\n//       setCallState(\"idle\");\n//       setCurrentStep(\"\");\n//     }, 3000);\n//   };\n\n//   const handleVoiceComplaint = async () => {\n//     setLoading(true);\n//     setIsSpeaking(true);\n//     appendLog(\"üéôÔ∏è Voice complaint started...\", \"info\");\n//     setCurrentStep(\"Processing voice input...\");\n\n//     try {\n//       // 1. Trigger the Python voice bot and get structured data\n//       setCurrentStep(\"Connecting to voice bot...\");\n//       appendLog(\"üìû Connecting to voice bot system...\", \"info\");\n\n//       const voiceRes = await fetch(\"http://localhost:5000/api/voice-complaint\");\n//       const voiceData = await voiceRes.json();\n\n//       if (voiceData.status !== \"success\") {\n//         appendLog(\"‚ùå Voice bot error: \" + voiceData.message, \"error\");\n//         setCurrentStep(\"Voice bot connection failed\");\n//         setIsSpeaking(false);\n//         return;\n//       }\n\n//       const complaintData = voiceData.data;\n//       setIsSpeaking(false);\n//       setCurrentStep(\"Voice conversation completed\");\n//       appendLog(\"‚úÖ Voice bot finished. Data collected:\", \"success\");\n//       appendLog(JSON.stringify(complaintData, null, 2), \"data\");\n\n//       // Show conversation details in a user-friendly way\n//       if (complaintData[\"‡§∂‡§ø‡§ï‡§æ‡§Ø‡§§\"]) {\n//         appendLog(`üìù Complaint: ${complaintData[\"‡§∂‡§ø‡§ï‡§æ‡§Ø‡§§\"]}`, \"conversation\");\n//       }\n//       if (complaintData[\"‡§∏‡•ç‡§•‡§æ‡§®\"]) {\n//         appendLog(`üìç Location: ${complaintData[\"‡§∏‡•ç‡§•‡§æ‡§®\"]}`, \"conversation\");\n//       }\n//       if (complaintData[\"‡§∂‡§ø‡§ï‡§æ‡§Ø‡§§‡§ï‡§∞‡•ç‡§§‡§æ ‡§ï‡§æ ‡§®‡§æ‡§Æ\"]) {\n//         appendLog(`üë§ Name: ${complaintData[\"‡§∂‡§ø‡§ï‡§æ‡§Ø‡§§‡§ï‡§∞‡•ç‡§§‡§æ ‡§ï‡§æ ‡§®‡§æ‡§Æ\"]}`, \"conversation\");\n//       }\n//       if (complaintData[\"‡§Æ‡•ã‡§¨‡§æ‡§á‡§≤ ‡§®‡§Ç‡§¨‡§∞\"]) {\n//         appendLog(`üì± Phone: ${complaintData[\"‡§Æ‡•ã‡§¨‡§æ‡§á‡§≤ ‡§®‡§Ç‡§¨‡§∞\"]}`, \"conversation\");\n//       }\n//       if (complaintData[\"‡§µ‡§ø‡§≠‡§æ‡§ó\"]) {\n//         appendLog(`üè¢ Department: ${complaintData[\"‡§µ‡§ø‡§≠‡§æ‡§ó\"]}`, \"conversation\");\n//       }\n\n//       // 2. Send that same data to the complaints endpoint\n//       setCurrentStep(\"Submitting to admin dashboard...\");\n//       appendLog(\"üì§ Submitting complaint to admin dashboard...\", \"info\");\n\n//       const formRes = await fetch(\"http://localhost:5000/api/complaint\", {\n//         method: \"POST\",\n//         headers: {\n//           \"Content-Type\": \"application/json\",\n//         },\n//         body: JSON.stringify({\n//             name: complaintData[\"‡§∂‡§ø‡§ï‡§æ‡§Ø‡§§‡§ï‡§∞‡•ç‡§§‡§æ ‡§ï‡§æ ‡§®‡§æ‡§Æ\"] || complaintData.name || \"Kunal Thakare\",\n//             description: complaintData[\"‡§∂‡§ø‡§ï‡§æ‡§Ø‡§§\"] || complaintData.complaint || \"No description\",\n//             location: complaintData[\"‡§∏‡•ç‡§•‡§æ‡§®\"] || complaintData.location || \"Unknown\",\n//             urgency: \"normal\", // Add missing urgency field\n//             department: complaintData[\"‡§µ‡§ø‡§≠‡§æ‡§ó\"] || complaintData.department || \"General\",\n//         }),\n\n//       });\n\n//       const formData = await formRes.json();\n\n//       // 3. Capture and display the Complaint ID\n//       const newId = formData.complaintId || complaintData.complaint_id || \"CMP-\" + Date.now();\n//       setComplaintId(newId);\n//       setSubmitted(true);\n//       setCurrentStep(\"Complaint registered successfully!\");\n//       appendLog(`üì¨ Complaint submitted to admin dashboard!`, \"success\");\n//       appendLog(`üÜî Complaint ID: ${newId}`, \"success\");\n//       appendLog(\"‚úÖ Admin will review and take action soon\", \"success\");\n\n//     } catch (err) {\n//       appendLog(\"‚ùå Error: \" + err.message, \"error\");\n//       setCurrentStep(\"Error occurred during processing\");\n//     } finally {\n//       setLoading(false);\n//       setIsSpeaking(false);\n//       setIsListening(false);\n//     }\n//   };\n\n//   const getLogIcon = (type) => {\n//     switch (type) {\n//       case \"success\": return \"‚úÖ\";\n//       case \"error\": return \"‚ùå\";\n//       case \"conversation\": return \"üí¨\";\n//       case \"data\": return \"üìä\";\n//       default: return \"‚ÑπÔ∏è\";\n//     }\n//   };\n\n//   const getLogColor = (type) => {\n//     switch (type) {\n//       case \"success\": return \"text-green-400\";\n//       case \"error\": return \"text-red-400\";\n//       case \"conversation\": return \"text-blue-400\";\n//       case \"data\": return \"text-yellow-400\";\n//       default: return \"text-gray-300\";\n//     }\n//   };\n\n//   return (\n//     <div className=\"max-w-md mx-auto mt-10 bg-gradient-to-b from-gray-900 to-gray-800 rounded-3xl p-6 text-white shadow-2xl\">\n//       {/* Header */}\n//       <div className=\"text-center mb-8\">\n//         <h2 className=\"text-xl font-semibold mb-2\">‡§ú‡§®‡§§‡§æ ‡§µ‡•â‡§á‡§∏</h2>\n//         <div className=\"text-sm text-gray-300\">‡§Ü‡§µ‡§æ‡§ú‡§º ‡§∂‡§ø‡§ï‡§æ‡§Ø‡§§ ‡§™‡•ç‡§∞‡§£‡§æ‡§≤‡•Ä</div>\n//       </div>\n\n//       {/* Call Status */}\n//       <div className=\"text-center mb-8\">\n//         {callState === \"idle\" && (\n//           <div>\n//             <div className=\"w-24 h-24 mx-auto mb-4 bg-green-600 rounded-full flex items-center justify-center\">\n//               <Phone size={32} />\n//             </div>\n//             <div className=\"text-lg\">‡§ï‡•â‡§≤ ‡§ï‡§∞‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§§‡•à‡§Ø‡§æ‡§∞</div>\n//             <div className=\"text-sm text-gray-400\">‡§µ‡•â‡§á‡§∏ ‡§∂‡§ø‡§ï‡§æ‡§Ø‡§§ ‡§∂‡•Å‡§∞‡•Ç ‡§ï‡§∞‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§ü‡•à‡§™ ‡§ï‡§∞‡•á‡§Ç</div>\n//           </div>\n//         )}\n\n//         {callState === \"calling\" && (\n//           <div>\n//             <div className=\"w-24 h-24 mx-auto mb-4 bg-yellow-600 rounded-full flex items-center justify-center animate-pulse\">\n//               <PhoneCall size={32} />\n//             </div>\n//             <div className=\"text-lg\">Connecting...</div>\n//             <div className=\"text-sm text-gray-400\">Please wait</div>\n//           </div>\n//         )}\n\n//         {callState === \"connected\" && (\n//           <div>\n//             <div className=\"w-24 h-24 mx-auto mb-4 bg-green-600 rounded-full flex items-center justify-center relative\">\n//               <PhoneCall size={32} />\n//               {(isListening || isSpeaking) && (\n//                 <div className=\"absolute -inset-2 border-4 border-green-400 rounded-full animate-ping\"></div>\n//               )}\n//             </div>\n//             <div className=\"text-lg\">Connected</div>\n//             <div className=\"text-sm text-gray-400\">Duration: {formatTime(callDuration)}</div>\n//             <div className=\"text-xs text-blue-400 mt-1\">{currentStep}</div>\n//           </div>\n//         )}\n\n//         {callState === \"ended\" && (\n//           <div>\n//             <div className=\"w-24 h-24 mx-auto mb-4 bg-red-600 rounded-full flex items-center justify-center\">\n//               <Phone size={32} />\n//             </div>\n//             <div className=\"text-lg\">Call Ended</div>\n//             <div className=\"text-sm text-gray-400\">\n//               {complaintId ? `Complaint ID: ${complaintId}` : \"Call completed\"}\n//             </div>\n//           </div>\n//         )}\n//       </div>\n\n//       {/* Status Indicators */}\n//       {callState === \"connected\" && (\n//         <div className=\"flex justify-center space-x-8 mb-6\">\n//           <div className={`flex items-center space-x-2 ${isSpeaking ? 'text-blue-400' : 'text-gray-500'}`}>\n//             {isSpeaking ? <Volume2 size={20} /> : <VolumeX size={20} />}\n//             <span className=\"text-sm\">Bot</span>\n//           </div>\n//           <div className={`flex items-center space-x-2 ${isListening ? 'text-green-400' : 'text-gray-500'}`}>\n//             {isListening ? <Mic size={20} /> : <MicOff size={20} />}\n//             <span className=\"text-sm\">You</span>\n//           </div>\n//         </div>\n//       )}\n\n//       {/* Call Controls */}\n//       <div className=\"flex justify-center space-x-4 mb-6\">\n//         {callState === \"idle\" && (\n//           <button\n//             onClick={startCall}\n//             disabled={loading}\n//             className=\"w-16 h-16 bg-green-600 hover:bg-green-700 disabled:opacity-50 rounded-full flex items-center justify-center transition-colors\"\n//           >\n//             <Phone size={24} />\n//           </button>\n//         )}\n\n//         {(callState === \"connected\" || callState === \"calling\") && (\n//           <button\n//             onClick={endCall}\n//             className=\"w-16 h-16 bg-red-600 hover:bg-red-700 rounded-full flex items-center justify-center transition-colors\"\n//           >\n//             <Phone size={24} className=\"transform rotate-45\" />\n//           </button>\n//         )}\n//       </div>\n\n//       {/* Real-time Logs */}\n//       {logs.length > 0 && (\n//         <div className=\"bg-gray-800 rounded-lg p-4 max-h-64 overflow-y-auto mb-4\">\n//           <div className=\"text-sm text-gray-400 mb-2\">Live Process Log:</div>\n//           {logs.map((log, index) => (\n//             <div key={index} className=\"mb-2 text-sm\">\n//               <div className={`${getLogColor(log.type)} break-words`}>\n//                 <span className=\"mr-2\">{getLogIcon(log.type)}</span>\n//                 {log.message}\n//                 <div className=\"text-xs opacity-50 ml-6\">{log.time}</div>\n//               </div>\n//             </div>\n//           ))}\n//         </div>\n//       )}\n\n//       {/* Success Message */}\n//       {submitted && (\n//         <div className=\"p-4 bg-green-900 border border-green-600 rounded-lg text-center\">\n//           <div className=\"text-green-400 font-semibold\">‚úÖ Complaint Registered!</div>\n//           <div className=\"text-sm text-green-300 mt-1\">ID: {complaintId}</div>\n//           <div className=\"text-xs text-green-200 mt-2\">\n//             Your complaint has been sent to the admin dashboard\n//           </div>\n//         </div>\n//       )}\n\n//       {/* Loading Indicator */}\n//       {loading && (\n//         <div className=\"text-center text-blue-400\">\n//           <div className=\"animate-spin rounded-full h-6 w-6 border-b-2 border-blue-400 mx-auto mb-2\"></div>\n//           <div className=\"text-sm\">Processing...</div>\n//         </div>\n//       )}\n//     </div>\n//   );\n// }\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { Phone, PhoneCall, Mic, MicOff, Volume2, VolumeX } from \"lucide-react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function VoiceComplaint() {\n  _s();\n  const [callState, setCallState] = useState(\"idle\"); // idle, calling, connected, ended\n  const [isListening, setIsListening] = useState(false);\n  const [isSpeaking, setIsSpeaking] = useState(false);\n  const [callDuration, setCallDuration] = useState(0);\n  const [logs, setLogs] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [complaintId, setComplaintId] = useState(null);\n  const [submitted, setSubmitted] = useState(false);\n  const [currentStep, setCurrentStep] = useState(\"\");\n\n  // Add ref to track if call should be aborted\n  const abortControllerRef = useRef(null);\n  const callAbortedRef = useRef(false);\n\n  // Timer for call duration\n  useEffect(() => {\n    let interval;\n    if (callState === \"connected\") {\n      interval = setInterval(() => {\n        setCallDuration(prev => prev + 1);\n      }, 1000);\n    }\n    return () => clearInterval(interval);\n  }, [callState]);\n  const formatTime = seconds => {\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${mins.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`;\n  };\n  const appendLog = (line, type = \"info\") => {\n    // Only append log if call hasn't been aborted\n    if (!callAbortedRef.current) {\n      setLogs(prev => [...prev, {\n        message: line,\n        type,\n        time: new Date().toLocaleTimeString()\n      }]);\n    }\n  };\n  const startCall = async () => {\n    setCallState(\"calling\");\n    setCallDuration(0);\n    setLogs([]);\n    setComplaintId(null);\n    setSubmitted(false);\n    setCurrentStep(\"Connecting to JantaVoice...\");\n    callAbortedRef.current = false;\n\n    // Create new abort controller for this call\n    abortControllerRef.current = new AbortController();\n\n    // Simulate connecting\n    setTimeout(() => {\n      if (!callAbortedRef.current) {\n        setCallState(\"connected\");\n        setCurrentStep(\"Connected - Starting voice complaint process\");\n        appendLog(\"üîó Connected to JantaVoice system\", \"success\");\n        handleVoiceComplaint();\n      }\n    }, 2000);\n  };\n  const endCall = () => {\n    // Set abort flag immediately\n    callAbortedRef.current = true;\n\n    // Abort any ongoing fetch requests\n    if (abortControllerRef.current) {\n      abortControllerRef.current.abort();\n    }\n\n    // Reset all states immediately\n    setCallState(\"ended\");\n    setIsListening(false);\n    setIsSpeaking(false);\n    setLoading(false);\n    setCurrentStep(\"Call ended by user\");\n\n    // Add final log entry\n    setLogs(prev => [...prev, {\n      message: \"üìû Call terminated by user\",\n      type: \"info\",\n      time: new Date().toLocaleTimeString()\n    }]);\n    setTimeout(() => {\n      setCallState(\"idle\");\n      setCurrentStep(\"\");\n    }, 3000);\n  };\n  const handleVoiceComplaint = async () => {\n    // Check if call was aborted before starting\n    if (callAbortedRef.current) return;\n    setLoading(true);\n    setIsSpeaking(true);\n    appendLog(\"üéôÔ∏è Voice complaint started...\", \"info\");\n    setCurrentStep(\"Processing voice input...\");\n    try {\n      var _abortControllerRef$c, _abortControllerRef$c2;\n      // 1. Trigger the Python voice bot and get structured data\n      setCurrentStep(\"Connecting to voice bot...\");\n      appendLog(\"üìû Connecting to voice bot system...\", \"info\");\n\n      // Check abort before fetch\n      if (callAbortedRef.current) return;\n\n      // Add timeout to the fetch request (30 seconds)\n      const timeoutPromise = new Promise((_, reject) => {\n        setTimeout(() => reject(new Error('Request timeout')), 30000);\n      });\n      const fetchPromise = fetch(\"http://localhost:5000/api/voice-complaint\", {\n        signal: (_abortControllerRef$c = abortControllerRef.current) === null || _abortControllerRef$c === void 0 ? void 0 : _abortControllerRef$c.signal\n      });\n      const voiceRes = await Promise.race([fetchPromise, timeoutPromise]);\n\n      // Check abort after fetch\n      if (callAbortedRef.current) return;\n      const voiceData = await voiceRes.json();\n      if (voiceData.status !== \"success\") {\n        if (!callAbortedRef.current) {\n          appendLog(\"‚ùå Voice bot error: \" + voiceData.message, \"error\");\n          setCurrentStep(\"Voice bot connection failed\");\n          setIsSpeaking(false);\n        }\n        return;\n      }\n\n      // Check abort before processing data\n      if (callAbortedRef.current) return;\n      const complaintData = voiceData.data;\n      setIsSpeaking(false);\n      setCurrentStep(\"Voice conversation completed\");\n      appendLog(\"‚úÖ Voice bot finished. Data collected:\", \"success\");\n      appendLog(JSON.stringify(complaintData, null, 2), \"data\");\n\n      // Show conversation details in a user-friendly way\n      if (complaintData[\"‡§∂‡§ø‡§ï‡§æ‡§Ø‡§§\"]) {\n        appendLog(`üìù Complaint: ${complaintData[\"‡§∂‡§ø‡§ï‡§æ‡§Ø‡§§\"]}`, \"conversation\");\n      }\n      if (complaintData[\"‡§∏‡•ç‡§•‡§æ‡§®\"]) {\n        appendLog(`üìç Location: ${complaintData[\"‡§∏‡•ç‡§•‡§æ‡§®\"]}`, \"conversation\");\n      }\n      if (complaintData[\"‡§∂‡§ø‡§ï‡§æ‡§Ø‡§§‡§ï‡§∞‡•ç‡§§‡§æ ‡§ï‡§æ ‡§®‡§æ‡§Æ\"]) {\n        appendLog(`üë§ Name: ${complaintData[\"‡§∂‡§ø‡§ï‡§æ‡§Ø‡§§‡§ï‡§∞‡•ç‡§§‡§æ ‡§ï‡§æ ‡§®‡§æ‡§Æ\"]}`, \"conversation\");\n      }\n      if (complaintData[\"‡§Æ‡•ã‡§¨‡§æ‡§á‡§≤ ‡§®‡§Ç‡§¨‡§∞\"]) {\n        appendLog(`üì± Phone: ${complaintData[\"‡§Æ‡•ã‡§¨‡§æ‡§á‡§≤ ‡§®‡§Ç‡§¨‡§∞\"]}`, \"conversation\");\n      }\n      if (complaintData[\"‡§µ‡§ø‡§≠‡§æ‡§ó\"]) {\n        appendLog(`üè¢ Department: ${complaintData[\"‡§µ‡§ø‡§≠‡§æ‡§ó\"]}`, \"conversation\");\n      }\n\n      // Check abort before submitting\n      if (callAbortedRef.current) return;\n\n      // 2. Send that same data to the complaints endpoint\n      setCurrentStep(\"Submitting to admin dashboard...\");\n      appendLog(\"üì§ Submitting complaint to admin dashboard...\", \"info\");\n      const formRes = await fetch(\"http://localhost:5000/api/complaint\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          name: complaintData[\"‡§∂‡§ø‡§ï‡§æ‡§Ø‡§§‡§ï‡§∞‡•ç‡§§‡§æ ‡§ï‡§æ ‡§®‡§æ‡§Æ\"] || complaintData.name || \"Kunal Thakare\",\n          description: complaintData[\"‡§∂‡§ø‡§ï‡§æ‡§Ø‡§§\"] || complaintData.complaint || \"No description\",\n          location: complaintData[\"‡§∏‡•ç‡§•‡§æ‡§®\"] || complaintData.location || \"Unknown\",\n          urgency: \"normal\",\n          // Add missing urgency field\n          department: complaintData[\"‡§µ‡§ø‡§≠‡§æ‡§ó\"] || complaintData.department || \"General\"\n        }),\n        signal: (_abortControllerRef$c2 = abortControllerRef.current) === null || _abortControllerRef$c2 === void 0 ? void 0 : _abortControllerRef$c2.signal\n      });\n\n      // Check abort after final submit\n      if (callAbortedRef.current) return;\n      const formData = await formRes.json();\n\n      // 3. Capture and display the Complaint ID\n      const newId = formData.complaintId || complaintData.complaint_id || \"CMP-\" + Date.now();\n      setComplaintId(newId);\n      setSubmitted(true);\n      setCurrentStep(\"Complaint registered successfully!\");\n      appendLog(`üì¨ Complaint submitted to admin dashboard!`, \"success\");\n      appendLog(`üÜî Complaint ID: ${newId}`, \"success\");\n      appendLog(\"‚úÖ Admin will review and take action soon\", \"success\");\n    } catch (err) {\n      // Only log errors if call wasn't aborted\n      if (!callAbortedRef.current) {\n        if (err.name === 'AbortError') {\n          appendLog(\"üö´ Request cancelled by user\", \"info\");\n          setCurrentStep(\"Call cancelled by user\");\n        } else if (err.message === 'Request timeout') {\n          appendLog(\"‚è∞ Voice bot request timed out\", \"error\");\n          setCurrentStep(\"Voice bot connection timed out\");\n        } else {\n          appendLog(\"‚ùå Error: \" + err.message, \"error\");\n          setCurrentStep(\"Error occurred during processing\");\n        }\n      }\n    } finally {\n      // Only update states if call wasn't aborted\n      if (!callAbortedRef.current) {\n        setLoading(false);\n        setIsSpeaking(false);\n        setIsListening(false);\n      }\n    }\n  };\n  const getLogIcon = type => {\n    switch (type) {\n      case \"success\":\n        return \"‚úÖ\";\n      case \"error\":\n        return \"‚ùå\";\n      case \"conversation\":\n        return \"üí¨\";\n      case \"data\":\n        return \"üìä\";\n      default:\n        return \"‚ÑπÔ∏è\";\n    }\n  };\n  const getLogColor = type => {\n    switch (type) {\n      case \"success\":\n        return \"text-green-400\";\n      case \"error\":\n        return \"text-red-400\";\n      case \"conversation\":\n        return \"text-blue-400\";\n      case \"data\":\n        return \"text-yellow-400\";\n      default:\n        return \"text-gray-300\";\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-md mx-auto mt-10 bg-gradient-to-b from-gray-900 to-gray-800 rounded-3xl p-6 text-white shadow-2xl\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center mb-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-xl font-semibold mb-2\",\n        children: \"\\u091C\\u0928\\u0924\\u093E \\u0935\\u0949\\u0907\\u0938\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 628,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-sm text-gray-300\",\n        children: \"\\u0906\\u0935\\u093E\\u091C\\u093C \\u0936\\u093F\\u0915\\u093E\\u092F\\u0924 \\u092A\\u094D\\u0930\\u0923\\u093E\\u0932\\u0940\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 629,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 627,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center mb-8\",\n      children: [callState === \"idle\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-24 h-24 mx-auto mb-4 bg-green-600 rounded-full flex items-center justify-center\",\n          children: /*#__PURE__*/_jsxDEV(Phone, {\n            size: 32\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 637,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 636,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-lg\",\n          children: \"\\u0915\\u0949\\u0932 \\u0915\\u0930\\u0928\\u0947 \\u0915\\u0947 \\u0932\\u093F\\u090F \\u0924\\u0948\\u092F\\u093E\\u0930\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 639,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-sm text-gray-400\",\n          children: \"\\u0935\\u0949\\u0907\\u0938 \\u0936\\u093F\\u0915\\u093E\\u092F\\u0924 \\u0936\\u0941\\u0930\\u0942 \\u0915\\u0930\\u0928\\u0947 \\u0915\\u0947 \\u0932\\u093F\\u090F \\u091F\\u0948\\u092A \\u0915\\u0930\\u0947\\u0902\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 640,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 635,\n        columnNumber: 11\n      }, this), callState === \"calling\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-24 h-24 mx-auto mb-4 bg-yellow-600 rounded-full flex items-center justify-center animate-pulse\",\n          children: /*#__PURE__*/_jsxDEV(PhoneCall, {\n            size: 32\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 647,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 646,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-lg\",\n          children: \"Connecting...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 649,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-sm text-gray-400\",\n          children: \"Please wait\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 650,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 645,\n        columnNumber: 11\n      }, this), callState === \"connected\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-24 h-24 mx-auto mb-4 bg-green-600 rounded-full flex items-center justify-center relative\",\n          children: [/*#__PURE__*/_jsxDEV(PhoneCall, {\n            size: 32\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 657,\n            columnNumber: 15\n          }, this), (isListening || isSpeaking) && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"absolute -inset-2 border-4 border-green-400 rounded-full animate-ping\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 659,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 656,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-lg\",\n          children: \"Connected\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 662,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-sm text-gray-400\",\n          children: [\"Duration: \", formatTime(callDuration)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 663,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-xs text-blue-400 mt-1\",\n          children: currentStep\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 664,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 655,\n        columnNumber: 11\n      }, this), callState === \"ended\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-24 h-24 mx-auto mb-4 bg-red-600 rounded-full flex items-center justify-center\",\n          children: /*#__PURE__*/_jsxDEV(Phone, {\n            size: 32\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 671,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 670,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-lg\",\n          children: \"Call Ended\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 673,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-sm text-gray-400\",\n          children: complaintId ? `Complaint ID: ${complaintId}` : \"Call completed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 674,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 669,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 633,\n      columnNumber: 7\n    }, this), callState === \"connected\" && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center space-x-8 mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `flex items-center space-x-2 ${isSpeaking ? 'text-blue-400' : 'text-gray-500'}`,\n        children: [isSpeaking ? /*#__PURE__*/_jsxDEV(Volume2, {\n          size: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 685,\n          columnNumber: 27\n        }, this) : /*#__PURE__*/_jsxDEV(VolumeX, {\n          size: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 685,\n          columnNumber: 51\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-sm\",\n          children: \"Bot\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 686,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 684,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `flex items-center space-x-2 ${isListening ? 'text-green-400' : 'text-gray-500'}`,\n        children: [isListening ? /*#__PURE__*/_jsxDEV(Mic, {\n          size: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 689,\n          columnNumber: 28\n        }, this) : /*#__PURE__*/_jsxDEV(MicOff, {\n          size: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 689,\n          columnNumber: 48\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-sm\",\n          children: \"You\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 690,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 688,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 683,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center space-x-4 mb-6\",\n      children: [callState === \"idle\" && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startCall,\n        disabled: loading,\n        className: \"w-16 h-16 bg-green-600 hover:bg-green-700 disabled:opacity-50 rounded-full flex items-center justify-center transition-colors\",\n        children: /*#__PURE__*/_jsxDEV(Phone, {\n          size: 24\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 703,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 698,\n        columnNumber: 11\n      }, this), (callState === \"connected\" || callState === \"calling\") && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: endCall,\n        className: \"w-16 h-16 bg-red-600 hover:bg-red-700 rounded-full flex items-center justify-center transition-colors\",\n        children: /*#__PURE__*/_jsxDEV(Phone, {\n          size: 24,\n          className: \"transform rotate-45\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 712,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 708,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 696,\n      columnNumber: 7\n    }, this), logs.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-gray-800 rounded-lg p-4 max-h-64 overflow-y-auto mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-sm text-gray-400 mb-2\",\n        children: \"Live Process Log:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 720,\n        columnNumber: 11\n      }, this), logs.map((log, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-2 text-sm\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `${getLogColor(log.type)} break-words`,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"mr-2\",\n            children: getLogIcon(log.type)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 724,\n            columnNumber: 17\n          }, this), log.message, /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-xs opacity-50 ml-6\",\n            children: log.time\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 726,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 723,\n          columnNumber: 15\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 722,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 719,\n      columnNumber: 9\n    }, this), submitted && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-4 bg-green-900 border border-green-600 rounded-lg text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-green-400 font-semibold\",\n        children: \"\\u2705 Complaint Registered!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 736,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-sm text-green-300 mt-1\",\n        children: [\"ID: \", complaintId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 737,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-xs text-green-200 mt-2\",\n        children: \"Your complaint has been sent to the admin dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 738,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 735,\n      columnNumber: 9\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center text-blue-400\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"animate-spin rounded-full h-6 w-6 border-b-2 border-blue-400 mx-auto mb-2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 747,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-sm\",\n        children: \"Processing...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 748,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 746,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 625,\n    columnNumber: 5\n  }, this);\n}\n_s(VoiceComplaint, \"XVysBg4WXyVBBhWqCb6kzcBRsK4=\");\n_c = VoiceComplaint;\nvar _c;\n$RefreshReg$(_c, \"VoiceComplaint\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Phone","PhoneCall","Mic","MicOff","Volume2","VolumeX","jsxDEV","_jsxDEV","VoiceComplaint","_s","callState","setCallState","isListening","setIsListening","isSpeaking","setIsSpeaking","callDuration","setCallDuration","logs","setLogs","loading","setLoading","complaintId","setComplaintId","submitted","setSubmitted","currentStep","setCurrentStep","abortControllerRef","callAbortedRef","interval","setInterval","prev","clearInterval","formatTime","seconds","mins","Math","floor","secs","toString","padStart","appendLog","line","type","current","message","time","Date","toLocaleTimeString","startCall","AbortController","setTimeout","handleVoiceComplaint","endCall","abort","_abortControllerRef$c","_abortControllerRef$c2","timeoutPromise","Promise","_","reject","Error","fetchPromise","fetch","signal","voiceRes","race","voiceData","json","status","complaintData","data","JSON","stringify","formRes","method","headers","body","name","description","complaint","location","urgency","department","formData","newId","complaint_id","now","err","getLogIcon","getLogColor","className","children","fileName","_jsxFileName","lineNumber","columnNumber","size","onClick","disabled","length","map","log","index","_c","$RefreshReg$"],"sources":["D:/Kunal Files/projects/janta_voice_new1/Janta_Voice_Final/frontend/src/pages/VoiceComplaint.jsx"],"sourcesContent":["// // import React, { useState } from \"react\";\r\n// // import axios from \"axios\";\r\n\r\n// // export default function VoiceComplaint() {\r\n// //   const [logs, setLogs] = useState([]);\r\n// //   const [loading, setLoading] = useState(false);\r\n// //   const [complaintId, setComplaintId] = useState(null);\r\n// //   const [submitted, setSubmitted] = useState(false);\r\n\r\n// //   const appendLog = (line) => {\r\n// //     setLogs((prev) => [...prev, line]);\r\n// //   };\r\n\r\n// //   const handleVoiceComplaint = async () => {\r\n// //     setLoading(true);\r\n// //     setLogs([\"üéôÔ∏è Voice complaint started...\"]);\r\n// //     setSubmitted(false);\r\n// //     setComplaintId(null);\r\n\r\n// //     try {\r\n// //       // 1. Trigger the Python voice bot and get structured data\r\n// //       const voiceRes = await axios.get(\"http://localhost:5000/api/\");\r\n// //       if (voiceRes.data.status !== \"success\") {\r\n// //         appendLog(\"‚ùå Voice bot error: \" + voiceRes.data.message);\r\n// //         return;\r\n// //       }\r\n\r\n// //       const complaintData = voiceRes.data.data;\r\n// //       appendLog(\"‚úÖ Voice bot finished. Data:\");\r\n// //       appendLog(JSON.stringify(complaintData, null, 2));\r\n\r\n// //       // 2. Send that same data to the complaints endpoint\r\n// //       const formRes = await axios.post(\r\n// //         \"http://localhost:5000/api/complaint\",\r\n// //         {\r\n// //           name: complaintData[\"‡§∂‡§ø‡§ï‡§æ‡§Ø‡§§‡§ï‡§∞‡•ç‡§§‡§æ ‡§ï‡§æ ‡§®‡§æ‡§Æ\"] || complaintData.name,\r\n// //           complaint: complaintData[\"‡§∂‡§ø‡§ï‡§æ‡§Ø‡§§\"] || complaintData.complaint,\r\n// //           location: complaintData[\"‡§∏‡•ç‡§•‡§æ‡§®\"] || complaintData.location,\r\n// //           // map any other fields if needed\r\n// //         }\r\n// //       );\r\n\r\n// //       // 3. Capture and display the Complaint ID\r\n// //       const newId = formRes.data.complaintId || formRes.data.complaintId;\r\n// //       setComplaintId(newId);\r\n// //       setSubmitted(true);\r\n// //       appendLog(`üì¨ Complaint submitted. ID: ${newId}`);\r\n// //     } catch (err) {\r\n// //       appendLog(\"‚ùå Error: \" + err.message);\r\n// //     } finally {\r\n// //       setLoading(false);\r\n// //     }\r\n// //   };\r\n\r\n// //   return (\r\n// //     <div className=\"max-w-xl mx-auto mt-10 p-6 bg-white rounded shadow\">\r\n// //       <h2 className=\"text-2xl font-semibold mb-4\">Voice Complaint</h2>\r\n// //       <button\r\n// //         onClick={handleVoiceComplaint}\r\n// //         disabled={loading}\r\n// //         className=\"bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700 disabled:opacity-50\"\r\n// //       >\r\n// //         {loading ? \"Processing...\" : \"Start Voice Complaint\"}\r\n// //       </button>\r\n\r\n// //       <div className=\"mt-6 bg-gray-900 text-green-200 p-4 rounded font-mono h-48 overflow-y-scroll\">\r\n// //         {logs.map((line, i) => (\r\n// //           <div key={i}>{line}</div>\r\n// //         ))}\r\n// //       </div>\r\n\r\n// //       {submitted && (\r\n// //         <div className=\"mt-6 text-green-700 font-semibold\">\r\n// //           Complaint submitted successfully!<br />\r\n// //           Your Complaint ID: <span className=\"font-bold\">{complaintId}</span>\r\n// //         </div>\r\n// //       )}\r\n// //     </div>\r\n// //   );\r\n// // }\r\n\r\n\r\n// import React, { useState, useEffect } from \"react\";\r\n// import { Phone, PhoneCall, Mic, MicOff, Volume2, VolumeX } from \"lucide-react\";\r\n\r\n// export default function VoiceComplaint() {\r\n//   const [callState, setCallState] = useState(\"idle\"); // idle, calling, connected, ended\r\n//   const [isListening, setIsListening] = useState(false);\r\n//   const [isSpeaking, setIsSpeaking] = useState(false);\r\n//   const [callDuration, setCallDuration] = useState(0);\r\n//   const [logs, setLogs] = useState([]);\r\n//   const [loading, setLoading] = useState(false);\r\n//   const [complaintId, setComplaintId] = useState(null);\r\n//   const [submitted, setSubmitted] = useState(false);\r\n//   const [currentStep, setCurrentStep] = useState(\"\");\r\n\r\n//   // Timer for call duration\r\n//   useEffect(() => {\r\n//     let interval;\r\n//     if (callState === \"connected\") {\r\n//       interval = setInterval(() => {\r\n//         setCallDuration(prev => prev + 1);\r\n//       }, 1000);\r\n//     }\r\n//     return () => clearInterval(interval);\r\n//   }, [callState]);\r\n\r\n//   const formatTime = (seconds) => {\r\n//     const mins = Math.floor(seconds / 60);\r\n//     const secs = seconds % 60;\r\n//     return `${mins.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`;\r\n//   };\r\n\r\n//   const appendLog = (line, type = \"info\") => {\r\n//     setLogs((prev) => [...prev, { message: line, type, time: new Date().toLocaleTimeString() }]);\r\n//   };\r\n\r\n//   const startCall = async () => {\r\n//     setCallState(\"calling\");\r\n//     setCallDuration(0);\r\n//     setLogs([]);\r\n//     setComplaintId(null);\r\n//     setSubmitted(false);\r\n//     setCurrentStep(\"Connecting to JantaVoice...\");\r\n    \r\n//     // Simulate connecting\r\n//     setTimeout(() => {\r\n//       setCallState(\"connected\");\r\n//       setCurrentStep(\"Connected - Starting voice complaint process\");\r\n//       appendLog(\"üîó Connected to JantaVoice system\", \"success\");\r\n//       handleVoiceComplaint();\r\n//     }, 2000);\r\n//   };\r\n\r\n//   const endCall = () => {\r\n//     setCallState(\"ended\");\r\n//     setIsListening(false);\r\n//     setIsSpeaking(false);\r\n//     setCurrentStep(submitted ? \"Call completed successfully\" : \"Call ended\");\r\n//     setTimeout(() => {\r\n//       setCallState(\"idle\");\r\n//       setCurrentStep(\"\");\r\n//     }, 3000);\r\n//   };\r\n\r\n//   const handleVoiceComplaint = async () => {\r\n//     setLoading(true);\r\n//     setIsSpeaking(true);\r\n//     appendLog(\"üéôÔ∏è Voice complaint started...\", \"info\");\r\n//     setCurrentStep(\"Processing voice input...\");\r\n\r\n//     try {\r\n//       // 1. Trigger the Python voice bot and get structured data\r\n//       setCurrentStep(\"Connecting to voice bot...\");\r\n//       appendLog(\"üìû Connecting to voice bot system...\", \"info\");\r\n      \r\n//       const voiceRes = await fetch(\"http://localhost:5000/api/voice-complaint\");\r\n//       const voiceData = await voiceRes.json();\r\n      \r\n//       if (voiceData.status !== \"success\") {\r\n//         appendLog(\"‚ùå Voice bot error: \" + voiceData.message, \"error\");\r\n//         setCurrentStep(\"Voice bot connection failed\");\r\n//         setIsSpeaking(false);\r\n//         return;\r\n//       }\r\n\r\n//       const complaintData = voiceData.data;\r\n//       setIsSpeaking(false);\r\n//       setCurrentStep(\"Voice conversation completed\");\r\n//       appendLog(\"‚úÖ Voice bot finished. Data collected:\", \"success\");\r\n//       appendLog(JSON.stringify(complaintData, null, 2), \"data\");\r\n\r\n//       // Show conversation details in a user-friendly way\r\n//       if (complaintData[\"‡§∂‡§ø‡§ï‡§æ‡§Ø‡§§\"]) {\r\n//         appendLog(`üìù Complaint: ${complaintData[\"‡§∂‡§ø‡§ï‡§æ‡§Ø‡§§\"]}`, \"conversation\");\r\n//       }\r\n//       if (complaintData[\"‡§∏‡•ç‡§•‡§æ‡§®\"]) {\r\n//         appendLog(`üìç Location: ${complaintData[\"‡§∏‡•ç‡§•‡§æ‡§®\"]}`, \"conversation\");\r\n//       }\r\n//       if (complaintData[\"‡§∂‡§ø‡§ï‡§æ‡§Ø‡§§‡§ï‡§∞‡•ç‡§§‡§æ ‡§ï‡§æ ‡§®‡§æ‡§Æ\"]) {\r\n//         appendLog(`üë§ Name: ${complaintData[\"‡§∂‡§ø‡§ï‡§æ‡§Ø‡§§‡§ï‡§∞‡•ç‡§§‡§æ ‡§ï‡§æ ‡§®‡§æ‡§Æ\"]}`, \"conversation\");\r\n//       }\r\n//       if (complaintData[\"‡§Æ‡•ã‡§¨‡§æ‡§á‡§≤ ‡§®‡§Ç‡§¨‡§∞\"]) {\r\n//         appendLog(`üì± Phone: ${complaintData[\"‡§Æ‡•ã‡§¨‡§æ‡§á‡§≤ ‡§®‡§Ç‡§¨‡§∞\"]}`, \"conversation\");\r\n//       }\r\n//       if (complaintData[\"‡§µ‡§ø‡§≠‡§æ‡§ó\"]) {\r\n//         appendLog(`üè¢ Department: ${complaintData[\"‡§µ‡§ø‡§≠‡§æ‡§ó\"]}`, \"conversation\");\r\n//       }\r\n\r\n//       // 2. Send that same data to the complaints endpoint\r\n//       setCurrentStep(\"Submitting to admin dashboard...\");\r\n//       appendLog(\"üì§ Submitting complaint to admin dashboard...\", \"info\");\r\n      \r\n//       const formRes = await fetch(\"http://localhost:5000/api/complaint\", {\r\n//         method: \"POST\",\r\n//         headers: {\r\n//           \"Content-Type\": \"application/json\",\r\n//         },\r\n//         body: JSON.stringify({\r\n//             name: complaintData[\"‡§∂‡§ø‡§ï‡§æ‡§Ø‡§§‡§ï‡§∞‡•ç‡§§‡§æ ‡§ï‡§æ ‡§®‡§æ‡§Æ\"] || complaintData.name || \"Kunal Thakare\",\r\n//             description: complaintData[\"‡§∂‡§ø‡§ï‡§æ‡§Ø‡§§\"] || complaintData.complaint || \"No description\",\r\n//             location: complaintData[\"‡§∏‡•ç‡§•‡§æ‡§®\"] || complaintData.location || \"Unknown\",\r\n//             urgency: \"normal\", // Add missing urgency field\r\n//             department: complaintData[\"‡§µ‡§ø‡§≠‡§æ‡§ó\"] || complaintData.department || \"General\",\r\n//         }),\r\n\r\n//       });\r\n\r\n//       const formData = await formRes.json();\r\n\r\n//       // 3. Capture and display the Complaint ID\r\n//       const newId = formData.complaintId || complaintData.complaint_id || \"CMP-\" + Date.now();\r\n//       setComplaintId(newId);\r\n//       setSubmitted(true);\r\n//       setCurrentStep(\"Complaint registered successfully!\");\r\n//       appendLog(`üì¨ Complaint submitted to admin dashboard!`, \"success\");\r\n//       appendLog(`üÜî Complaint ID: ${newId}`, \"success\");\r\n//       appendLog(\"‚úÖ Admin will review and take action soon\", \"success\");\r\n\r\n//     } catch (err) {\r\n//       appendLog(\"‚ùå Error: \" + err.message, \"error\");\r\n//       setCurrentStep(\"Error occurred during processing\");\r\n//     } finally {\r\n//       setLoading(false);\r\n//       setIsSpeaking(false);\r\n//       setIsListening(false);\r\n//     }\r\n//   };\r\n\r\n//   const getLogIcon = (type) => {\r\n//     switch (type) {\r\n//       case \"success\": return \"‚úÖ\";\r\n//       case \"error\": return \"‚ùå\";\r\n//       case \"conversation\": return \"üí¨\";\r\n//       case \"data\": return \"üìä\";\r\n//       default: return \"‚ÑπÔ∏è\";\r\n//     }\r\n//   };\r\n\r\n//   const getLogColor = (type) => {\r\n//     switch (type) {\r\n//       case \"success\": return \"text-green-400\";\r\n//       case \"error\": return \"text-red-400\";\r\n//       case \"conversation\": return \"text-blue-400\";\r\n//       case \"data\": return \"text-yellow-400\";\r\n//       default: return \"text-gray-300\";\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"max-w-md mx-auto mt-10 bg-gradient-to-b from-gray-900 to-gray-800 rounded-3xl p-6 text-white shadow-2xl\">\r\n//       {/* Header */}\r\n//       <div className=\"text-center mb-8\">\r\n//         <h2 className=\"text-xl font-semibold mb-2\">‡§ú‡§®‡§§‡§æ ‡§µ‡•â‡§á‡§∏</h2>\r\n//         <div className=\"text-sm text-gray-300\">‡§Ü‡§µ‡§æ‡§ú‡§º ‡§∂‡§ø‡§ï‡§æ‡§Ø‡§§ ‡§™‡•ç‡§∞‡§£‡§æ‡§≤‡•Ä</div>\r\n//       </div>\r\n\r\n//       {/* Call Status */}\r\n//       <div className=\"text-center mb-8\">\r\n//         {callState === \"idle\" && (\r\n//           <div>\r\n//             <div className=\"w-24 h-24 mx-auto mb-4 bg-green-600 rounded-full flex items-center justify-center\">\r\n//               <Phone size={32} />\r\n//             </div>\r\n//             <div className=\"text-lg\">‡§ï‡•â‡§≤ ‡§ï‡§∞‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§§‡•à‡§Ø‡§æ‡§∞</div>\r\n//             <div className=\"text-sm text-gray-400\">‡§µ‡•â‡§á‡§∏ ‡§∂‡§ø‡§ï‡§æ‡§Ø‡§§ ‡§∂‡•Å‡§∞‡•Ç ‡§ï‡§∞‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§ü‡•à‡§™ ‡§ï‡§∞‡•á‡§Ç</div>\r\n//           </div>\r\n//         )}\r\n\r\n//         {callState === \"calling\" && (\r\n//           <div>\r\n//             <div className=\"w-24 h-24 mx-auto mb-4 bg-yellow-600 rounded-full flex items-center justify-center animate-pulse\">\r\n//               <PhoneCall size={32} />\r\n//             </div>\r\n//             <div className=\"text-lg\">Connecting...</div>\r\n//             <div className=\"text-sm text-gray-400\">Please wait</div>\r\n//           </div>\r\n//         )}\r\n\r\n//         {callState === \"connected\" && (\r\n//           <div>\r\n//             <div className=\"w-24 h-24 mx-auto mb-4 bg-green-600 rounded-full flex items-center justify-center relative\">\r\n//               <PhoneCall size={32} />\r\n//               {(isListening || isSpeaking) && (\r\n//                 <div className=\"absolute -inset-2 border-4 border-green-400 rounded-full animate-ping\"></div>\r\n//               )}\r\n//             </div>\r\n//             <div className=\"text-lg\">Connected</div>\r\n//             <div className=\"text-sm text-gray-400\">Duration: {formatTime(callDuration)}</div>\r\n//             <div className=\"text-xs text-blue-400 mt-1\">{currentStep}</div>\r\n//           </div>\r\n//         )}\r\n\r\n//         {callState === \"ended\" && (\r\n//           <div>\r\n//             <div className=\"w-24 h-24 mx-auto mb-4 bg-red-600 rounded-full flex items-center justify-center\">\r\n//               <Phone size={32} />\r\n//             </div>\r\n//             <div className=\"text-lg\">Call Ended</div>\r\n//             <div className=\"text-sm text-gray-400\">\r\n//               {complaintId ? `Complaint ID: ${complaintId}` : \"Call completed\"}\r\n//             </div>\r\n//           </div>\r\n//         )}\r\n//       </div>\r\n\r\n//       {/* Status Indicators */}\r\n//       {callState === \"connected\" && (\r\n//         <div className=\"flex justify-center space-x-8 mb-6\">\r\n//           <div className={`flex items-center space-x-2 ${isSpeaking ? 'text-blue-400' : 'text-gray-500'}`}>\r\n//             {isSpeaking ? <Volume2 size={20} /> : <VolumeX size={20} />}\r\n//             <span className=\"text-sm\">Bot</span>\r\n//           </div>\r\n//           <div className={`flex items-center space-x-2 ${isListening ? 'text-green-400' : 'text-gray-500'}`}>\r\n//             {isListening ? <Mic size={20} /> : <MicOff size={20} />}\r\n//             <span className=\"text-sm\">You</span>\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n\r\n//       {/* Call Controls */}\r\n//       <div className=\"flex justify-center space-x-4 mb-6\">\r\n//         {callState === \"idle\" && (\r\n//           <button\r\n//             onClick={startCall}\r\n//             disabled={loading}\r\n//             className=\"w-16 h-16 bg-green-600 hover:bg-green-700 disabled:opacity-50 rounded-full flex items-center justify-center transition-colors\"\r\n//           >\r\n//             <Phone size={24} />\r\n//           </button>\r\n//         )}\r\n\r\n//         {(callState === \"connected\" || callState === \"calling\") && (\r\n//           <button\r\n//             onClick={endCall}\r\n//             className=\"w-16 h-16 bg-red-600 hover:bg-red-700 rounded-full flex items-center justify-center transition-colors\"\r\n//           >\r\n//             <Phone size={24} className=\"transform rotate-45\" />\r\n//           </button>\r\n//         )}\r\n//       </div>\r\n\r\n//       {/* Real-time Logs */}\r\n//       {logs.length > 0 && (\r\n//         <div className=\"bg-gray-800 rounded-lg p-4 max-h-64 overflow-y-auto mb-4\">\r\n//           <div className=\"text-sm text-gray-400 mb-2\">Live Process Log:</div>\r\n//           {logs.map((log, index) => (\r\n//             <div key={index} className=\"mb-2 text-sm\">\r\n//               <div className={`${getLogColor(log.type)} break-words`}>\r\n//                 <span className=\"mr-2\">{getLogIcon(log.type)}</span>\r\n//                 {log.message}\r\n//                 <div className=\"text-xs opacity-50 ml-6\">{log.time}</div>\r\n//               </div>\r\n//             </div>\r\n//           ))}\r\n//         </div>\r\n//       )}\r\n\r\n//       {/* Success Message */}\r\n//       {submitted && (\r\n//         <div className=\"p-4 bg-green-900 border border-green-600 rounded-lg text-center\">\r\n//           <div className=\"text-green-400 font-semibold\">‚úÖ Complaint Registered!</div>\r\n//           <div className=\"text-sm text-green-300 mt-1\">ID: {complaintId}</div>\r\n//           <div className=\"text-xs text-green-200 mt-2\">\r\n//             Your complaint has been sent to the admin dashboard\r\n//           </div>\r\n//         </div>\r\n//       )}\r\n\r\n//       {/* Loading Indicator */}\r\n//       {loading && (\r\n//         <div className=\"text-center text-blue-400\">\r\n//           <div className=\"animate-spin rounded-full h-6 w-6 border-b-2 border-blue-400 mx-auto mb-2\"></div>\r\n//           <div className=\"text-sm\">Processing...</div>\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n\r\nimport React, { useState, useEffect, useRef } from \"react\";\r\nimport { Phone, PhoneCall, Mic, MicOff, Volume2, VolumeX } from \"lucide-react\";\r\n\r\nexport default function VoiceComplaint() {\r\n  const [callState, setCallState] = useState(\"idle\"); // idle, calling, connected, ended\r\n  const [isListening, setIsListening] = useState(false);\r\n  const [isSpeaking, setIsSpeaking] = useState(false);\r\n  const [callDuration, setCallDuration] = useState(0);\r\n  const [logs, setLogs] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [complaintId, setComplaintId] = useState(null);\r\n  const [submitted, setSubmitted] = useState(false);\r\n  const [currentStep, setCurrentStep] = useState(\"\");\r\n  \r\n  // Add ref to track if call should be aborted\r\n  const abortControllerRef = useRef(null);\r\n  const callAbortedRef = useRef(false);\r\n\r\n  // Timer for call duration\r\n  useEffect(() => {\r\n    let interval;\r\n    if (callState === \"connected\") {\r\n      interval = setInterval(() => {\r\n        setCallDuration(prev => prev + 1);\r\n      }, 1000);\r\n    }\r\n    return () => clearInterval(interval);\r\n  }, [callState]);\r\n\r\n  const formatTime = (seconds) => {\r\n    const mins = Math.floor(seconds / 60);\r\n    const secs = seconds % 60;\r\n    return `${mins.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`;\r\n  };\r\n\r\n  const appendLog = (line, type = \"info\") => {\r\n    // Only append log if call hasn't been aborted\r\n    if (!callAbortedRef.current) {\r\n      setLogs((prev) => [...prev, { message: line, type, time: new Date().toLocaleTimeString() }]);\r\n    }\r\n  };\r\n\r\n  const startCall = async () => {\r\n    setCallState(\"calling\");\r\n    setCallDuration(0);\r\n    setLogs([]);\r\n    setComplaintId(null);\r\n    setSubmitted(false);\r\n    setCurrentStep(\"Connecting to JantaVoice...\");\r\n    callAbortedRef.current = false;\r\n    \r\n    // Create new abort controller for this call\r\n    abortControllerRef.current = new AbortController();\r\n    \r\n    // Simulate connecting\r\n    setTimeout(() => {\r\n      if (!callAbortedRef.current) {\r\n        setCallState(\"connected\");\r\n        setCurrentStep(\"Connected - Starting voice complaint process\");\r\n        appendLog(\"üîó Connected to JantaVoice system\", \"success\");\r\n        handleVoiceComplaint();\r\n      }\r\n    }, 2000);\r\n  };\r\n\r\n  const endCall = () => {\r\n    // Set abort flag immediately\r\n    callAbortedRef.current = true;\r\n    \r\n    // Abort any ongoing fetch requests\r\n    if (abortControllerRef.current) {\r\n      abortControllerRef.current.abort();\r\n    }\r\n    \r\n    // Reset all states immediately\r\n    setCallState(\"ended\");\r\n    setIsListening(false);\r\n    setIsSpeaking(false);\r\n    setLoading(false);\r\n    setCurrentStep(\"Call ended by user\");\r\n    \r\n    // Add final log entry\r\n    setLogs(prev => [...prev, { \r\n      message: \"üìû Call terminated by user\", \r\n      type: \"info\", \r\n      time: new Date().toLocaleTimeString() \r\n    }]);\r\n    \r\n    setTimeout(() => {\r\n      setCallState(\"idle\");\r\n      setCurrentStep(\"\");\r\n    }, 3000);\r\n  };\r\n\r\n  const handleVoiceComplaint = async () => {\r\n    // Check if call was aborted before starting\r\n    if (callAbortedRef.current) return;\r\n    \r\n    setLoading(true);\r\n    setIsSpeaking(true);\r\n    appendLog(\"üéôÔ∏è Voice complaint started...\", \"info\");\r\n    setCurrentStep(\"Processing voice input...\");\r\n\r\n    try {\r\n      // 1. Trigger the Python voice bot and get structured data\r\n      setCurrentStep(\"Connecting to voice bot...\");\r\n      appendLog(\"üìû Connecting to voice bot system...\", \"info\");\r\n      \r\n      // Check abort before fetch\r\n      if (callAbortedRef.current) return;\r\n      \r\n      // Add timeout to the fetch request (30 seconds)\r\n      const timeoutPromise = new Promise((_, reject) => {\r\n        setTimeout(() => reject(new Error('Request timeout')), 30000);\r\n      });\r\n      \r\n      const fetchPromise = fetch(\"http://localhost:5000/api/voice-complaint\", {\r\n        signal: abortControllerRef.current?.signal\r\n      });\r\n      \r\n      const voiceRes = await Promise.race([fetchPromise, timeoutPromise]);\r\n      \r\n      // Check abort after fetch\r\n      if (callAbortedRef.current) return;\r\n      \r\n      const voiceData = await voiceRes.json();\r\n      \r\n      if (voiceData.status !== \"success\") {\r\n        if (!callAbortedRef.current) {\r\n          appendLog(\"‚ùå Voice bot error: \" + voiceData.message, \"error\");\r\n          setCurrentStep(\"Voice bot connection failed\");\r\n          setIsSpeaking(false);\r\n        }\r\n        return;\r\n      }\r\n\r\n      // Check abort before processing data\r\n      if (callAbortedRef.current) return;\r\n\r\n      const complaintData = voiceData.data;\r\n      setIsSpeaking(false);\r\n      setCurrentStep(\"Voice conversation completed\");\r\n      appendLog(\"‚úÖ Voice bot finished. Data collected:\", \"success\");\r\n      appendLog(JSON.stringify(complaintData, null, 2), \"data\");\r\n\r\n      // Show conversation details in a user-friendly way\r\n      if (complaintData[\"‡§∂‡§ø‡§ï‡§æ‡§Ø‡§§\"]) {\r\n        appendLog(`üìù Complaint: ${complaintData[\"‡§∂‡§ø‡§ï‡§æ‡§Ø‡§§\"]}`, \"conversation\");\r\n      }\r\n      if (complaintData[\"‡§∏‡•ç‡§•‡§æ‡§®\"]) {\r\n        appendLog(`üìç Location: ${complaintData[\"‡§∏‡•ç‡§•‡§æ‡§®\"]}`, \"conversation\");\r\n      }\r\n      if (complaintData[\"‡§∂‡§ø‡§ï‡§æ‡§Ø‡§§‡§ï‡§∞‡•ç‡§§‡§æ ‡§ï‡§æ ‡§®‡§æ‡§Æ\"]) {\r\n        appendLog(`üë§ Name: ${complaintData[\"‡§∂‡§ø‡§ï‡§æ‡§Ø‡§§‡§ï‡§∞‡•ç‡§§‡§æ ‡§ï‡§æ ‡§®‡§æ‡§Æ\"]}`, \"conversation\");\r\n      }\r\n      if (complaintData[\"‡§Æ‡•ã‡§¨‡§æ‡§á‡§≤ ‡§®‡§Ç‡§¨‡§∞\"]) {\r\n        appendLog(`üì± Phone: ${complaintData[\"‡§Æ‡•ã‡§¨‡§æ‡§á‡§≤ ‡§®‡§Ç‡§¨‡§∞\"]}`, \"conversation\");\r\n      }\r\n      if (complaintData[\"‡§µ‡§ø‡§≠‡§æ‡§ó\"]) {\r\n        appendLog(`üè¢ Department: ${complaintData[\"‡§µ‡§ø‡§≠‡§æ‡§ó\"]}`, \"conversation\");\r\n      }\r\n\r\n      // Check abort before submitting\r\n      if (callAbortedRef.current) return;\r\n\r\n      // 2. Send that same data to the complaints endpoint\r\n      setCurrentStep(\"Submitting to admin dashboard...\");\r\n      appendLog(\"üì§ Submitting complaint to admin dashboard...\", \"info\");\r\n      \r\n      const formRes = await fetch(\"http://localhost:5000/api/complaint\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n            name: complaintData[\"‡§∂‡§ø‡§ï‡§æ‡§Ø‡§§‡§ï‡§∞‡•ç‡§§‡§æ ‡§ï‡§æ ‡§®‡§æ‡§Æ\"] || complaintData.name || \"Kunal Thakare\",\r\n            description: complaintData[\"‡§∂‡§ø‡§ï‡§æ‡§Ø‡§§\"] || complaintData.complaint || \"No description\",\r\n            location: complaintData[\"‡§∏‡•ç‡§•‡§æ‡§®\"] || complaintData.location || \"Unknown\",\r\n            urgency: \"normal\", // Add missing urgency field\r\n            department: complaintData[\"‡§µ‡§ø‡§≠‡§æ‡§ó\"] || complaintData.department || \"General\",\r\n        }),\r\n        signal: abortControllerRef.current?.signal\r\n      });\r\n\r\n      // Check abort after final submit\r\n      if (callAbortedRef.current) return;\r\n\r\n      const formData = await formRes.json();\r\n\r\n      // 3. Capture and display the Complaint ID\r\n      const newId = formData.complaintId || complaintData.complaint_id || \"CMP-\" + Date.now();\r\n      setComplaintId(newId);\r\n      setSubmitted(true);\r\n      setCurrentStep(\"Complaint registered successfully!\");\r\n      appendLog(`üì¨ Complaint submitted to admin dashboard!`, \"success\");\r\n      appendLog(`üÜî Complaint ID: ${newId}`, \"success\");\r\n      appendLog(\"‚úÖ Admin will review and take action soon\", \"success\");\r\n\r\n    } catch (err) {\r\n      // Only log errors if call wasn't aborted\r\n      if (!callAbortedRef.current) {\r\n        if (err.name === 'AbortError') {\r\n          appendLog(\"üö´ Request cancelled by user\", \"info\");\r\n          setCurrentStep(\"Call cancelled by user\");\r\n        } else if (err.message === 'Request timeout') {\r\n          appendLog(\"‚è∞ Voice bot request timed out\", \"error\");\r\n          setCurrentStep(\"Voice bot connection timed out\");\r\n        } else {\r\n          appendLog(\"‚ùå Error: \" + err.message, \"error\");\r\n          setCurrentStep(\"Error occurred during processing\");\r\n        }\r\n      }\r\n    } finally {\r\n      // Only update states if call wasn't aborted\r\n      if (!callAbortedRef.current) {\r\n        setLoading(false);\r\n        setIsSpeaking(false);\r\n        setIsListening(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  const getLogIcon = (type) => {\r\n    switch (type) {\r\n      case \"success\": return \"‚úÖ\";\r\n      case \"error\": return \"‚ùå\";\r\n      case \"conversation\": return \"üí¨\";\r\n      case \"data\": return \"üìä\";\r\n      default: return \"‚ÑπÔ∏è\";\r\n    }\r\n  };\r\n\r\n  const getLogColor = (type) => {\r\n    switch (type) {\r\n      case \"success\": return \"text-green-400\";\r\n      case \"error\": return \"text-red-400\";\r\n      case \"conversation\": return \"text-blue-400\";\r\n      case \"data\": return \"text-yellow-400\";\r\n      default: return \"text-gray-300\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"max-w-md mx-auto mt-10 bg-gradient-to-b from-gray-900 to-gray-800 rounded-3xl p-6 text-white shadow-2xl\">\r\n      {/* Header */}\r\n      <div className=\"text-center mb-8\">\r\n        <h2 className=\"text-xl font-semibold mb-2\">‡§ú‡§®‡§§‡§æ ‡§µ‡•â‡§á‡§∏</h2>\r\n        <div className=\"text-sm text-gray-300\">‡§Ü‡§µ‡§æ‡§ú‡§º ‡§∂‡§ø‡§ï‡§æ‡§Ø‡§§ ‡§™‡•ç‡§∞‡§£‡§æ‡§≤‡•Ä</div>\r\n      </div>\r\n\r\n      {/* Call Status */}\r\n      <div className=\"text-center mb-8\">\r\n        {callState === \"idle\" && (\r\n          <div>\r\n            <div className=\"w-24 h-24 mx-auto mb-4 bg-green-600 rounded-full flex items-center justify-center\">\r\n              <Phone size={32} />\r\n            </div>\r\n            <div className=\"text-lg\">‡§ï‡•â‡§≤ ‡§ï‡§∞‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§§‡•à‡§Ø‡§æ‡§∞</div>\r\n            <div className=\"text-sm text-gray-400\">‡§µ‡•â‡§á‡§∏ ‡§∂‡§ø‡§ï‡§æ‡§Ø‡§§ ‡§∂‡•Å‡§∞‡•Ç ‡§ï‡§∞‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§ü‡•à‡§™ ‡§ï‡§∞‡•á‡§Ç</div>\r\n          </div>\r\n        )}\r\n\r\n        {callState === \"calling\" && (\r\n          <div>\r\n            <div className=\"w-24 h-24 mx-auto mb-4 bg-yellow-600 rounded-full flex items-center justify-center animate-pulse\">\r\n              <PhoneCall size={32} />\r\n            </div>\r\n            <div className=\"text-lg\">Connecting...</div>\r\n            <div className=\"text-sm text-gray-400\">Please wait</div>\r\n          </div>\r\n        )}\r\n\r\n        {callState === \"connected\" && (\r\n          <div>\r\n            <div className=\"w-24 h-24 mx-auto mb-4 bg-green-600 rounded-full flex items-center justify-center relative\">\r\n              <PhoneCall size={32} />\r\n              {(isListening || isSpeaking) && (\r\n                <div className=\"absolute -inset-2 border-4 border-green-400 rounded-full animate-ping\"></div>\r\n              )}\r\n            </div>\r\n            <div className=\"text-lg\">Connected</div>\r\n            <div className=\"text-sm text-gray-400\">Duration: {formatTime(callDuration)}</div>\r\n            <div className=\"text-xs text-blue-400 mt-1\">{currentStep}</div>\r\n          </div>\r\n        )}\r\n\r\n        {callState === \"ended\" && (\r\n          <div>\r\n            <div className=\"w-24 h-24 mx-auto mb-4 bg-red-600 rounded-full flex items-center justify-center\">\r\n              <Phone size={32} />\r\n            </div>\r\n            <div className=\"text-lg\">Call Ended</div>\r\n            <div className=\"text-sm text-gray-400\">\r\n              {complaintId ? `Complaint ID: ${complaintId}` : \"Call completed\"}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Status Indicators */}\r\n      {callState === \"connected\" && (\r\n        <div className=\"flex justify-center space-x-8 mb-6\">\r\n          <div className={`flex items-center space-x-2 ${isSpeaking ? 'text-blue-400' : 'text-gray-500'}`}>\r\n            {isSpeaking ? <Volume2 size={20} /> : <VolumeX size={20} />}\r\n            <span className=\"text-sm\">Bot</span>\r\n          </div>\r\n          <div className={`flex items-center space-x-2 ${isListening ? 'text-green-400' : 'text-gray-500'}`}>\r\n            {isListening ? <Mic size={20} /> : <MicOff size={20} />}\r\n            <span className=\"text-sm\">You</span>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Call Controls */}\r\n      <div className=\"flex justify-center space-x-4 mb-6\">\r\n        {callState === \"idle\" && (\r\n          <button\r\n            onClick={startCall}\r\n            disabled={loading}\r\n            className=\"w-16 h-16 bg-green-600 hover:bg-green-700 disabled:opacity-50 rounded-full flex items-center justify-center transition-colors\"\r\n          >\r\n            <Phone size={24} />\r\n          </button>\r\n        )}\r\n\r\n        {(callState === \"connected\" || callState === \"calling\") && (\r\n          <button\r\n            onClick={endCall}\r\n            className=\"w-16 h-16 bg-red-600 hover:bg-red-700 rounded-full flex items-center justify-center transition-colors\"\r\n          >\r\n            <Phone size={24} className=\"transform rotate-45\" />\r\n          </button>\r\n        )}\r\n      </div>\r\n\r\n      {/* Real-time Logs */}\r\n      {logs.length > 0 && (\r\n        <div className=\"bg-gray-800 rounded-lg p-4 max-h-64 overflow-y-auto mb-4\">\r\n          <div className=\"text-sm text-gray-400 mb-2\">Live Process Log:</div>\r\n          {logs.map((log, index) => (\r\n            <div key={index} className=\"mb-2 text-sm\">\r\n              <div className={`${getLogColor(log.type)} break-words`}>\r\n                <span className=\"mr-2\">{getLogIcon(log.type)}</span>\r\n                {log.message}\r\n                <div className=\"text-xs opacity-50 ml-6\">{log.time}</div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n\r\n      {/* Success Message */}\r\n      {submitted && (\r\n        <div className=\"p-4 bg-green-900 border border-green-600 rounded-lg text-center\">\r\n          <div className=\"text-green-400 font-semibold\">‚úÖ Complaint Registered!</div>\r\n          <div className=\"text-sm text-green-300 mt-1\">ID: {complaintId}</div>\r\n          <div className=\"text-xs text-green-200 mt-2\">\r\n            Your complaint has been sent to the admin dashboard\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Loading Indicator */}\r\n      {loading && (\r\n        <div className=\"text-center text-blue-400\">\r\n          <div className=\"animate-spin rounded-full h-6 w-6 border-b-2 border-blue-400 mx-auto mb-2\"></div>\r\n          <div className=\"text-sm\">Processing...</div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}"],"mappings":";;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}